{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lorenzo\\\\Desktop\\\\chatbot\\\\react-frontend\\\\src\\\\MarkdownRenderer.js\";\nimport React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport remarkGfm from 'remark-gfm';\n\n// 1. Error Boundary Component\n// This class component will catch rendering errors in its children.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass MarkdownErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false\n    };\n  }\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return {\n      hasError: true\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    // You can also log the error to an error reporting service\n    console.error(\"Error rendering Markdown:\", error, errorInfo);\n  }\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: \"Error: Impossibile renderizzare questo contenuto.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 14\n      }, this);\n    }\n    return this.props.children;\n  }\n}\n\n// 2. Memoized Markdown Renderer Component\n// This component handles the actual rendering and is wrapped by the Error Boundary.\nconst MemoizedMarkdownRenderer = /*#__PURE__*/React.memo(_c = ({\n  content\n}) => {\n  // More robust content sanitization to handle objects and other types\n  let sanitizedContent;\n  if (typeof content === 'string') {\n    sanitizedContent = content;\n  } else if (content === null || content === undefined) {\n    sanitizedContent = '';\n  } else if (typeof content === 'object') {\n    // Handle objects and arrays\n    try {\n      sanitizedContent = JSON.stringify(content, null, 2);\n    } catch (e) {\n      sanitizedContent = \"[Contenuto non serializzabile]\";\n    }\n  } else if (typeof content.toString === 'function') {\n    sanitizedContent = content.toString();\n  } else {\n    sanitizedContent = String(content);\n  }\n\n  // Ensure we always have a valid string\n  const stringContent = sanitizedContent || '';\n\n  // Additional check to ensure we're not passing undefined\n  if (stringContent === undefined || stringContent === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Contenuto vuoto\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Function to format the markdown content with emojis and better spacing\n  const formatMarkdownContent = content => {\n    // Add emojis to headers (but preserve content)\n    content = content.replace(/^# (.+)$/gm, '## ðŸš€ $1');\n    content = content.replace(/^## (.+)$/gm, '### ðŸ’¡ $1');\n    content = content.replace(/^### (.+)$/gm, '#### ðŸ“Œ $1');\n\n    // Add spacing before headers\n    content = content.replace(/(\\n)(#+ )/g, '\\n\\n$2');\n\n    // Add spacing after paragraphs\n    content = content.replace(/(\\n\\n[^#\\n].*)(\\n\\n#)/g, '$1\\n\\n---\\n$2');\n\n    // Format blockquotes with emojis\n    content = content.replace(/^> (.+)$/gm, '> ðŸ¤– $1');\n\n    // Add spacing around lists\n    content = content.replace(/(\\n)([+-] )/g, '\\n\\n$2');\n\n    // Ensure proper line breaks\n    content = content.replace(/\\n{3,}/g, '\\n\\n');\n    return content;\n  };\n  const formattedContent = formatMarkdownContent(stringContent);\n  return /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n    remarkPlugins: [remarkGfm],\n    components: {\n      // Add custom styling for blockquotes\n      blockquote: ({\n        node,\n        ...props\n      }) => /*#__PURE__*/_jsxDEV(\"blockquote\", {\n        style: {\n          borderLeft: '4px solid #10a37f',\n          paddingLeft: '16px',\n          marginLeft: '0',\n          color: '#d1d5db',\n          fontStyle: 'italic'\n        },\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this),\n      // Add custom styling for code blocks\n      code: ({\n        node,\n        inline,\n        className,\n        children,\n        ...props\n      }) => {\n        if (inline) {\n          return /*#__PURE__*/_jsxDEV(\"code\", {\n            style: {\n              backgroundColor: '#3c3c3c',\n              padding: '2px 4px',\n              borderRadius: '4px',\n              color: '#10a37f'\n            },\n            ...props,\n            children: children\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this);\n        }\n        return /*#__PURE__*/_jsxDEV(\"code\", {\n          className: className,\n          style: {\n            backgroundColor: '#3c3c3c',\n            color: '#ffffff',\n            padding: '16px',\n            borderRadius: '8px',\n            display: 'block',\n            overflowX: 'auto'\n          },\n          ...props,\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this);\n      },\n      // Add custom styling for lists\n      ul: ({\n        node,\n        ...props\n      }) => /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          paddingLeft: '20px'\n        },\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this),\n      li: ({\n        node,\n        ...props\n      }) => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          marginBottom: '8px'\n        },\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this),\n      // Add custom styling for headers\n      h1: ({\n        node,\n        ...props\n      }) => /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          borderBottom: '1px solid #4b5563',\n          paddingBottom: '8px',\n          marginBottom: '16px',\n          color: '#ffffff'\n        },\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this),\n      h2: ({\n        node,\n        ...props\n      }) => /*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          marginTop: '24px',\n          marginBottom: '12px',\n          color: '#ffffff'\n        },\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this),\n      h3: ({\n        node,\n        ...props\n      }) => /*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          marginTop: '20px',\n          marginBottom: '10px',\n          color: '#ffffff'\n        },\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this),\n      h4: ({\n        node,\n        ...props\n      }) => /*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          marginTop: '16px',\n          marginBottom: '8px',\n          color: '#d1d5db'\n        },\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this),\n      // Add custom styling for paragraphs\n      p: ({\n        node,\n        ...props\n      }) => /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          marginBottom: '16px',\n          lineHeight: '1.6'\n        },\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this)\n    },\n    children: formattedContent\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n});\n\n// 3. Main Component to be exported\n// This component combines the Error Boundary and the Renderer.\n_c2 = MemoizedMarkdownRenderer;\nconst MarkdownRenderer = ({\n  content\n}) => {\n  // Ensure content is a string before passing it down\n  let stringContent;\n  if (typeof content === 'string') {\n    stringContent = content;\n  } else if (content === null || content === undefined) {\n    stringContent = '';\n  } else if (typeof content === 'object') {\n    // Handle objects and arrays\n    try {\n      stringContent = JSON.stringify(content, null, 2);\n    } catch (e) {\n      stringContent = \"[Contenuto non serializzabile]\";\n    }\n  } else if (typeof content.toString === 'function') {\n    stringContent = content.toString();\n  } else {\n    stringContent = String(content);\n  }\n\n  // Additional check to ensure we're not passing undefined\n  if (stringContent === undefined || stringContent === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Contenuto vuoto\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(MarkdownErrorBoundary, {\n    children: /*#__PURE__*/_jsxDEV(MemoizedMarkdownRenderer, {\n      content: stringContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 219,\n    columnNumber: 5\n  }, this);\n};\n_c3 = MarkdownRenderer;\nexport default MarkdownRenderer;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"MemoizedMarkdownRenderer$React.memo\");\n$RefreshReg$(_c2, \"MemoizedMarkdownRenderer\");\n$RefreshReg$(_c3, \"MarkdownRenderer\");","map":{"version":3,"names":["React","ReactMarkdown","remarkGfm","jsxDEV","_jsxDEV","MarkdownErrorBoundary","Component","constructor","props","state","hasError","getDerivedStateFromError","error","componentDidCatch","errorInfo","console","render","children","fileName","_jsxFileName","lineNumber","columnNumber","MemoizedMarkdownRenderer","memo","_c","content","sanitizedContent","undefined","JSON","stringify","e","toString","String","stringContent","formatMarkdownContent","replace","formattedContent","remarkPlugins","components","blockquote","node","style","borderLeft","paddingLeft","marginLeft","color","fontStyle","code","inline","className","backgroundColor","padding","borderRadius","display","overflowX","ul","li","marginBottom","h1","borderBottom","paddingBottom","h2","marginTop","h3","h4","p","lineHeight","_c2","MarkdownRenderer","_c3","$RefreshReg$"],"sources":["C:/Users/Lorenzo/Desktop/chatbot/react-frontend/src/MarkdownRenderer.js"],"sourcesContent":["import React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport remarkGfm from 'remark-gfm';\n\n// 1. Error Boundary Component\n// This class component will catch rendering errors in its children.\nclass MarkdownErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // You can also log the error to an error reporting service\n    console.error(\"Error rendering Markdown:\", error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return <pre>Error: Impossibile renderizzare questo contenuto.</pre>;\n    }\n\n    return this.props.children;\n  }\n}\n\n// 2. Memoized Markdown Renderer Component\n// This component handles the actual rendering and is wrapped by the Error Boundary.\nconst MemoizedMarkdownRenderer = React.memo(({ content }) => {\n  // More robust content sanitization to handle objects and other types\n  let sanitizedContent;\n  \n  if (typeof content === 'string') {\n    sanitizedContent = content;\n  } else if (content === null || content === undefined) {\n    sanitizedContent = '';\n  } else if (typeof content === 'object') {\n    // Handle objects and arrays\n    try {\n      sanitizedContent = JSON.stringify(content, null, 2);\n    } catch (e) {\n      sanitizedContent = \"[Contenuto non serializzabile]\";\n    }\n  } else if (typeof content.toString === 'function') {\n    sanitizedContent = content.toString();\n  } else {\n    sanitizedContent = String(content);\n  }\n  \n  // Ensure we always have a valid string\n  const stringContent = sanitizedContent || '';\n  \n  // Additional check to ensure we're not passing undefined\n  if (stringContent === undefined || stringContent === null) {\n    return <div>Contenuto vuoto</div>;\n  }\n  \n  // Function to format the markdown content with emojis and better spacing\n  const formatMarkdownContent = (content) => {\n    // Add emojis to headers (but preserve content)\n    content = content.replace(/^# (.+)$/gm, '## ðŸš€ $1');\n    content = content.replace(/^## (.+)$/gm, '### ðŸ’¡ $1');\n    content = content.replace(/^### (.+)$/gm, '#### ðŸ“Œ $1');\n    \n    // Add spacing before headers\n    content = content.replace(/(\\n)(#+ )/g, '\\n\\n$2');\n    \n    // Add spacing after paragraphs\n    content = content.replace(/(\\n\\n[^#\\n].*)(\\n\\n#)/g, '$1\\n\\n---\\n$2');\n    \n    // Format blockquotes with emojis\n    content = content.replace(/^> (.+)$/gm, '> ðŸ¤– $1');\n    \n    // Add spacing around lists\n    content = content.replace(/(\\n)([+-] )/g, '\\n\\n$2');\n    \n    // Ensure proper line breaks\n    content = content.replace(/\\n{3,}/g, '\\n\\n');\n    \n    return content;\n  };\n  \n  const formattedContent = formatMarkdownContent(stringContent);\n  \n  return (\n    <ReactMarkdown \n      remarkPlugins={[remarkGfm]}\n      components={{\n        // Add custom styling for blockquotes\n        blockquote: ({node, ...props}) => (\n          <blockquote style={{ \n            borderLeft: '4px solid #10a37f', \n            paddingLeft: '16px', \n            marginLeft: '0',\n            color: '#d1d5db',\n            fontStyle: 'italic'\n          }} {...props} />\n        ),\n        // Add custom styling for code blocks\n        code: ({node, inline, className, children, ...props}) => {\n          if (inline) {\n            return (\n              <code \n                style={{ \n                  backgroundColor: '#3c3c3c', \n                  padding: '2px 4px', \n                  borderRadius: '4px',\n                  color: '#10a37f'\n                }} \n                {...props}\n              >\n                {children}\n              </code>\n            );\n          }\n          return (\n            <code \n              className={className} \n              style={{ \n                backgroundColor: '#3c3c3c',\n                color: '#ffffff',\n                padding: '16px',\n                borderRadius: '8px',\n                display: 'block',\n                overflowX: 'auto'\n              }} \n              {...props}\n            >\n              {children}\n            </code>\n          );\n        },\n        // Add custom styling for lists\n        ul: ({node, ...props}) => (\n          <ul style={{ paddingLeft: '20px' }} {...props} />\n        ),\n        li: ({node, ...props}) => (\n          <li style={{ marginBottom: '8px' }} {...props} />\n        ),\n        // Add custom styling for headers\n        h1: ({node, ...props}) => (\n          <h1 style={{ \n            borderBottom: '1px solid #4b5563', \n            paddingBottom: '8px',\n            marginBottom: '16px',\n            color: '#ffffff'\n          }} {...props} />\n        ),\n        h2: ({node, ...props}) => (\n          <h2 style={{ \n            marginTop: '24px',\n            marginBottom: '12px',\n            color: '#ffffff'\n          }} {...props} />\n        ),\n        h3: ({node, ...props}) => (\n          <h3 style={{ \n            marginTop: '20px',\n            marginBottom: '10px',\n            color: '#ffffff'\n          }} {...props} />\n        ),\n        h4: ({node, ...props}) => (\n          <h4 style={{ \n            marginTop: '16px',\n            marginBottom: '8px',\n            color: '#d1d5db'\n          }} {...props} />\n        ),\n        // Add custom styling for paragraphs\n        p: ({node, ...props}) => (\n          <p style={{ \n            marginBottom: '16px',\n            lineHeight: '1.6'\n          }} {...props} />\n        )\n      }}\n    >\n      {formattedContent}\n    </ReactMarkdown>\n  );\n});\n\n// 3. Main Component to be exported\n// This component combines the Error Boundary and the Renderer.\nconst MarkdownRenderer = ({ content }) => {\n  // Ensure content is a string before passing it down\n  let stringContent;\n  \n  if (typeof content === 'string') {\n    stringContent = content;\n  } else if (content === null || content === undefined) {\n    stringContent = '';\n  } else if (typeof content === 'object') {\n    // Handle objects and arrays\n    try {\n      stringContent = JSON.stringify(content, null, 2);\n    } catch (e) {\n      stringContent = \"[Contenuto non serializzabile]\";\n    }\n  } else if (typeof content.toString === 'function') {\n    stringContent = content.toString();\n  } else {\n    stringContent = String(content);\n  }\n  \n  // Additional check to ensure we're not passing undefined\n  if (stringContent === undefined || stringContent === null) {\n    return <div>Contenuto vuoto</div>;\n  }\n  \n  return (\n    <MarkdownErrorBoundary>\n      <MemoizedMarkdownRenderer content={stringContent} />\n    </MarkdownErrorBoundary>\n  );\n};\n\nexport default MarkdownRenderer;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}