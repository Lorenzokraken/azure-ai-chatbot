{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lorenzo\\\\Desktop\\\\chatbot-local\\\\azure-ai-chatbot\\\\react-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\n// Rimosso l'import di ReactMarkdown e remarkGfm\nimport MarkdownRenderer from './MarkdownRenderer'; // Importa il nuovo componente\nimport './style.css';\nimport { Send, MessageSquare, Plus, Trash2, Edit2, Upload, File, X, Database, FileText, BarChart3, FolderOpen, Settings, Zap, Brain, Power, Clock, StopCircle } from 'lucide-react';\n\n// Configurazione\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PROVIDERS = [{\n  value: 'azure',\n  label: 'Azure'\n}, {\n  value: 'local',\n  label: 'Local'\n}, {\n  value: 'openrouter',\n  label: 'OpenRouter'\n}];\nconst MODELS = {\n  azure: [{\n    value: 'gpt-4.1',\n    label: 'GPT-4.1 (Azure)'\n  }],\n  local: [{\n    value: 'qwen/qwen3-4b-thinking-2507',\n    label: 'Qwen3-4B (Local)'\n  }],\n  openrouter: [\n  // Modelli più affidabili - testare prima di aggiungere altri\n  {\n    value: 'meta-llama/llama-3.1-8b-instruct:free',\n    label: 'Llama 3.1 8B (Free)'\n  }, {\n    value: 'microsoft/phi-3-mini-128k-instruct:free',\n    label: 'Phi-3 Mini (Free)'\n  }, {\n    value: 'google/gemma-2-9b-it:free',\n    label: 'Gemma 2 9B (Free)'\n  }]\n};\nfunction App() {\n  _s();\n  var _availableModels$sett;\n  // Elementi DOM\n  const chatMessagesRef = useRef(null);\n  const userInputRef = useRef(null);\n  const sendButtonRef = useRef(null);\n  // Rimosso modelSelectRef perché non più utilizzato\n\n  // Stato per i modelli dinamici\n  const [availableModels, setAvailableModels] = useState(MODELS);\n\n  // Funzione per caricare le impostazioni dal localStorage\n  const loadSettingsFromStorage = () => {\n    const savedSettings = localStorage.getItem('krakenGPT-settings');\n    if (savedSettings) {\n      try {\n        var _MODELS$;\n        const parsed = JSON.parse(savedSettings);\n        return {\n          provider: parsed.provider || 'azure',\n          model: parsed.model || ((_MODELS$ = MODELS[parsed.provider || 'azure'][0]) === null || _MODELS$ === void 0 ? void 0 : _MODELS$.value) || MODELS['azure'][0].value,\n          temperature: parsed.temperature || 0.7,\n          maxTokens: parsed.maxTokens || 13107\n        };\n      } catch (e) {\n        console.error('Errore nel caricamento delle impostazioni:', e);\n      }\n    }\n    return {\n      provider: 'azure',\n      model: MODELS['azure'][0].value,\n      temperature: 0.7,\n      maxTokens: 13107\n    };\n  };\n\n  // Stato\n  const [userInput, setUserInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [isBotTyping, setIsBotTyping] = useState(false);\n  const [settings, setSettings] = useState(loadSettingsFromStorage());\n  const [showSettings, setShowSettings] = useState(false);\n  const [sidebarOpen, setSidebarOpen] = useState(false); // Sidebar chiusa di default\n  const [projects, setProjects] = useState([]);\n  const [projectChats, setProjectChats] = useState([]); // Chat del progetto corrente\n  const [independentChats, setIndependentChats] = useState([]); // Chat indipendenti\n  const [currentProject, setCurrentProject] = useState(null);\n  const [currentChat, setCurrentChat] = useState(null);\n  const [showProjectForm, setShowProjectForm] = useState(false);\n  const [editingProject, setEditingProject] = useState(null);\n  const [inputExpanded, setInputExpanded] = useState(false); // Stato per input espanso\n  const [projectForm, setProjectForm] = useState({\n    name: '',\n    description: '',\n    prompt: ''\n  });\n  const [showChatForm, setShowChatForm] = useState(false);\n  const [chatForm, setChatForm] = useState({\n    title: '',\n    projectId: null\n  });\n  const [showContextModal, setShowContextModal] = useState(false);\n  const [currentContext, setCurrentContext] = useState(\"\");\n\n  // Stato streaming\n  const [currentBotMessage, setCurrentBotMessage] = useState('');\n\n  // Stato per il pulsante stop e timer\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [abortController, setAbortController] = useState(null);\n  const [responseTime, setResponseTime] = useState(null);\n  const [startTime, setStartTime] = useState(null);\n\n  // RAG State - Gestione documenti\n  const [documents, setDocuments] = useState([]);\n  const [showUploadModal, setShowUploadModal] = useState(false);\n  const [uploading, setUploading] = useState(false);\n  const [ragStats, setRagStats] = useState({\n    documents: 0,\n    chunks: 0,\n    status: 'empty'\n  });\n\n  // Inizializzazione\n\n  // Funzione per salvare le impostazioni nel localStorage\n  const saveSettingsToStorage = newSettings => {\n    localStorage.setItem('krakenGPT-settings', JSON.stringify(newSettings));\n  };\n\n  // Carica modelli dal backend\n  const loadModels = useCallback(async () => {\n    try {\n      const response = await fetch('/models');\n      if (response.ok) {\n        const data = await response.json();\n        console.log(\"Modelli ricevuti dal backend:\", data);\n\n        // Aggiorna i modelli disponibili\n        const newModels = {\n          azure: data.models.azure.map(model => ({\n            value: model,\n            label: model.replace('gpt-', 'GPT-').replace('-', ' ').toUpperCase()\n          })),\n          openrouter: data.models.openrouter.map(model => ({\n            value: model,\n            label: model.includes(':free') ? `${model.split('/')[1]} (Free)` : model.split('/')[1] || model\n          })),\n          local: data.models.local.map(model => ({\n            value: model,\n            label: `${model} (Local)`\n          }))\n        };\n        setAvailableModels(newModels);\n        console.log(\"Modelli aggiornati:\", newModels);\n      }\n    } catch (err) {\n      console.error(\"Errore caricamento modelli:\", err);\n    }\n  }, []);\n\n  // Carica progetti dal backend\n  const loadProjects = useCallback(async () => {\n    try {\n      const response = await fetch('/api/projects');\n      if (response.ok) {\n        const data = await response.json();\n        setProjects(data);\n        if (data.length > 0) {\n          setCurrentProject(data[0]);\n          loadChats(data[0].id);\n        }\n      }\n    } catch (err) {\n      console.error(\"Errore caricamento progetti:\", err);\n    }\n  }, []);\n\n  // Carica chat per un progetto\n  async function loadChats(projectId) {\n    try {\n      const response = await fetch(`/api/projects/${projectId}/chats`);\n      if (response.ok) {\n        const data = await response.json();\n        setProjectChats(data);\n      }\n    } catch (err) {\n      console.error(\"Errore caricamento chat:\", err);\n    }\n  }\n\n  // Carica messaggi di una chat specifica\n  async function loadChatMessages(chatId) {\n    try {\n      const response = await fetch(`/api/chats/${chatId}`);\n      if (response.ok) {\n        const chat = await response.json();\n\n        // Converti i timestamp da stringhe a oggetti Date\n        // E converti i ruoli 'bot' in 'assistant' per compatibilità con Azure AI\n        const messagesWithDates = (chat.messages || []).map(msg => ({\n          ...msg,\n          role: msg.role === 'bot' ? 'assistant' : msg.role,\n          timestamp: new Date(msg.timestamp)\n        }));\n        setMessages(messagesWithDates);\n      }\n    } catch (err) {\n      console.error(\"Errore caricamento messaggi:\", err);\n    }\n  }\n\n  // Salva messaggi di una chat\n  async function saveChatMessages(chatId, messages) {\n    try {\n      const response = await fetch(`/api/chats/${chatId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          messages: messages\n        })\n      });\n      if (!response.ok) {\n        console.error(\"Errore salvataggio messaggi:\", response.statusText);\n      }\n    } catch (err) {\n      console.error(\"Errore salvataggio messaggi:\", err);\n    }\n  }\n\n  // Carica chat indipendenti (per ora vuoto, da implementare nel backend)\n  async function loadIndependentChats() {\n    try {\n      // TODO: Implementare API per chat indipendenti nel backend\n      // const response = await fetch('/api/independent-chats');\n      // if (response.ok) {\n      //     const data = await response.json();\n      //     setIndependentChats(data);\n      // }\n      setIndependentChats([]);\n    } catch (err) {\n      console.error(\"Errore caricamento chat indipendenti:\", err);\n    }\n  }\n\n  // RAG Functions - Document management\n  async function loadDocuments(projectId) {\n    if (!projectId) return;\n    try {\n      const response = await fetch(`/api/projects/${projectId}/documents`);\n      if (response.ok) {\n        const data = await response.json();\n        setDocuments(data.documents || []);\n        setRagStats(data.stats || {\n          documents: 0,\n          chunks: 0,\n          status: 'empty'\n        });\n      }\n    } catch (err) {\n      console.error(\"Errore caricamento documenti:\", err);\n    }\n  }\n  async function uploadDocument(file) {\n    if (!currentProject) return;\n    setUploading(true);\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      const response = await fetch(`/api/projects/${currentProject.id}/upload-doc`, {\n        method: 'POST',\n        body: formData\n      });\n      if (response.ok) {\n        const result = await response.json();\n        console.log('Documento caricato:', result);\n\n        // Ricarica documenti\n        await loadDocuments(currentProject.id);\n        setShowUploadModal(false);\n\n        // Mostra notifica successo\n        alert(`Documento caricato con successo!\\n\\nStatistiche: ${result.stats.documents} documenti, ${result.stats.chunks} chunks`);\n      } else {\n        const error = await response.json();\n        alert(`Errore upload: ${error.detail}`);\n      }\n    } catch (err) {\n      console.error('Errore upload:', err);\n      alert('Errore upload documento');\n    } finally {\n      setUploading(false);\n    }\n  }\n  async function deleteDocument(docId, filename) {\n    if (!window.confirm(`Eliminare il documento \"${filename}\"?`)) return;\n    try {\n      const response = await fetch(`/api/documents/${docId}`, {\n        method: 'DELETE'\n      });\n      if (response.ok) {\n        console.log('Documento eliminato:', filename);\n\n        // Ricarica documenti\n        if (currentProject) {\n          await loadDocuments(currentProject.id);\n        }\n        alert(`Documento \"${filename}\" eliminato`);\n      } else {\n        alert('Errore eliminazione documento');\n      }\n    } catch (err) {\n      console.error('Errore eliminazione:', err);\n      alert('Errore eliminazione documento');\n    }\n  }\n\n  // Inizializzazione\n  useEffect(() => {\n    loadModels(); // Carica i modelli dinamici per primi\n    loadSupportedModels();\n    loadProjects();\n    loadIndependentChats();\n  }, [loadProjects, loadModels]); // Dipendenza corretta con useCallback\n\n  // RAG: Carica documenti quando cambia progetto\n  useEffect(() => {\n    if (currentProject) {\n      loadDocuments(currentProject.id);\n    } else {\n      setDocuments([]);\n      setRagStats({\n        documents: 0,\n        chunks: 0,\n        status: 'empty'\n      });\n    }\n  }, [currentProject]);\n\n  // Apri form per nuovo progetto\n  function openProjectForm(project = null) {\n    if (project) {\n      setEditingProject(project);\n      setProjectForm({\n        name: project.name,\n        description: project.description || '',\n        prompt: project.prompt || ''\n      });\n    } else {\n      setEditingProject(null);\n      setProjectForm({\n        name: '',\n        description: '',\n        prompt: ''\n      });\n    }\n    setShowProjectForm(true);\n  }\n\n  // Chiudi form progetto\n  function closeProjectForm() {\n    setShowProjectForm(false);\n    setEditingProject(null);\n    setProjectForm({\n      name: '',\n      description: '',\n      prompt: ''\n    });\n  }\n\n  // Salva progetto (crea o modifica)\n  async function saveProject(e) {\n    e.preventDefault();\n    if (!projectForm.name.trim()) return;\n    try {\n      const url = editingProject ? `/api/projects/${editingProject.id}` : '/api/projects';\n      const method = editingProject ? 'PUT' : 'POST';\n      const response = await fetch(url, {\n        method: method,\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: projectForm.name.trim(),\n          description: projectForm.description.trim(),\n          prompt: projectForm.prompt.trim()\n        })\n      });\n      if (response.ok) {\n        const savedProject = await response.json();\n        if (editingProject) {\n          // Aggiorna progetto esistente\n          setProjects(prev => prev.map(p => p.id === editingProject.id ? savedProject : p));\n          if ((currentProject === null || currentProject === void 0 ? void 0 : currentProject.id) === editingProject.id) {\n            setCurrentProject(savedProject);\n          }\n        } else {\n          // Aggiungi nuovo progetto\n          setProjects(prev => [...prev, savedProject]);\n          setCurrentProject(savedProject);\n          setProjectChats([]);\n        }\n        closeProjectForm();\n      }\n    } catch (err) {\n      console.error(\"Errore salvataggio progetto:\", err);\n    }\n  }\n\n  // Elimina progetto\n  async function deleteProject(projectId) {\n    if (!window.confirm(\"Sei sicuro di voler eliminare questo progetto?\")) return;\n    try {\n      const response = await fetch(`/api/projects/${projectId}`, {\n        method: 'DELETE'\n      });\n      if (response.ok) {\n        setProjects(prev => prev.filter(p => p.id !== projectId));\n        if ((currentProject === null || currentProject === void 0 ? void 0 : currentProject.id) === projectId) {\n          setCurrentProject(null);\n          setProjectChats([]);\n        }\n      }\n    } catch (err) {\n      console.error(\"Errore eliminazione progetto:\", err);\n    }\n  }\n\n  // Elimina chat\n  async function deleteChat(chatId, isIndependent = false) {\n    if (!window.confirm(\"Sei sicuro di voler eliminare questa chat? Questa azione non può essere annullata.\")) return;\n    try {\n      const response = await fetch(`/api/chats/${chatId}`, {\n        method: 'DELETE'\n      });\n      if (response.ok) {\n        if (isIndependent) {\n          setIndependentChats(prev => prev.filter(c => c.id !== chatId));\n        } else {\n          setProjectChats(prev => prev.filter(c => c.id !== chatId));\n        }\n\n        // Se la chat eliminata è quella corrente, deseleziona\n        if ((currentChat === null || currentChat === void 0 ? void 0 : currentChat.id) === chatId) {\n          setCurrentChat(null);\n          setMessages([]);\n        }\n      }\n    } catch (err) {\n      console.error(\"Errore eliminazione chat:\", err);\n    }\n  }\n\n  // Apri form per nuova chat\n  function openChatForm() {\n    setChatForm({\n      title: '',\n      projectId: (currentProject === null || currentProject === void 0 ? void 0 : currentProject.id) || null\n    });\n    setShowChatForm(true);\n  }\n\n  // Chiudi form chat\n  function closeChatForm() {\n    setShowChatForm(false);\n    setChatForm({\n      title: '',\n      projectId: null\n    });\n  }\n\n  // Crea nuova chat\n  async function createChat(e) {\n    e.preventDefault();\n    if (!chatForm.title.trim()) return;\n    try {\n      // Per ora, le chat indipendenti non sono supportate dal backend\n      // Creiamo sempre una chat di progetto\n      const projectId = chatForm.projectId || (projects.length > 0 ? projects[0].id : null);\n      if (!projectId) {\n        alert(\"Crea prima un progetto per poter creare chat!\");\n        return;\n      }\n      const response = await fetch('/api/chats', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          project_id: projectId,\n          title: chatForm.title.trim(),\n          messages: []\n        })\n      });\n      if (response.ok) {\n        const newChat = await response.json();\n\n        // Aggiorna la lista delle chat del progetto\n        setProjectChats(prev => [...prev, newChat]);\n\n        // Se è il progetto corrente, seleziona la chat\n        if ((currentProject === null || currentProject === void 0 ? void 0 : currentProject.id) === projectId) {\n          setCurrentChat(newChat);\n          setMessages([]);\n        }\n        closeChatForm();\n      }\n    } catch (err) {\n      console.error(\"Errore creazione chat:\", err);\n    }\n  }\n\n  // Salva il contesto della chat\n  async function saveChatContext() {\n    if (!currentChat) return;\n    try {\n      const response = await fetch(`/api/chats/${currentChat.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          context: currentContext\n        })\n      });\n      if (response.ok) {\n        const updatedChat = await response.json();\n        // Aggiorna la chat corrente nello stato per riflettere il nuovo contesto\n        setCurrentChat(updatedChat);\n        // Aggiorna anche la lista delle chat\n        if (updatedChat.project_id) {\n          setProjectChats(prev => prev.map(c => c.id === updatedChat.id ? updatedChat : c));\n        } else {\n          setIndependentChats(prev => prev.map(c => c.id === updatedChat.id ? updatedChat : c));\n        }\n      }\n    } catch (err) {\n      console.error(\"Errore salvataggio contesto:\", err);\n    } finally {\n      setShowContextModal(false);\n    }\n  }\n\n  // Effetto per lo scroll automatico\n  useEffect(() => {\n    if (chatMessagesRef.current) {\n      chatMessagesRef.current.scrollTop = chatMessagesRef.current.scrollHeight;\n    }\n  }, [messages, isBotTyping]);\n\n  // Carica modelli dal backend\n  async function loadSupportedModels() {\n    try {\n      const response = await fetch('/models');\n      if (response.ok) {\n        const data = await response.json();\n        console.log(\"Modelli supportati:\", data.models);\n      }\n    } catch (err) {\n      console.error(\"Errore caricamento modelli:\", err);\n    }\n  }\n\n  // Invio messaggio\n  function sendMessage(e) {\n    e.preventDefault();\n    const text = userInput.trim();\n    if (!text || isGenerating) return;\n\n    // Aggiungi messaggio utente\n    const userMsg = {\n      id: Date.now(),\n      role: 'user',\n      content: text,\n      timestamp: new Date()\n    };\n    const updatedMessages = [...messages, userMsg];\n    setMessages(updatedMessages);\n    setUserInput('');\n    setIsBotTyping(true);\n    setCurrentBotMessage('');\n    setIsGenerating(true);\n    setResponseTime(null);\n    setStartTime(Date.now());\n\n    // Salva i messaggi nel database se c'è una chat corrente\n    if (currentChat) {\n      saveChatMessages(currentChat.id, updatedMessages);\n    }\n\n    // Ottieni risposta del bot\n    getBotResponse(updatedMessages);\n  }\n\n  // Risposta Bot (Streaming)\n  async function getBotResponse(currentMessages) {\n    const controller = new AbortController();\n    setAbortController(controller);\n    try {\n      console.log(\"Inviando richiesta al bot con modello:\", settings.model);\n      const systemMessage = `You are KrakenGPT, a helpful AI coding partner. \n\nIMPORTANT: Always format your responses using proper Markdown syntax:\n- Use ## for main headers and ### for subheaders\n- Use * or - for bullet points (lists)\n- Use numbered lists (1. 2. 3.) when appropriate\n- Use \\`code\\` for inline code and \\`\\`\\`language for code blocks\n- Use **bold** and *italic* for emphasis\n- Structure your responses clearly with headers and lists\n- Never use plain text without formatting\n\nExamples:\n## Main Topic\n- First bullet point\n- Second bullet point\n\n### Subtopic\n1. First numbered item\n2. Second numbered item\n\nUse proper spacing and formatting to make responses easy to read.`;\n      const context = (currentChat === null || currentChat === void 0 ? void 0 : currentChat.context) || \"\";\n      const systemMessageWithContext = context ? `${systemMessage}\\n\\n--- CONTEXT ---\\n${context}\\n--- END CONTEXT ---` : systemMessage;\n\n      // Formatta i messaggi per l'API (solo 'role' e 'content')\n      // Azure AI richiede ruoli specifici: 'system', 'assistant', 'user', 'function', 'tool', 'developer'\n      const apiMessages = currentMessages.map(({\n        role,\n        content\n      }) => {\n        // Converti 'bot' in 'assistant' per compatibilità con Azure AI\n        const azureRole = role === 'bot' ? 'assistant' : role;\n        return {\n          role: azureRole,\n          content\n        };\n      });\n      const requestBody = {\n        provider: settings.provider,\n        model: settings.model,\n        messages: [{\n          role: \"system\",\n          content: systemMessageWithContext\n        }, ...apiMessages],\n        temperature: settings.temperature,\n        max_tokens: settings.maxTokens,\n        stream: true,\n        chat_id: currentChat === null || currentChat === void 0 ? void 0 : currentChat.id // RAG: Aggiungi chat_id per attivare RAG\n      };\n      console.log(\"Corpo della richiesta:\", requestBody);\n      const response = await fetch('/v1/chat/completions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(requestBody),\n        signal: controller.signal\n      });\n      console.log(\"Risposta ricevuta:\", response.status, response.statusText);\n      console.log(\"Headers della risposta:\", [...response.headers.entries()]);\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error(\"Errore HTTP:\", response.status, errorText);\n        throw new Error(`HTTP ${response.status}: ${errorText}`);\n      }\n\n      // Verifica se la risposta è effettivamente uno stream\n      if (!response.body) {\n        console.error(\"La risposta non contiene un body streamabile\");\n        throw new Error(\"La risposta non contiene un body streamabile\");\n      }\n      const reader = response.body.getReader();\n      const decoder = new TextDecoder();\n      let buffer = \"\";\n      let botMessageContent = \"\";\n      let chunkCount = 0;\n      let hasReceivedContent = false;\n      while (true) {\n        const {\n          done,\n          value\n        } = await reader.read();\n        chunkCount++;\n        console.log(`Chunk ${chunkCount}: done=${done}, value length=${(value === null || value === void 0 ? void 0 : value.length) || 0}`);\n        if (done) {\n          console.log(\"Stream completato\");\n          break;\n        }\n\n        // Segnala che abbiamo ricevuto almeno un chunk\n        hasReceivedContent = true;\n        buffer += decoder.decode(value, {\n          stream: true\n        });\n        const lines = buffer.split(\"\\n\");\n        buffer = lines.pop();\n        for (const line of lines) {\n          console.log(\"Linea ricevuta:\", line);\n          if (line.startsWith(\"data: \")) {\n            const jsonStr = line.slice(6);\n            if (jsonStr === \"[DONE]\") {\n              console.log(\"Stream terminato con [DONE]\");\n              break;\n            }\n            try {\n              var _data$choices, _data$choices$, _data$choices$$delta;\n              const data = JSON.parse(jsonStr);\n              console.log(\"Dati ricevuti:\", data);\n              const content = (_data$choices = data.choices) === null || _data$choices === void 0 ? void 0 : (_data$choices$ = _data$choices[0]) === null || _data$choices$ === void 0 ? void 0 : (_data$choices$$delta = _data$choices$.delta) === null || _data$choices$$delta === void 0 ? void 0 : _data$choices$$delta.content;\n              if (content) {\n                botMessageContent += content;\n                setCurrentBotMessage(botMessageContent);\n              }\n            } catch (e) {\n              console.warn(\"Parse error:\", e, \"Line:\", line);\n            }\n          }\n        }\n      }\n      console.log(\"Contenuto finale del bot:\", botMessageContent);\n\n      // Determina il contenuto del messaggio del bot\n      let finalContent;\n      if (!hasReceivedContent) {\n        finalContent = \"Nessuna risposta ricevuta dal modello. Il server ha restituito una risposta vuota.\";\n      } else if (!botMessageContent) {\n        finalContent = \"Nessun contenuto ricevuto dal modello. La risposta potrebbe essere stata interrotta.\";\n      } else {\n        finalContent = botMessageContent;\n      }\n\n      // Aggiungi messaggio completo del bot\n      const botMsg = {\n        id: Date.now(),\n        role: 'assistant',\n        // Usiamo 'assistant' invece di 'bot' per compatibilità con Azure AI\n        content: finalContent,\n        timestamp: new Date()\n      };\n      setMessages(prev => {\n        const updatedMessages = [...prev, botMsg];\n\n        // Salva i messaggi nel database se c'è una chat corrente\n        if (currentChat) {\n          saveChatMessages(currentChat.id, updatedMessages);\n        }\n        return updatedMessages;\n      });\n    } catch (error) {\n      console.error(\"Errore completo:\", error);\n\n      // Se l'errore è dovuto a AbortController, non mostrare messaggio di errore\n      if (error.name === 'AbortError') {\n        const abortMsg = {\n          id: Date.now(),\n          role: 'bot',\n          content: 'Risposta interrotta dall\\'utente.',\n          timestamp: new Date()\n        };\n        setMessages(prev => {\n          const updatedMessages = [...prev, abortMsg];\n\n          // Salva i messaggi nel database se c'è una chat corrente\n          if (currentChat) {\n            saveChatMessages(currentChat.id, updatedMessages);\n          }\n          return updatedMessages;\n        });\n      } else {\n        const errorMsg = {\n          id: Date.now(),\n          role: 'bot',\n          content: `Errore: ${error.message}`,\n          timestamp: new Date()\n        };\n        setMessages(prev => {\n          const updatedMessages = [...prev, errorMsg];\n\n          // Salva i messaggi nel database se c'è una chat corrente\n          if (currentChat) {\n            saveChatMessages(currentChat.id, updatedMessages);\n          }\n          return updatedMessages;\n        });\n      }\n    } finally {\n      // Calcola il tempo di risposta\n      if (startTime) {\n        const endTime = Date.now();\n        const responseTimeMs = endTime - startTime;\n        setResponseTime(responseTimeMs);\n      }\n      setIsBotTyping(false);\n      setCurrentBotMessage('');\n      setIsGenerating(false);\n      setAbortController(null);\n    }\n  }\n\n  // Funzione per fermare la generazione\n  function stopGeneration() {\n    if (abortController) {\n      abortController.abort();\n    }\n  }\n\n  // Copia codice negli appunti\n  // Salva impostazioni\n  function saveSettings() {\n    var _document$getElementB, _document$getElementB2, _document$getElementB3, _document$getElementB4;\n    const provider = ((_document$getElementB = document.getElementById('provider-select')) === null || _document$getElementB === void 0 ? void 0 : _document$getElementB.value) || settings.provider;\n    const model = ((_document$getElementB2 = document.getElementById('model-select')) === null || _document$getElementB2 === void 0 ? void 0 : _document$getElementB2.value) || settings.model;\n    setSettings({\n      provider,\n      model,\n      temperature: parseFloat(((_document$getElementB3 = document.getElementById('temperature')) === null || _document$getElementB3 === void 0 ? void 0 : _document$getElementB3.value) || settings.temperature),\n      maxTokens: parseInt(((_document$getElementB4 = document.getElementById('max-tokens')) === null || _document$getElementB4 === void 0 ? void 0 : _document$getElementB4.value) || settings.maxTokens)\n    });\n    setShowSettings(false);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: `sidebar ${sidebarOpen ? 'open' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"KrakenGPT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 846,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"icon-btn close-sidebar-btn\",\n          onClick: () => setSidebarOpen(false),\n          title: \"Chiudi sidebar\",\n          children: \"\\u2630\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 847,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 845,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"sidebar-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [/*#__PURE__*/_jsxDEV(FolderOpen, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 859,\n              columnNumber: 29\n            }, this), \" Progetti\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 859,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"icon-btn new-project-btn\",\n            onClick: () => openProjectForm(),\n            title: \"Nuovo Progetto\",\n            \"aria-label\": \"Crea nuovo progetto\",\n            children: /*#__PURE__*/_jsxDEV(Plus, {\n              size: 14\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 866,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 860,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 858,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"projects-list\",\n          children: projects.map(project => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: `sidebar-item project-item ${(currentProject === null || currentProject === void 0 ? void 0 : currentProject.id) === project.id ? 'active' : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"project-name\",\n              onClick: () => {\n                setCurrentProject(project);\n                loadChats(project.id);\n              },\n              children: project.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 875,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"project-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"icon-btn edit-project-btn\",\n                onClick: e => {\n                  e.stopPropagation();\n                  openProjectForm(project);\n                },\n                title: \"Modifica progetto\",\n                \"aria-label\": \"Modifica progetto\",\n                children: /*#__PURE__*/_jsxDEV(Edit2, {\n                  size: 12\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 894,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 885,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"icon-btn delete-project-btn\",\n                onClick: e => {\n                  e.stopPropagation();\n                  deleteProject(project.id);\n                },\n                title: \"Elimina progetto\",\n                \"aria-label\": \"Elimina progetto\",\n                children: /*#__PURE__*/_jsxDEV(Trash2, {\n                  size: 12\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 905,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 896,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 884,\n              columnNumber: 33\n            }, this)]\n          }, project.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 871,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 869,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 857,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"sidebar-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [/*#__PURE__*/_jsxDEV(MessageSquare, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 916,\n              columnNumber: 29\n            }, this), \" Chat recenti\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 916,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"icon-btn new-chat-btn\",\n            onClick: openChatForm,\n            title: \"Nuova Chat\",\n            \"aria-label\": \"Avvia nuova chat\",\n            children: /*#__PURE__*/_jsxDEV(Plus, {\n              size: 14\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 923,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 917,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 915,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"conversation-history\",\n          children: [projectChats.map(chat => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: `sidebar-item chat-item ${(currentChat === null || currentChat === void 0 ? void 0 : currentChat.id) === chat.id ? 'active' : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat-content\",\n              onClick: () => {\n                setCurrentChat(chat);\n                loadChatMessages(chat.id);\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chat-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"chat-title\",\n                  children: chat.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 940,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"chat-project\",\n                  children: currentProject === null || currentProject === void 0 ? void 0 : currentProject.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 941,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 939,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 932,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat-actions\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"icon-btn delete-chat-btn\",\n                onClick: e => {\n                  e.stopPropagation();\n                  deleteChat(chat.id, false);\n                },\n                title: \"Elimina chat\",\n                \"aria-label\": \"Elimina chat\",\n                children: /*#__PURE__*/_jsxDEV(Trash2, {\n                  size: 12\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 954,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 945,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 944,\n              columnNumber: 33\n            }, this)]\n          }, chat.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 928,\n            columnNumber: 29\n          }, this)), independentChats.map(chat => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: `sidebar-item chat-item ${(currentChat === null || currentChat === void 0 ? void 0 : currentChat.id) === chat.id ? 'active' : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat-content\",\n              onClick: () => {\n                setCurrentChat(chat);\n                loadChatMessages(chat.id);\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chat-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"chat-title\",\n                  children: chat.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 972,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"chat-project independent\",\n                  children: \"Indipendente\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 973,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 971,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 964,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat-actions\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"icon-btn delete-chat-btn\",\n                onClick: e => {\n                  e.stopPropagation();\n                  deleteChat(chat.id, true);\n                },\n                title: \"Elimina chat\",\n                \"aria-label\": \"Elimina chat\",\n                children: \"\\u2297\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 977,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 976,\n              columnNumber: 33\n            }, this)]\n          }, `ind-${chat.id}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 960,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 926,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 914,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        className: \"sidebar-footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-avatar\",\n            \"aria-hidden\": \"true\",\n            children: \"\\uD83D\\uDC64\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 997,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"user-name\",\n            children: \"Utente\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 998,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 996,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"settings-btn\",\n          onClick: () => setShowSettings(true),\n          children: [/*#__PURE__*/_jsxDEV(Settings, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1000,\n            columnNumber: 92\n          }, this), \" Impostazioni\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1000,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 995,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 843,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-container\",\n      children: [!sidebarOpen && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"open-sidebar-btn\",\n        onClick: () => setSidebarOpen(true),\n        title: \"Apri sidebar\",\n        children: \"\\u2630\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1008,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"chat-header\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-header-main\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            id: \"chat-title\",\n            children: \"KrakenGPT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1020,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-controls\",\n            children: [currentProject && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"rag-controls\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"rag-docs-btn\",\n                onClick: () => setShowUploadModal(true),\n                title: `Documenti RAG: ${ragStats.documents} docs, ${ragStats.chunks} chunks`,\n                children: [/*#__PURE__*/_jsxDEV(FileText, {\n                  size: 16\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1032,\n                  columnNumber: 41\n                }, this), \" Documenti (\", ragStats.documents, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1027,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"rag-status\",\n                title: `Status: ${ragStats.status}`,\n                children: ragStats.status === 'active' ? /*#__PURE__*/_jsxDEV(Brain, {\n                  size: 16\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1035,\n                  columnNumber: 73\n                }, this) : /*#__PURE__*/_jsxDEV(Power, {\n                  size: 16\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1035,\n                  columnNumber: 95\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1034,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1026,\n              columnNumber: 33\n            }, this), currentChat && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"edit-context-btn\",\n              onClick: () => {\n                setCurrentContext(currentChat.context || \"\");\n                setShowContextModal(true);\n              },\n              title: \"Aggiungi contesto per la chat - Inietta informazioni aggiuntive che il modello potr\\xE0 utilizzare per rispondere meglio\",\n              children: /*#__PURE__*/_jsxDEV(FileText, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1049,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1041,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1023,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1019,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1018,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"chat-messages\",\n        ref: chatMessagesRef,\n        \"aria-live\": \"polite\",\n        \"aria-atomic\": \"false\",\n        children: currentChat && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [messages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${msg.role}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-content\",\n              children: /*#__PURE__*/_jsxDEV(MarkdownRenderer, {\n                content: typeof msg.content === 'string' ? msg.content : JSON.stringify(msg.content, null, 2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1063,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1062,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-time\",\n              children: new Date(msg.timestamp).toLocaleTimeString([], {\n                hour: '2-digit',\n                minute: '2-digit'\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1065,\n              columnNumber: 37\n            }, this)]\n          }, msg.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1061,\n            columnNumber: 33\n          }, this)), isBotTyping && currentBotMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message bot streaming\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-content\",\n              children: /*#__PURE__*/_jsxDEV(MarkdownRenderer, {\n                content: typeof currentBotMessage === 'string' ? currentBotMessage : JSON.stringify(currentBotMessage, null, 2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1075,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1074,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1073,\n            columnNumber: 33\n          }, this), isBotTyping && !currentBotMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"enhanced-typing-indicator\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"typing-text\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1084,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1085,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1086,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1083,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1082,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1057,\n        columnNumber: 17\n      }, this), !currentChat && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-chat-selected\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"welcome-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Benvenuto in KrakenGPT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1098,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Seleziona una chat esistente o creane una nuova per iniziare.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1099,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"recent-chats-box\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Chat Recenti\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1101,\n              columnNumber: 33\n            }, this), projectChats.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"recent-chats-list\",\n              children: projectChats.slice(0, 5).map(chat => /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"recent-chat-item\",\n                onClick: () => {\n                  setCurrentChat(chat);\n                  loadChatMessages(chat.id);\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"recent-chat-title\",\n                  children: chat.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1113,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"recent-chat-project\",\n                  children: currentProject === null || currentProject === void 0 ? void 0 : currentProject.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1114,\n                  columnNumber: 49\n                }, this)]\n              }, chat.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1105,\n                columnNumber: 45\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1103,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"no-recent-chats\",\n              children: \"Nessuna chat recente disponibile.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1119,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1100,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"new-chat-button\",\n            onClick: openChatForm,\n            children: \"+ Nuova Chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1122,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1097,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1096,\n        columnNumber: 21\n      }, this), currentChat && /*#__PURE__*/_jsxDEV(\"footer\", {\n        className: \"chat-input-container\",\n        children: [responseTime && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"response-time\",\n          children: [/*#__PURE__*/_jsxDEV(Clock, {\n            size: 14\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1138,\n            columnNumber: 33\n          }, this), \" Tempo di risposta: \", (responseTime / 1000).toFixed(2), \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1137,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: `input-row ${inputExpanded ? 'expanded' : ''}`,\n          onSubmit: sendMessage,\n          autoComplete: \"off\",\n          onClick: () => {\n            if (!inputExpanded) {\n              setInputExpanded(true);\n              // Focus automatico sul textarea quando si espande\n              setTimeout(() => {\n                var _userInputRef$current;\n                return (_userInputRef$current = userInputRef.current) === null || _userInputRef$current === void 0 ? void 0 : _userInputRef$current.focus();\n              }, 100);\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"file-input\",\n            className: `file-upload-btn ${inputExpanded ? 'expanded' : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(Upload, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1155,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              id: \"file-input\",\n              accept: \"image/*,.pdf,.txt\",\n              hidden: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1156,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1154,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: userInput,\n            onChange: e => setUserInput(e.target.value),\n            ref: userInputRef,\n            placeholder: \"Chiedi qualcosa a KrakenGPT...\",\n            \"aria-label\": \"Inserisci messaggio\",\n            required: true,\n            disabled: isGenerating,\n            onFocus: () => setInputExpanded(true),\n            onBlur: e => {\n              // Se clicchi fuori e non c'è testo, ricompatta l'input\n              if (!userInput.trim() && !e.currentTarget.contains(e.relatedTarget)) {\n                setInputExpanded(false);\n              }\n            },\n            onKeyDown: e => {\n              if (e.key === 'Enter' && !e.shiftKey) {\n                e.preventDefault();\n                if (!isGenerating) {\n                  sendMessage(e);\n                }\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1158,\n            columnNumber: 29\n          }, this), isGenerating ? /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: stopGeneration,\n            className: \"stop-btn\",\n            \"aria-label\": \"Interrompi generazione\",\n            children: /*#__PURE__*/_jsxDEV(StopCircle, {\n              size: 18\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1189,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1183,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            ref: sendButtonRef,\n            \"aria-label\": \"Invia messaggio\",\n            disabled: isBotTyping,\n            children: /*#__PURE__*/_jsxDEV(Send, {\n              size: 18\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1198,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1192,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1142,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-warning\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"KrakenGPT pu\\xF2 commettere errori. Verifica le informazioni importanti.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1203,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1202,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1134,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1005,\n      columnNumber: 13\n    }, this), showProjectForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      role: \"dialog\",\n      \"aria-modal\": \"true\",\n      \"aria-labelledby\": \"project-form-title\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            id: \"project-form-title\",\n            children: editingProject ? 'Modifica Progetto' : 'Nuovo Progetto'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1214,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-btn\",\n            onClick: closeProjectForm,\n            \"aria-label\": \"Chiudi form progetto\",\n            children: /*#__PURE__*/_jsxDEV(X, {\n              size: 18\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1222,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1217,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1213,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"modal-body\",\n          onSubmit: saveProject,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"project-name\",\n              children: \"Nome Progetto *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1227,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"project-name\",\n              value: projectForm.name,\n              onChange: e => setProjectForm(prev => ({\n                ...prev,\n                name: e.target.value\n              })),\n              placeholder: \"Inserisci il nome del progetto\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1228,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1226,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"project-description\",\n              children: \"Descrizione\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1239,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: \"project-description\",\n              value: projectForm.description,\n              onChange: e => setProjectForm(prev => ({\n                ...prev,\n                description: e.target.value\n              })),\n              placeholder: \"Descrizione del progetto (opzionale)\",\n              rows: \"3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1240,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1238,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"project-prompt\",\n              children: \"Project Prompt\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1250,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: \"project-prompt\",\n              value: projectForm.prompt,\n              onChange: e => setProjectForm(prev => ({\n                ...prev,\n                prompt: e.target.value\n              })),\n              placeholder: \"Prompt di sistema per questo progetto (es: 'Sei un assistente specializzato in React e JavaScript...')\",\n              rows: \"4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1251,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"form-help\",\n              children: \"Questo prompt verr\\xE0 utilizzato come contesto di sistema per tutte le chat di questo progetto.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1258,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1249,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1225,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: saveProject,\n            className: \"btn-primary\",\n            disabled: !projectForm.name.trim(),\n            children: editingProject ? 'Salva Modifiche' : 'Crea Progetto'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1264,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: closeProjectForm,\n            className: \"btn-secondary\",\n            children: \"Annulla\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1272,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1263,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1212,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1211,\n      columnNumber: 17\n    }, this), showChatForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      role: \"dialog\",\n      \"aria-modal\": \"true\",\n      \"aria-labelledby\": \"chat-form-title\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            id: \"chat-form-title\",\n            children: \"Nuova Chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1289,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-btn\",\n            onClick: closeChatForm,\n            \"aria-label\": \"Chiudi form chat\",\n            children: /*#__PURE__*/_jsxDEV(X, {\n              size: 18\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1295,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1290,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1288,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"modal-body\",\n          onSubmit: createChat,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"chat-title\",\n              children: \"Titolo Chat *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1300,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"chat-title\",\n              value: chatForm.title,\n              onChange: e => setChatForm(prev => ({\n                ...prev,\n                title: e.target.value\n              })),\n              placeholder: \"Inserisci il titolo della chat\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1301,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1299,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"chat-project\",\n              children: \"Progetto\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1312,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"chat-project\",\n              value: chatForm.projectId || '',\n              onChange: e => setChatForm(prev => ({\n                ...prev,\n                projectId: e.target.value || null\n              })),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Nessun progetto (Chat indipendente)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1318,\n                columnNumber: 37\n              }, this), projects.map(project => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: project.id,\n                children: project.name\n              }, project.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1320,\n                columnNumber: 41\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1313,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"form-help\",\n              children: \"Scegli un progetto per associare la chat, oppure lascia vuoto per una chat indipendente.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1325,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1311,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1298,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            onClick: createChat,\n            className: \"btn-primary\",\n            disabled: !chatForm.title.trim(),\n            children: \"Crea Chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1331,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: closeChatForm,\n            className: \"btn-secondary\",\n            children: \"Annulla\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1339,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1330,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1287,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1286,\n      columnNumber: 17\n    }, this), showSettings && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      role: \"dialog\",\n      \"aria-modal\": \"true\",\n      \"aria-labelledby\": \"settings-title\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            id: \"settings-title\",\n            children: \"Impostazioni\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1356,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-btn\",\n            onClick: () => setShowSettings(false),\n            \"aria-label\": \"Chiudi impostazioni\",\n            children: /*#__PURE__*/_jsxDEV(X, {\n              size: 18\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1362,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1357,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1355,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"setting-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"provider-select\",\n              children: \"Provider\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1367,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"provider-select\",\n              value: settings.provider,\n              onChange: e => {\n                var _availableModels$newP;\n                const newProvider = e.target.value;\n                const defaultModel = ((_availableModels$newP = availableModels[newProvider][0]) === null || _availableModels$newP === void 0 ? void 0 : _availableModels$newP.value) || '';\n                const newSettings = {\n                  ...settings,\n                  provider: newProvider,\n                  model: defaultModel\n                };\n                setSettings(newSettings);\n                saveSettingsToStorage(newSettings);\n              },\n              children: PROVIDERS.map(p => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: p.value,\n                children: p.label\n              }, p.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1380,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1368,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1366,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"setting-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"model-select\",\n              children: \"Modello\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1385,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"model-select\",\n              value: settings.model,\n              onChange: e => {\n                const newSettings = {\n                  ...settings,\n                  model: e.target.value\n                };\n                setSettings(newSettings);\n                saveSettingsToStorage(newSettings);\n              },\n              children: (_availableModels$sett = availableModels[settings.provider]) === null || _availableModels$sett === void 0 ? void 0 : _availableModels$sett.map(m => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: m.value,\n                children: m.label\n              }, m.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1396,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1386,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1384,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"setting-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"temperature\",\n              children: [\"Temperatura: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                id: \"temperature-value\",\n                children: settings.temperature\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1403,\n                columnNumber: 50\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1402,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              id: \"temperature\",\n              min: \"0\",\n              max: \"1\",\n              step: \"0.1\",\n              defaultValue: settings.temperature,\n              onChange: e => {\n                document.getElementById('temperature-value').textContent = e.target.value;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1405,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1401,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"setting-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"max-tokens\",\n              children: [\"Token massimi: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                id: \"max-tokens-value\",\n                children: settings.maxTokens\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1420,\n                columnNumber: 52\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1419,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              id: \"max-tokens\",\n              min: \"100\",\n              max: \"32768\",\n              step: \"100\",\n              defaultValue: settings.maxTokens,\n              onChange: e => {\n                document.getElementById('max-tokens-value').textContent = e.target.value;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1422,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1418,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1365,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"save-settings\",\n            onClick: saveSettings,\n            children: \"Salva\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1436,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"cancel-settings\",\n            onClick: () => setShowSettings(false),\n            children: \"Annulla\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1437,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1435,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1354,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1353,\n      columnNumber: 17\n    }, this), showContextModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      role: \"dialog\",\n      \"aria-modal\": \"true\",\n      \"aria-labelledby\": \"context-modal-title\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            id: \"context-modal-title\",\n            children: [/*#__PURE__*/_jsxDEV(BarChart3, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1448,\n              columnNumber: 58\n            }, this), \" Aggiungi contesto per la chat\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1448,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-btn\",\n            onClick: () => setShowContextModal(false),\n            \"aria-label\": \"Chiudi modale contesto\",\n            children: /*#__PURE__*/_jsxDEV(X, {\n              size: 18\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1454,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1449,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1447,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-body\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"chat-context\",\n              children: \"Contesto per la Chat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1459,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: \"chat-context\",\n              value: currentContext,\n              onChange: e => setCurrentContext(e.target.value),\n              placeholder: \"Incolla qui informazioni, documenti o testi che vuoi che il modello consideri nelle sue risposte...\",\n              rows: \"8\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1460,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"form-help\",\n              children: \"Questo testo verr\\xE0 iniettato nel prompt di sistema. Il modello avr\\xE0 accesso a queste informazioni e le utilizzer\\xE0 per rispondere alle tue domande in modo pi\\xF9 preciso e contestualizzato.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1467,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1458,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1457,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: saveChatContext,\n            className: \"btn-primary\",\n            children: \"Salva Contesto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1473,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => setShowContextModal(false),\n            className: \"btn-secondary\",\n            children: \"Annulla\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1480,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1472,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1446,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1445,\n      columnNumber: 17\n    }, this), showUploadModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      onClick: () => setShowUploadModal(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [/*#__PURE__*/_jsxDEV(Database, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1498,\n                columnNumber: 37\n              }, this), \" Gestione Documenti RAG\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1498,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Carica e gestisci i tuoi documenti per il RAG\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1499,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1497,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modal-close\",\n            onClick: () => setShowUploadModal(false),\n            children: /*#__PURE__*/_jsxDEV(X, {\n              size: 18\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1505,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1501,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1496,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-body\",\n          children: [currentProject && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"project-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [/*#__PURE__*/_jsxDEV(FolderOpen, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1512,\n                columnNumber: 41\n              }, this), \" \", currentProject.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1512,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"rag-stats\",\n              children: [/*#__PURE__*/_jsxDEV(BarChart3, {\n                size: 14\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1513,\n                columnNumber: 64\n              }, this), \" Statistiche: \", ragStats.documents, \" documenti, \", ragStats.chunks, \" chunks\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1513,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1511,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [/*#__PURE__*/_jsxDEV(Upload, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1519,\n                columnNumber: 37\n              }, this), \" Carica Nuovo Documento\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1519,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"upload-section\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"upload-area\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  accept: \".txt\",\n                  onChange: e => {\n                    const file = e.target.files[0];\n                    if (file) {\n                      uploadDocument(file);\n                    }\n                  },\n                  disabled: uploading,\n                  className: \"file-input\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1522,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"upload-help\",\n                  children: [/*#__PURE__*/_jsxDEV(FileText, {\n                    size: 14\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1535,\n                    columnNumber: 45\n                  }, this), \" Solo file .txt supportati in questa versione\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1536,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Zap, {\n                    size: 14\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1536,\n                    columnNumber: 51\n                  }, this), \" Boost immediato per modelli free OpenRouter!\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1534,\n                  columnNumber: 41\n                }, this), uploading && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"upload-progress\",\n                  children: \"Elaborazione in corso...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1540,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1521,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1520,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1518,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [/*#__PURE__*/_jsxDEV(FileText, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1550,\n                columnNumber: 37\n              }, this), \" Documenti Caricati\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1550,\n              columnNumber: 33\n            }, this), documents.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"no-docs\",\n              children: \"Nessun documento caricato\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1552,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"documents-list\",\n              children: documents.map(doc => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"document-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"doc-info\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"doc-name\",\n                    children: [/*#__PURE__*/_jsxDEV(File, {\n                      size: 14\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1558,\n                      columnNumber: 80\n                    }, this), \" \", doc.filename]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1558,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"doc-meta\",\n                    children: [doc.chunk_count, \" chunks \\u2022 \", Math.round(doc.content_size / 1024), \"KB\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1559,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"doc-date\",\n                    children: new Date(doc.created_at).toLocaleDateString()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1562,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1557,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"delete-doc-btn\",\n                  onClick: () => deleteDocument(doc.id, doc.filename),\n                  title: \"Elimina documento\",\n                  children: /*#__PURE__*/_jsxDEV(Trash2, {\n                    size: 14\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1571,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1566,\n                  columnNumber: 49\n                }, this)]\n              }, doc.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1556,\n                columnNumber: 45\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1554,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1549,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1508,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-footer\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => setShowUploadModal(false),\n            className: \"btn-secondary\",\n            children: \"Chiudi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1580,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1579,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1495,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1494,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 841,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"hMXMRezJrZcmkapoBjwprFmKVCE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","MarkdownRenderer","Send","MessageSquare","Plus","Trash2","Edit2","Upload","File","X","Database","FileText","BarChart3","FolderOpen","Settings","Zap","Brain","Power","Clock","StopCircle","jsxDEV","_jsxDEV","Fragment","_Fragment","PROVIDERS","value","label","MODELS","azure","local","openrouter","App","_s","_availableModels$sett","chatMessagesRef","userInputRef","sendButtonRef","availableModels","setAvailableModels","loadSettingsFromStorage","savedSettings","localStorage","getItem","_MODELS$","parsed","JSON","parse","provider","model","temperature","maxTokens","e","console","error","userInput","setUserInput","messages","setMessages","isBotTyping","setIsBotTyping","settings","setSettings","showSettings","setShowSettings","sidebarOpen","setSidebarOpen","projects","setProjects","projectChats","setProjectChats","independentChats","setIndependentChats","currentProject","setCurrentProject","currentChat","setCurrentChat","showProjectForm","setShowProjectForm","editingProject","setEditingProject","inputExpanded","setInputExpanded","projectForm","setProjectForm","name","description","prompt","showChatForm","setShowChatForm","chatForm","setChatForm","title","projectId","showContextModal","setShowContextModal","currentContext","setCurrentContext","currentBotMessage","setCurrentBotMessage","isGenerating","setIsGenerating","abortController","setAbortController","responseTime","setResponseTime","startTime","setStartTime","documents","setDocuments","showUploadModal","setShowUploadModal","uploading","setUploading","ragStats","setRagStats","chunks","status","saveSettingsToStorage","newSettings","setItem","stringify","loadModels","response","fetch","ok","data","json","log","newModels","models","map","replace","toUpperCase","includes","split","err","loadProjects","length","loadChats","id","loadChatMessages","chatId","chat","messagesWithDates","msg","role","timestamp","Date","saveChatMessages","method","headers","body","statusText","loadIndependentChats","loadDocuments","stats","uploadDocument","file","formData","FormData","append","result","alert","detail","deleteDocument","docId","filename","window","confirm","loadSupportedModels","openProjectForm","project","closeProjectForm","saveProject","preventDefault","trim","url","savedProject","prev","p","deleteProject","filter","deleteChat","isIndependent","c","openChatForm","closeChatForm","createChat","project_id","newChat","saveChatContext","context","updatedChat","current","scrollTop","scrollHeight","sendMessage","text","userMsg","now","content","updatedMessages","getBotResponse","currentMessages","controller","AbortController","systemMessage","systemMessageWithContext","apiMessages","azureRole","requestBody","max_tokens","stream","chat_id","signal","entries","errorText","Error","reader","getReader","decoder","TextDecoder","buffer","botMessageContent","chunkCount","hasReceivedContent","done","read","decode","lines","pop","line","startsWith","jsonStr","slice","_data$choices","_data$choices$","_data$choices$$delta","choices","delta","warn","finalContent","botMsg","abortMsg","errorMsg","message","endTime","responseTimeMs","stopGeneration","abort","saveSettings","_document$getElementB","_document$getElementB2","_document$getElementB3","_document$getElementB4","document","getElementById","parseFloat","parseInt","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","size","stopPropagation","ref","toLocaleTimeString","hour","minute","toFixed","onSubmit","autoComplete","setTimeout","_userInputRef$current","focus","htmlFor","type","accept","hidden","onChange","target","placeholder","required","disabled","onFocus","onBlur","currentTarget","contains","relatedTarget","onKeyDown","key","shiftKey","rows","_availableModels$newP","newProvider","defaultModel","m","min","max","step","defaultValue","textContent","files","doc","chunk_count","Math","round","content_size","created_at","toLocaleDateString","_c","$RefreshReg$"],"sources":["C:/Users/Lorenzo/Desktop/chatbot-local/azure-ai-chatbot/react-frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\r\n// Rimosso l'import di ReactMarkdown e remarkGfm\r\nimport MarkdownRenderer from './MarkdownRenderer'; // Importa il nuovo componente\r\nimport './style.css';\r\nimport { \r\n  Send, \r\n  MessageSquare, \r\n  Plus, \r\n  Trash2, \r\n  Edit2, \r\n  Upload, \r\n  File, \r\n  X, \r\n  Database,\r\n  FileText,\r\n  BarChart3,\r\n  FolderOpen,\r\n  Settings,\r\n  Zap,\r\n  Brain,\r\n  Power,\r\n  Clock,\r\n  StopCircle\r\n} from 'lucide-react';\r\n\r\n// Configurazione\r\nconst PROVIDERS = [\r\n    { value: 'azure', label: 'Azure' },\r\n    { value: 'local', label: 'Local' },\r\n    { value: 'openrouter', label: 'OpenRouter' }\r\n];\r\nconst MODELS = {\r\n    azure: [\r\n        { value: 'gpt-4.1', label: 'GPT-4.1 (Azure)' }\r\n    ],\r\n    local: [\r\n        { value: 'qwen/qwen3-4b-thinking-2507', label: 'Qwen3-4B (Local)' }\r\n    ],\r\n    openrouter: [\r\n        // Modelli più affidabili - testare prima di aggiungere altri\r\n        { value: 'meta-llama/llama-3.1-8b-instruct:free', label: 'Llama 3.1 8B (Free)' },\r\n        { value: 'microsoft/phi-3-mini-128k-instruct:free', label: 'Phi-3 Mini (Free)' },\r\n        { value: 'google/gemma-2-9b-it:free', label: 'Gemma 2 9B (Free)' }\r\n    ]\r\n};\r\n\r\nfunction App() {\r\n    // Elementi DOM\r\n    const chatMessagesRef = useRef(null);\r\n    const userInputRef = useRef(null);\r\n    const sendButtonRef = useRef(null);\r\n    // Rimosso modelSelectRef perché non più utilizzato\r\n    \r\n    // Stato per i modelli dinamici\r\n    const [availableModels, setAvailableModels] = useState(MODELS);\r\n    \r\n    // Funzione per caricare le impostazioni dal localStorage\r\n    const loadSettingsFromStorage = () => {\r\n        const savedSettings = localStorage.getItem('krakenGPT-settings');\r\n        if (savedSettings) {\r\n            try {\r\n                const parsed = JSON.parse(savedSettings);\r\n                return {\r\n                    provider: parsed.provider || 'azure',\r\n                    model: parsed.model || MODELS[parsed.provider || 'azure'][0]?.value || MODELS['azure'][0].value,\r\n                    temperature: parsed.temperature || 0.7,\r\n                    maxTokens: parsed.maxTokens || 13107\r\n                };\r\n            } catch (e) {\r\n                console.error('Errore nel caricamento delle impostazioni:', e);\r\n            }\r\n        }\r\n        return {\r\n            provider: 'azure',\r\n            model: MODELS['azure'][0].value,\r\n            temperature: 0.7,\r\n            maxTokens: 13107\r\n        };\r\n    };\r\n    \r\n    // Stato\r\n    const [userInput, setUserInput] = useState('');\r\n    const [messages, setMessages] = useState([]);\r\n    const [isBotTyping, setIsBotTyping] = useState(false);\r\n    const [settings, setSettings] = useState(loadSettingsFromStorage());\r\n    const [showSettings, setShowSettings] = useState(false);\r\n    const [sidebarOpen, setSidebarOpen] = useState(false); // Sidebar chiusa di default\r\n    const [projects, setProjects] = useState([]);\r\n    const [projectChats, setProjectChats] = useState([]); // Chat del progetto corrente\r\n    const [independentChats, setIndependentChats] = useState([]); // Chat indipendenti\r\n    const [currentProject, setCurrentProject] = useState(null);\r\n    const [currentChat, setCurrentChat] = useState(null);\r\n    const [showProjectForm, setShowProjectForm] = useState(false);\r\n    const [editingProject, setEditingProject] = useState(null);\r\n    const [inputExpanded, setInputExpanded] = useState(false); // Stato per input espanso\r\n    const [projectForm, setProjectForm] = useState({\r\n        name: '',\r\n        description: '',\r\n        prompt: ''\r\n    });\r\n    const [showChatForm, setShowChatForm] = useState(false);\r\n    const [chatForm, setChatForm] = useState({\r\n        title: '',\r\n        projectId: null\r\n    });\r\n    const [showContextModal, setShowContextModal] = useState(false);\r\n    const [currentContext, setCurrentContext] = useState(\"\");\r\n    \r\n    // Stato streaming\r\n    const [currentBotMessage, setCurrentBotMessage] = useState('');\r\n    \r\n    // Stato per il pulsante stop e timer\r\n    const [isGenerating, setIsGenerating] = useState(false);\r\n    const [abortController, setAbortController] = useState(null);\r\n    const [responseTime, setResponseTime] = useState(null);\r\n    const [startTime, setStartTime] = useState(null);\r\n    \r\n    // RAG State - Gestione documenti\r\n    const [documents, setDocuments] = useState([]);\r\n    const [showUploadModal, setShowUploadModal] = useState(false);\r\n    const [uploading, setUploading] = useState(false);\r\n    const [ragStats, setRagStats] = useState({ documents: 0, chunks: 0, status: 'empty' });\r\n    \r\n    // Inizializzazione\r\n    \r\n    // Funzione per salvare le impostazioni nel localStorage\r\n    const saveSettingsToStorage = (newSettings) => {\r\n        localStorage.setItem('krakenGPT-settings', JSON.stringify(newSettings));\r\n    };\r\n    \r\n    // Carica modelli dal backend\r\n    const loadModels = useCallback(async () => {\r\n        try {\r\n            const response = await fetch('/models');\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                console.log(\"Modelli ricevuti dal backend:\", data);\r\n                \r\n                // Aggiorna i modelli disponibili\r\n                const newModels = {\r\n                    azure: data.models.azure.map(model => ({ \r\n                        value: model, \r\n                        label: model.replace('gpt-', 'GPT-').replace('-', ' ').toUpperCase() \r\n                    })),\r\n                    openrouter: data.models.openrouter.map(model => ({ \r\n                        value: model, \r\n                        label: model.includes(':free') ? `${model.split('/')[1]} (Free)` : model.split('/')[1] || model\r\n                    })),\r\n                    local: data.models.local.map(model => ({ \r\n                        value: model, \r\n                        label: `${model} (Local)` \r\n                    }))\r\n                };\r\n                \r\n                setAvailableModels(newModels);\r\n                console.log(\"Modelli aggiornati:\", newModels);\r\n            }\r\n        } catch (err) {\r\n            console.error(\"Errore caricamento modelli:\", err);\r\n        }\r\n    }, []);\r\n    \r\n    // Carica progetti dal backend\r\n    const loadProjects = useCallback(async () => {\r\n        try {\r\n            const response = await fetch('/api/projects');\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                setProjects(data);\r\n                if (data.length > 0) {\r\n                    setCurrentProject(data[0]);\r\n                    loadChats(data[0].id);\r\n                }\r\n            }\r\n        } catch (err) {\r\n            console.error(\"Errore caricamento progetti:\", err);\r\n        }\r\n    }, []);\r\n    \r\n    // Carica chat per un progetto\r\n    async function loadChats(projectId) {\r\n        try {\r\n            const response = await fetch(`/api/projects/${projectId}/chats`);\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                setProjectChats(data);\r\n            }\r\n        } catch (err) {\r\n            console.error(\"Errore caricamento chat:\", err);\r\n        }\r\n    }\r\n    \r\n    // Carica messaggi di una chat specifica\r\n    async function loadChatMessages(chatId) {\r\n        try {\r\n            const response = await fetch(`/api/chats/${chatId}`);\r\n            if (response.ok) {\r\n                const chat = await response.json();\r\n                \r\n                // Converti i timestamp da stringhe a oggetti Date\r\n                // E converti i ruoli 'bot' in 'assistant' per compatibilità con Azure AI\r\n                const messagesWithDates = (chat.messages || []).map(msg => ({\r\n                    ...msg,\r\n                    role: msg.role === 'bot' ? 'assistant' : msg.role,\r\n                    timestamp: new Date(msg.timestamp)\r\n                }));\r\n                \r\n                setMessages(messagesWithDates);\r\n            }\r\n        } catch (err) {\r\n            console.error(\"Errore caricamento messaggi:\", err);\r\n        }\r\n    }\r\n    \r\n    // Salva messaggi di una chat\r\n    async function saveChatMessages(chatId, messages) {\r\n        try {\r\n            const response = await fetch(`/api/chats/${chatId}`, {\r\n                method: 'PUT',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ messages: messages })\r\n            });\r\n            \r\n            if (!response.ok) {\r\n                console.error(\"Errore salvataggio messaggi:\", response.statusText);\r\n            }\r\n        } catch (err) {\r\n            console.error(\"Errore salvataggio messaggi:\", err);\r\n        }\r\n    }\r\n    \r\n    // Carica chat indipendenti (per ora vuoto, da implementare nel backend)\r\n    async function loadIndependentChats() {\r\n        try {\r\n            // TODO: Implementare API per chat indipendenti nel backend\r\n            // const response = await fetch('/api/independent-chats');\r\n            // if (response.ok) {\r\n            //     const data = await response.json();\r\n            //     setIndependentChats(data);\r\n            // }\r\n            setIndependentChats([]);\r\n        } catch (err) {\r\n            console.error(\"Errore caricamento chat indipendenti:\", err);\r\n        }\r\n    }\r\n    \r\n    // RAG Functions - Document management\r\n    async function loadDocuments(projectId) {\r\n        if (!projectId) return;\r\n        \r\n        try {\r\n            const response = await fetch(`/api/projects/${projectId}/documents`);\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                setDocuments(data.documents || []);\r\n                setRagStats(data.stats || { documents: 0, chunks: 0, status: 'empty' });\r\n            }\r\n        } catch (err) {\r\n            console.error(\"Errore caricamento documenti:\", err);\r\n        }\r\n    }\r\n    \r\n    async function uploadDocument(file) {\r\n        if (!currentProject) return;\r\n        \r\n        setUploading(true);\r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n        \r\n        try {\r\n            const response = await fetch(`/api/projects/${currentProject.id}/upload-doc`, {\r\n                method: 'POST',\r\n                body: formData\r\n            });\r\n            \r\n            if (response.ok) {\r\n                const result = await response.json();\r\n                console.log('Documento caricato:', result);\r\n                \r\n                // Ricarica documenti\r\n                await loadDocuments(currentProject.id);\r\n                setShowUploadModal(false);\r\n                \r\n                // Mostra notifica successo\r\n                alert(`Documento caricato con successo!\\n\\nStatistiche: ${result.stats.documents} documenti, ${result.stats.chunks} chunks`);\r\n            } else {\r\n                const error = await response.json();\r\n                alert(`Errore upload: ${error.detail}`);\r\n            }\r\n        } catch (err) {\r\n            console.error('Errore upload:', err);\r\n            alert('Errore upload documento');\r\n        } finally {\r\n            setUploading(false);\r\n        }\r\n    }\r\n    \r\n    async function deleteDocument(docId, filename) {\r\n        if (!window.confirm(`Eliminare il documento \"${filename}\"?`)) return;\r\n        \r\n        try {\r\n            const response = await fetch(`/api/documents/${docId}`, {\r\n                method: 'DELETE'\r\n            });\r\n            \r\n            if (response.ok) {\r\n                console.log('Documento eliminato:', filename);\r\n                \r\n                // Ricarica documenti\r\n                if (currentProject) {\r\n                    await loadDocuments(currentProject.id);\r\n                }\r\n                \r\n                alert(`Documento \"${filename}\" eliminato`);\r\n            } else {\r\n                alert('Errore eliminazione documento');\r\n            }\r\n        } catch (err) {\r\n            console.error('Errore eliminazione:', err);\r\n            alert('Errore eliminazione documento');\r\n        }\r\n    }\r\n    \r\n    // Inizializzazione\r\n    useEffect(() => {\r\n        loadModels(); // Carica i modelli dinamici per primi\r\n        loadSupportedModels();\r\n        loadProjects();\r\n        loadIndependentChats();\r\n    }, [loadProjects, loadModels]); // Dipendenza corretta con useCallback\r\n    \r\n    // RAG: Carica documenti quando cambia progetto\r\n    useEffect(() => {\r\n        if (currentProject) {\r\n            loadDocuments(currentProject.id);\r\n        } else {\r\n            setDocuments([]);\r\n            setRagStats({ documents: 0, chunks: 0, status: 'empty' });\r\n        }\r\n    }, [currentProject]);\r\n    \r\n    // Apri form per nuovo progetto\r\n    function openProjectForm(project = null) {\r\n        if (project) {\r\n            setEditingProject(project);\r\n            setProjectForm({\r\n                name: project.name,\r\n                description: project.description || '',\r\n                prompt: project.prompt || ''\r\n            });\r\n        } else {\r\n            setEditingProject(null);\r\n            setProjectForm({\r\n                name: '',\r\n                description: '',\r\n                prompt: ''\r\n            });\r\n        }\r\n        setShowProjectForm(true);\r\n    }\r\n    \r\n    // Chiudi form progetto\r\n    function closeProjectForm() {\r\n        setShowProjectForm(false);\r\n        setEditingProject(null);\r\n        setProjectForm({\r\n            name: '',\r\n            description: '',\r\n            prompt: ''\r\n        });\r\n    }\r\n    \r\n    // Salva progetto (crea o modifica)\r\n    async function saveProject(e) {\r\n        e.preventDefault();\r\n        if (!projectForm.name.trim()) return;\r\n        \r\n        try {\r\n            const url = editingProject ? `/api/projects/${editingProject.id}` : '/api/projects';\r\n            const method = editingProject ? 'PUT' : 'POST';\r\n            \r\n            const response = await fetch(url, {\r\n                method: method,\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    name: projectForm.name.trim(),\r\n                    description: projectForm.description.trim(),\r\n                    prompt: projectForm.prompt.trim()\r\n                })\r\n            });\r\n            \r\n            if (response.ok) {\r\n                const savedProject = await response.json();\r\n                \r\n                if (editingProject) {\r\n                    // Aggiorna progetto esistente\r\n                    setProjects(prev => prev.map(p => p.id === editingProject.id ? savedProject : p));\r\n                    if (currentProject?.id === editingProject.id) {\r\n                        setCurrentProject(savedProject);\r\n                    }\r\n                } else {\r\n                    // Aggiungi nuovo progetto\r\n                    setProjects(prev => [...prev, savedProject]);\r\n                    setCurrentProject(savedProject);\r\n                    setProjectChats([]);\r\n                }\r\n                \r\n                closeProjectForm();\r\n            }\r\n        } catch (err) {\r\n            console.error(\"Errore salvataggio progetto:\", err);\r\n        }\r\n    }\r\n    \r\n    // Elimina progetto\r\n    async function deleteProject(projectId) {\r\n        if (!window.confirm(\"Sei sicuro di voler eliminare questo progetto?\")) return;\r\n        \r\n        try {\r\n            const response = await fetch(`/api/projects/${projectId}`, {\r\n                method: 'DELETE'\r\n            });\r\n            \r\n            if (response.ok) {\r\n                setProjects(prev => prev.filter(p => p.id !== projectId));\r\n                if (currentProject?.id === projectId) {\r\n                    setCurrentProject(null);\r\n                    setProjectChats([]);\r\n                }\r\n            }\r\n        } catch (err) {\r\n            console.error(\"Errore eliminazione progetto:\", err);\r\n        }\r\n    }\r\n    \r\n    // Elimina chat\r\n    async function deleteChat(chatId, isIndependent = false) {\r\n        if (!window.confirm(\"Sei sicuro di voler eliminare questa chat? Questa azione non può essere annullata.\")) return;\r\n        \r\n        try {\r\n            const response = await fetch(`/api/chats/${chatId}`, {\r\n                method: 'DELETE'\r\n            });\r\n            \r\n            if (response.ok) {\r\n                if (isIndependent) {\r\n                    setIndependentChats(prev => prev.filter(c => c.id !== chatId));\r\n                } else {\r\n                    setProjectChats(prev => prev.filter(c => c.id !== chatId));\r\n                }\r\n                \r\n                // Se la chat eliminata è quella corrente, deseleziona\r\n                if (currentChat?.id === chatId) {\r\n                    setCurrentChat(null);\r\n                    setMessages([]);\r\n                }\r\n            }\r\n        } catch (err) {\r\n            console.error(\"Errore eliminazione chat:\", err);\r\n        }\r\n    }\r\n    \r\n    // Apri form per nuova chat\r\n    function openChatForm() {\r\n        setChatForm({\r\n            title: '',\r\n            projectId: currentProject?.id || null\r\n        });\r\n        setShowChatForm(true);\r\n    }\r\n    \r\n    // Chiudi form chat\r\n    function closeChatForm() {\r\n        setShowChatForm(false);\r\n        setChatForm({\r\n            title: '',\r\n            projectId: null\r\n        });\r\n    }\r\n    \r\n    // Crea nuova chat\r\n    async function createChat(e) {\r\n        e.preventDefault();\r\n        if (!chatForm.title.trim()) return;\r\n        \r\n        try {\r\n            // Per ora, le chat indipendenti non sono supportate dal backend\r\n            // Creiamo sempre una chat di progetto\r\n            const projectId = chatForm.projectId || (projects.length > 0 ? projects[0].id : null);\r\n            \r\n            if (!projectId) {\r\n                alert(\"Crea prima un progetto per poter creare chat!\");\r\n                return;\r\n            }\r\n            \r\n            const response = await fetch('/api/chats', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ \r\n                    project_id: projectId, \r\n                    title: chatForm.title.trim(),\r\n                    messages: []\r\n                })\r\n            });\r\n            \r\n            if (response.ok) {\r\n                const newChat = await response.json();\r\n                \r\n                // Aggiorna la lista delle chat del progetto\r\n                setProjectChats(prev => [...prev, newChat]);\r\n                \r\n                // Se è il progetto corrente, seleziona la chat\r\n                if (currentProject?.id === projectId) {\r\n                    setCurrentChat(newChat);\r\n                    setMessages([]);\r\n                }\r\n                \r\n                closeChatForm();\r\n            }\r\n        } catch (err) {\r\n            console.error(\"Errore creazione chat:\", err);\r\n        }\r\n    }\r\n    \r\n    // Salva il contesto della chat\r\n    async function saveChatContext() {\r\n        if (!currentChat) return;\r\n\r\n        try {\r\n            const response = await fetch(`/api/chats/${currentChat.id}`, {\r\n                method: 'PUT',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ context: currentContext })\r\n            });\r\n\r\n            if (response.ok) {\r\n                const updatedChat = await response.json();\r\n                // Aggiorna la chat corrente nello stato per riflettere il nuovo contesto\r\n                setCurrentChat(updatedChat);\r\n                // Aggiorna anche la lista delle chat\r\n                if (updatedChat.project_id) {\r\n                    setProjectChats(prev => prev.map(c => c.id === updatedChat.id ? updatedChat : c));\r\n                } else {\r\n                    setIndependentChats(prev => prev.map(c => c.id === updatedChat.id ? updatedChat : c));\r\n                }\r\n            }\r\n        } catch (err) {\r\n            console.error(\"Errore salvataggio contesto:\", err);\r\n        } finally {\r\n            setShowContextModal(false);\r\n        }\r\n    }\r\n    \r\n    // Effetto per lo scroll automatico\r\n    useEffect(() => {\r\n        if (chatMessagesRef.current) {\r\n            chatMessagesRef.current.scrollTop = chatMessagesRef.current.scrollHeight;\r\n        }\r\n    }, [messages, isBotTyping]);\r\n    \r\n    // Carica modelli dal backend\r\n    async function loadSupportedModels() {\r\n        try {\r\n            const response = await fetch('/models');\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                console.log(\"Modelli supportati:\", data.models);\r\n            }\r\n        } catch (err) {\r\n            console.error(\"Errore caricamento modelli:\", err);\r\n        }\r\n    }\r\n    \r\n    \r\n    // Invio messaggio\r\n    function sendMessage(e) {\r\n        e.preventDefault();\r\n        const text = userInput.trim();\r\n        if (!text || isGenerating) return;\r\n        \r\n        // Aggiungi messaggio utente\r\n        const userMsg = {\r\n            id: Date.now(),\r\n            role: 'user',\r\n            content: text,\r\n            timestamp: new Date()\r\n        };\r\n        \r\n        const updatedMessages = [...messages, userMsg];\r\n        setMessages(updatedMessages);\r\n        setUserInput('');\r\n        setIsBotTyping(true);\r\n        setCurrentBotMessage('');\r\n        setIsGenerating(true);\r\n        setResponseTime(null);\r\n        setStartTime(Date.now());\r\n        \r\n        // Salva i messaggi nel database se c'è una chat corrente\r\n        if (currentChat) {\r\n            saveChatMessages(currentChat.id, updatedMessages);\r\n        }\r\n        \r\n        // Ottieni risposta del bot\r\n        getBotResponse(updatedMessages);\r\n    }\r\n    \r\n    // Risposta Bot (Streaming)\r\n    async function getBotResponse(currentMessages) {\r\n        const controller = new AbortController();\r\n        setAbortController(controller);\r\n        \r\n        try {\r\n            console.log(\"Inviando richiesta al bot con modello:\", settings.model);\r\n            \r\n            const systemMessage = `You are KrakenGPT, a helpful AI coding partner. \r\n\r\nIMPORTANT: Always format your responses using proper Markdown syntax:\r\n- Use ## for main headers and ### for subheaders\r\n- Use * or - for bullet points (lists)\r\n- Use numbered lists (1. 2. 3.) when appropriate\r\n- Use \\`code\\` for inline code and \\`\\`\\`language for code blocks\r\n- Use **bold** and *italic* for emphasis\r\n- Structure your responses clearly with headers and lists\r\n- Never use plain text without formatting\r\n\r\nExamples:\r\n## Main Topic\r\n- First bullet point\r\n- Second bullet point\r\n\r\n### Subtopic\r\n1. First numbered item\r\n2. Second numbered item\r\n\r\nUse proper spacing and formatting to make responses easy to read.`;\r\n            const context = currentChat?.context || \"\";\r\n            const systemMessageWithContext = context \r\n                ? `${systemMessage}\\n\\n--- CONTEXT ---\\n${context}\\n--- END CONTEXT ---`\r\n                : systemMessage;\r\n\r\n            // Formatta i messaggi per l'API (solo 'role' e 'content')\r\n            // Azure AI richiede ruoli specifici: 'system', 'assistant', 'user', 'function', 'tool', 'developer'\r\n            const apiMessages = currentMessages.map(({ role, content }) => {\r\n                // Converti 'bot' in 'assistant' per compatibilità con Azure AI\r\n                const azureRole = role === 'bot' ? 'assistant' : role;\r\n                return { role: azureRole, content };\r\n            });\r\n\r\n            const requestBody = {\r\n                provider: settings.provider,\r\n                model: settings.model,\r\n                messages: [\r\n                    { role: \"system\", content: systemMessageWithContext },\r\n                    ...apiMessages\r\n                ],\r\n                temperature: settings.temperature,\r\n                max_tokens: settings.maxTokens,\r\n                stream: true,\r\n                chat_id: currentChat?.id  // RAG: Aggiungi chat_id per attivare RAG\r\n            };\r\n            \r\n            console.log(\"Corpo della richiesta:\", requestBody);\r\n            \r\n            const response = await fetch('/v1/chat/completions', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(requestBody),\r\n                signal: controller.signal\r\n            });\r\n            \r\n            console.log(\"Risposta ricevuta:\", response.status, response.statusText);\r\n            console.log(\"Headers della risposta:\", [...response.headers.entries()]);\r\n            \r\n            if (!response.ok) {\r\n                const errorText = await response.text();\r\n                console.error(\"Errore HTTP:\", response.status, errorText);\r\n                throw new Error(`HTTP ${response.status}: ${errorText}`);\r\n            }\r\n            \r\n            // Verifica se la risposta è effettivamente uno stream\r\n            if (!response.body) {\r\n                console.error(\"La risposta non contiene un body streamabile\");\r\n                throw new Error(\"La risposta non contiene un body streamabile\");\r\n            }\r\n            \r\n            const reader = response.body.getReader();\r\n            const decoder = new TextDecoder();\r\n            let buffer = \"\";\r\n            let botMessageContent = \"\";\r\n            \r\n            let chunkCount = 0;\r\n            let hasReceivedContent = false;\r\n            \r\n            while (true) {\r\n                const { done, value } = await reader.read();\r\n                chunkCount++;\r\n                console.log(`Chunk ${chunkCount}: done=${done}, value length=${value?.length || 0}`);\r\n                \r\n                if (done) {\r\n                    console.log(\"Stream completato\");\r\n                    break;\r\n                }\r\n                \r\n                // Segnala che abbiamo ricevuto almeno un chunk\r\n                hasReceivedContent = true;\r\n                \r\n                buffer += decoder.decode(value, { stream: true });\r\n                const lines = buffer.split(\"\\n\");\r\n                buffer = lines.pop();\r\n                \r\n                for (const line of lines) {\r\n                    console.log(\"Linea ricevuta:\", line);\r\n                    if (line.startsWith(\"data: \")) {\r\n                        const jsonStr = line.slice(6);\r\n                        if (jsonStr === \"[DONE]\") {\r\n                            console.log(\"Stream terminato con [DONE]\");\r\n                            break;\r\n                        }\r\n                        \r\n                        try {\r\n                            const data = JSON.parse(jsonStr);\r\n                            console.log(\"Dati ricevuti:\", data);\r\n                            const content = data.choices?.[0]?.delta?.content;\r\n                            if (content) {\r\n                                botMessageContent += content;\r\n                                setCurrentBotMessage(botMessageContent);\r\n                            }\r\n                        } catch (e) {\r\n                            console.warn(\"Parse error:\", e, \"Line:\", line);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            \r\n            console.log(\"Contenuto finale del bot:\", botMessageContent);\r\n            \r\n            // Determina il contenuto del messaggio del bot\r\n            let finalContent;\r\n            if (!hasReceivedContent) {\r\n                finalContent = \"Nessuna risposta ricevuta dal modello. Il server ha restituito una risposta vuota.\";\r\n            } else if (!botMessageContent) {\r\n                finalContent = \"Nessun contenuto ricevuto dal modello. La risposta potrebbe essere stata interrotta.\";\r\n            } else {\r\n                finalContent = botMessageContent;\r\n            }\r\n            \r\n            // Aggiungi messaggio completo del bot\r\n            const botMsg = {\r\n                id: Date.now(),\r\n                role: 'assistant',  // Usiamo 'assistant' invece di 'bot' per compatibilità con Azure AI\r\n                content: finalContent,\r\n                timestamp: new Date()\r\n            };\r\n            \r\n            setMessages(prev => {\r\n                const updatedMessages = [...prev, botMsg];\r\n                \r\n                // Salva i messaggi nel database se c'è una chat corrente\r\n                if (currentChat) {\r\n                    saveChatMessages(currentChat.id, updatedMessages);\r\n                }\r\n                \r\n                return updatedMessages;\r\n            });\r\n        } catch (error) {\r\n            console.error(\"Errore completo:\", error);\r\n            \r\n            // Se l'errore è dovuto a AbortController, non mostrare messaggio di errore\r\n            if (error.name === 'AbortError') {\r\n                const abortMsg = {\r\n                    id: Date.now(),\r\n                    role: 'bot',\r\n                    content: 'Risposta interrotta dall\\'utente.',\r\n                    timestamp: new Date()\r\n                };\r\n                setMessages(prev => {\r\n                    const updatedMessages = [...prev, abortMsg];\r\n                    \r\n                    // Salva i messaggi nel database se c'è una chat corrente\r\n                    if (currentChat) {\r\n                        saveChatMessages(currentChat.id, updatedMessages);\r\n                    }\r\n                    \r\n                    return updatedMessages;\r\n                });\r\n            } else {\r\n                const errorMsg = {\r\n                    id: Date.now(),\r\n                    role: 'bot',\r\n                    content: `Errore: ${error.message}`,\r\n                    timestamp: new Date()\r\n                };\r\n                setMessages(prev => {\r\n                    const updatedMessages = [...prev, errorMsg];\r\n                    \r\n                    // Salva i messaggi nel database se c'è una chat corrente\r\n                    if (currentChat) {\r\n                        saveChatMessages(currentChat.id, updatedMessages);\r\n                    }\r\n                    \r\n                    return updatedMessages;\r\n                });\r\n            }\r\n        } finally {\r\n            // Calcola il tempo di risposta\r\n            if (startTime) {\r\n                const endTime = Date.now();\r\n                const responseTimeMs = endTime - startTime;\r\n                setResponseTime(responseTimeMs);\r\n            }\r\n            \r\n            setIsBotTyping(false);\r\n            setCurrentBotMessage('');\r\n            setIsGenerating(false);\r\n            setAbortController(null);\r\n        }\r\n    }\r\n    \r\n    // Funzione per fermare la generazione\r\n    function stopGeneration() {\r\n        if (abortController) {\r\n            abortController.abort();\r\n        }\r\n    }\r\n    \r\n    // Copia codice negli appunti\r\n    // Salva impostazioni\r\n    function saveSettings() {\r\n        const provider = document.getElementById('provider-select')?.value || settings.provider;\r\n        const model = document.getElementById('model-select')?.value || settings.model;\r\n        setSettings({\r\n            provider,\r\n            model,\r\n            temperature: parseFloat(document.getElementById('temperature')?.value || settings.temperature),\r\n            maxTokens: parseInt(document.getElementById('max-tokens')?.value || settings.maxTokens)\r\n        });\r\n        setShowSettings(false);\r\n    }\r\n    \r\n    return (\r\n        <div className=\"app-container\">\r\n            {/* Sidebar */}\r\n            <aside className={`sidebar ${sidebarOpen ? 'open' : ''}`}>\r\n                {/* Header Sidebar con pulsante chiudi */}\r\n                <div className=\"sidebar-header\">\r\n                    <h2>KrakenGPT</h2>\r\n                    <button \r\n                        className=\"icon-btn close-sidebar-btn\" \r\n                        onClick={() => setSidebarOpen(false)}\r\n                        title=\"Chiudi sidebar\"\r\n                    >\r\n                        ☰\r\n                    </button>\r\n                </div>\r\n                \r\n                {/* Sezione Progetti */}\r\n                <section className=\"sidebar-section\">\r\n                    <div className=\"section-header\">\r\n                        <h3><FolderOpen size={16} /> Progetti</h3>\r\n                        <button \r\n                            className=\"icon-btn new-project-btn\" \r\n                            onClick={() => openProjectForm()}\r\n                            title=\"Nuovo Progetto\" \r\n                            aria-label=\"Crea nuovo progetto\"\r\n                        >\r\n                            <Plus size={14} />\r\n                        </button>\r\n                    </div>\r\n                    <ul className=\"projects-list\">\r\n                        {projects.map(project => (\r\n                            <li \r\n                                key={project.id} \r\n                                className={`sidebar-item project-item ${currentProject?.id === project.id ? 'active' : ''}`}\r\n                            >\r\n                                <div \r\n                                    className=\"project-name\"\r\n                                    onClick={() => {\r\n                                        setCurrentProject(project);\r\n                                        loadChats(project.id);\r\n                                    }}\r\n                                >\r\n                                    {project.name}\r\n                                </div>\r\n                                <div className=\"project-actions\">\r\n                                    <button \r\n                                        className=\"icon-btn edit-project-btn\" \r\n                                        onClick={(e) => {\r\n                                            e.stopPropagation();\r\n                                            openProjectForm(project);\r\n                                        }}\r\n                                        title=\"Modifica progetto\"\r\n                                        aria-label=\"Modifica progetto\"\r\n                                    >\r\n                                        <Edit2 size={12} />\r\n                                    </button>\r\n                                    <button \r\n                                        className=\"icon-btn delete-project-btn\" \r\n                                        onClick={(e) => {\r\n                                            e.stopPropagation();\r\n                                            deleteProject(project.id);\r\n                                        }}\r\n                                        title=\"Elimina progetto\"\r\n                                        aria-label=\"Elimina progetto\"\r\n                                    >\r\n                                        <Trash2 size={12} />\r\n                                    </button>\r\n                                </div>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </section>\r\n                \r\n                {/* Sezione Chat Recenti */}\r\n                <section className=\"sidebar-section\">\r\n                    <div className=\"section-header\">\r\n                        <h3><MessageSquare size={16} /> Chat recenti</h3>\r\n                        <button \r\n                            className=\"icon-btn new-chat-btn\" \r\n                            onClick={openChatForm}\r\n                            title=\"Nuova Chat\" \r\n                            aria-label=\"Avvia nuova chat\"\r\n                        >\r\n                            <Plus size={14} />\r\n                        </button>\r\n                    </div>\r\n                    <ul className=\"conversation-history\">\r\n                        {projectChats.map(chat => (\r\n                            <li \r\n                                key={chat.id} \r\n                                className={`sidebar-item chat-item ${currentChat?.id === chat.id ? 'active' : ''}`}\r\n                            >\r\n                                <div \r\n                                    className=\"chat-content\"\r\n                                    onClick={() => {\r\n                                        setCurrentChat(chat);\r\n                                        loadChatMessages(chat.id);\r\n                                    }}\r\n                                >\r\n                                    <div className=\"chat-info\">\r\n                                        <span className=\"chat-title\">{chat.title}</span>\r\n                                        <span className=\"chat-project\">{currentProject?.name}</span>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"chat-actions\">\r\n                                    <button \r\n                                        className=\"icon-btn delete-chat-btn\" \r\n                                        onClick={(e) => {\r\n                                            e.stopPropagation();\r\n                                            deleteChat(chat.id, false);\r\n                                        }}\r\n                                        title=\"Elimina chat\"\r\n                                        aria-label=\"Elimina chat\"\r\n                                    >\r\n                                        <Trash2 size={12} />\r\n                                    </button>\r\n                                </div>\r\n                            </li>\r\n                        ))}\r\n                        {independentChats.map(chat => (\r\n                            <li \r\n                                key={`ind-${chat.id}`} \r\n                                className={`sidebar-item chat-item ${currentChat?.id === chat.id ? 'active' : ''}`}\r\n                            >\r\n                                <div \r\n                                    className=\"chat-content\"\r\n                                    onClick={() => {\r\n                                        setCurrentChat(chat);\r\n                                        loadChatMessages(chat.id);\r\n                                    }}\r\n                                >\r\n                                    <div className=\"chat-info\">\r\n                                        <span className=\"chat-title\">{chat.title}</span>\r\n                                        <span className=\"chat-project independent\">Indipendente</span>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"chat-actions\">\r\n                                    <button \r\n                                        className=\"icon-btn delete-chat-btn\" \r\n                                        onClick={(e) => {\r\n                                            e.stopPropagation();\r\n                                            deleteChat(chat.id, true);\r\n                                        }}\r\n                                        title=\"Elimina chat\"\r\n                                        aria-label=\"Elimina chat\"\r\n                                    >\r\n                                        ⊗\r\n                                    </button>\r\n                                </div>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </section>\r\n                \r\n                {/* Footer Sidebar */}\r\n                <footer className=\"sidebar-footer\">\r\n                    <div className=\"user-info\">\r\n                        <div className=\"user-avatar\" aria-hidden=\"true\">👤</div>\r\n                        <span className=\"user-name\">Utente</span>\r\n                    </div>\r\n                    <button className=\"settings-btn\" onClick={() => setShowSettings(true)}><Settings size={16} /> Impostazioni</button>\r\n                </footer>\r\n            </aside>\r\n            \r\n            {/* Main Container */}\r\n            <main className=\"main-container\">\r\n                {/* Pulsante per aprire sidebar quando è chiusa */}\r\n                {!sidebarOpen && (\r\n                    <button \r\n                        className=\"open-sidebar-btn\"\r\n                        onClick={() => setSidebarOpen(true)}\r\n                        title=\"Apri sidebar\"\r\n                    >\r\n                        ☰\r\n                    </button>\r\n                )}\r\n                \r\n                {/* Header Chat */}\r\n                <header className=\"chat-header\">\r\n                    <div className=\"chat-header-main\">\r\n                        <h1 id=\"chat-title\">\r\n                            KrakenGPT\r\n                        </h1>\r\n                        <div className=\"chat-controls\">\r\n                            {/* RAG Controls */}\r\n                            {currentProject && (\r\n                                <div className=\"rag-controls\">\r\n                                    <button \r\n                                        className=\"rag-docs-btn\"\r\n                                        onClick={() => setShowUploadModal(true)}\r\n                                        title={`Documenti RAG: ${ragStats.documents} docs, ${ragStats.chunks} chunks`}\r\n                                    >\r\n                                        <FileText size={16} /> Documenti ({ragStats.documents})\r\n                                    </button>\r\n                                    <span className=\"rag-status\" title={`Status: ${ragStats.status}`}>\r\n                                        {ragStats.status === 'active' ? <Brain size={16} /> : <Power size={16} />}\r\n                                    </span>\r\n                                </div>\r\n                            )}\r\n                            \r\n                            {currentChat && (\r\n                                <button \r\n                                    className=\"edit-context-btn\"\r\n                                    onClick={() => {\r\n                                        setCurrentContext(currentChat.context || \"\");\r\n                                        setShowContextModal(true);\r\n                                    }}\r\n                                    title=\"Aggiungi contesto per la chat - Inietta informazioni aggiuntive che il modello potrà utilizzare per rispondere meglio\"\r\n                                >\r\n                                    <FileText size={16} />\r\n                                </button>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </header>\r\n                \r\n                {/* Messaggi Chat */}\r\n                <section className=\"chat-messages\" ref={chatMessagesRef} aria-live=\"polite\" aria-atomic=\"false\">\r\n                    {currentChat && (\r\n                        <>\r\n                            {messages.map(msg => (\r\n                                <div key={msg.id} className={`message ${msg.role}`}>\r\n                                    <div className=\"message-content\">\r\n                                        <MarkdownRenderer content={typeof msg.content === 'string' ? msg.content : JSON.stringify(msg.content, null, 2)} />\r\n                                    </div>\r\n                                    <div className=\"message-time\">\r\n                                        {new Date(msg.timestamp).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                            \r\n                            {/* Messaggio in streaming */}\r\n                            {isBotTyping && currentBotMessage && (\r\n                                <div className=\"message bot streaming\">\r\n                                    <div className=\"message-content\">\r\n                                        <MarkdownRenderer content={typeof currentBotMessage === 'string' ? currentBotMessage : JSON.stringify(currentBotMessage, null, 2)} />\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                            \r\n                            {/* Indicatore di digitazione */}\r\n                            {isBotTyping && !currentBotMessage && (\r\n                                <div className=\"enhanced-typing-indicator\">\r\n                                    <div className=\"typing-text\">\r\n                                        <span></span>\r\n                                        <span></span>\r\n                                        <span></span>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </>\r\n                    )}\r\n                </section>\r\n                \r\n                {/* Dialogo \"Nessuna chat selezionata\" - Floating */}\r\n                {!currentChat && (\r\n                    <div className=\"no-chat-selected\">\r\n                        <div className=\"welcome-box\">\r\n                            <h2>Benvenuto in KrakenGPT</h2>\r\n                            <p>Seleziona una chat esistente o creane una nuova per iniziare.</p>\r\n                            <div className=\"recent-chats-box\">\r\n                                <h3>Chat Recenti</h3>\r\n                                {projectChats.length > 0 ? (\r\n                                    <ul className=\"recent-chats-list\">\r\n                                        {projectChats.slice(0, 5).map(chat => (\r\n                                            <li \r\n                                                key={chat.id} \r\n                                                className=\"recent-chat-item\"\r\n                                                onClick={() => {\r\n                                                    setCurrentChat(chat);\r\n                                                    loadChatMessages(chat.id);\r\n                                                }}\r\n                                            >\r\n                                                <span className=\"recent-chat-title\">{chat.title}</span>\r\n                                                <span className=\"recent-chat-project\">{currentProject?.name}</span>\r\n                                            </li>\r\n                                        ))}\r\n                                    </ul>\r\n                                ) : (\r\n                                    <p className=\"no-recent-chats\">Nessuna chat recente disponibile.</p>\r\n                                )}\r\n                            </div>\r\n                            <button \r\n                                className=\"new-chat-button\"\r\n                                onClick={openChatForm}\r\n                            >\r\n                                + Nuova Chat\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n                \r\n                {/* Input Chat */}\r\n                {currentChat && (\r\n                    <footer className=\"chat-input-container\">\r\n                        {/* Misuratore tempo di risposta */}\r\n                        {responseTime && (\r\n                            <div className=\"response-time\">\r\n                                <Clock size={14} /> Tempo di risposta: {(responseTime / 1000).toFixed(2)}s\r\n                            </div>\r\n                        )}\r\n                        \r\n                        <form \r\n                            className={`input-row ${inputExpanded ? 'expanded' : ''}`} \r\n                            onSubmit={sendMessage} \r\n                            autoComplete=\"off\"\r\n                            onClick={() => {\r\n                                if (!inputExpanded) {\r\n                                    setInputExpanded(true);\r\n                                    // Focus automatico sul textarea quando si espande\r\n                                    setTimeout(() => userInputRef.current?.focus(), 100);\r\n                                }\r\n                            }}\r\n                        >\r\n                            <label htmlFor=\"file-input\" className={`file-upload-btn ${inputExpanded ? 'expanded' : ''}`}>\r\n                                <Upload size={16} />\r\n                                <input type=\"file\" id=\"file-input\" accept=\"image/*,.pdf,.txt\" hidden />\r\n                            </label>\r\n                            <textarea\r\n                                value={userInput}\r\n                                onChange={(e) => setUserInput(e.target.value)}\r\n                                ref={userInputRef}\r\n                                placeholder=\"Chiedi qualcosa a KrakenGPT...\"\r\n                                aria-label=\"Inserisci messaggio\"\r\n                                required\r\n                                disabled={isGenerating}\r\n                                onFocus={() => setInputExpanded(true)}\r\n                                onBlur={(e) => {\r\n                                    // Se clicchi fuori e non c'è testo, ricompatta l'input\r\n                                    if (!userInput.trim() && !e.currentTarget.contains(e.relatedTarget)) {\r\n                                        setInputExpanded(false);\r\n                                    }\r\n                                }}\r\n                                onKeyDown={(e) => {\r\n                                    if (e.key === 'Enter' && !e.shiftKey) {\r\n                                        e.preventDefault();\r\n                                        if (!isGenerating) {\r\n                                            sendMessage(e);\r\n                                        }\r\n                                    }\r\n                                }}\r\n                            />\r\n                            {isGenerating ? (\r\n                                <button \r\n                                    type=\"button\" \r\n                                    onClick={stopGeneration}\r\n                                    className=\"stop-btn\"\r\n                                    aria-label=\"Interrompi generazione\"\r\n                                >\r\n                                    <StopCircle size={18} />\r\n                                </button>\r\n                            ) : (\r\n                                <button \r\n                                    type=\"submit\" \r\n                                    ref={sendButtonRef} \r\n                                    aria-label=\"Invia messaggio\"\r\n                                    disabled={isBotTyping}\r\n                                >\r\n                                    <Send size={18} />\r\n                                </button>\r\n                            )}\r\n                        </form>\r\n                        <div className=\"input-warning\">\r\n                            <span>KrakenGPT può commettere errori. Verifica le informazioni importanti.</span>\r\n                        </div>\r\n                    </footer>\r\n                )}\r\n            </main>\r\n            \r\n            {/* Modale Form Progetto */}\r\n            {showProjectForm && (\r\n                <div className=\"modal\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"project-form-title\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h2 id=\"project-form-title\">\r\n                                {editingProject ? 'Modifica Progetto' : 'Nuovo Progetto'}\r\n                            </h2>\r\n                            <button \r\n                                className=\"close-btn\" \r\n                                onClick={closeProjectForm}\r\n                                aria-label=\"Chiudi form progetto\"\r\n                            >\r\n                                <X size={18} />\r\n                            </button>\r\n                        </div>\r\n                        <form className=\"modal-body\" onSubmit={saveProject}>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"project-name\">Nome Progetto *</label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id=\"project-name\" \r\n                                    value={projectForm.name}\r\n                                    onChange={(e) => setProjectForm(prev => ({ ...prev, name: e.target.value }))}\r\n                                    placeholder=\"Inserisci il nome del progetto\"\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            \r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"project-description\">Descrizione</label>\r\n                                <textarea \r\n                                    id=\"project-description\" \r\n                                    value={projectForm.description}\r\n                                    onChange={(e) => setProjectForm(prev => ({ ...prev, description: e.target.value }))}\r\n                                    placeholder=\"Descrizione del progetto (opzionale)\"\r\n                                    rows=\"3\"\r\n                                />\r\n                            </div>\r\n                            \r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"project-prompt\">Project Prompt</label>\r\n                                <textarea \r\n                                    id=\"project-prompt\" \r\n                                    value={projectForm.prompt}\r\n                                    onChange={(e) => setProjectForm(prev => ({ ...prev, prompt: e.target.value }))}\r\n                                    placeholder=\"Prompt di sistema per questo progetto (es: 'Sei un assistente specializzato in React e JavaScript...')\"\r\n                                    rows=\"4\"\r\n                                />\r\n                                <small className=\"form-help\">\r\n                                    Questo prompt verrà utilizzato come contesto di sistema per tutte le chat di questo progetto.\r\n                                </small>\r\n                            </div>\r\n                        </form>\r\n                        <div className=\"modal-footer\">\r\n                            <button \r\n                                type=\"button\" \r\n                                onClick={saveProject}\r\n                                className=\"btn-primary\"\r\n                                disabled={!projectForm.name.trim()}\r\n                            >\r\n                                {editingProject ? 'Salva Modifiche' : 'Crea Progetto'}\r\n                            </button>\r\n                            <button \r\n                                type=\"button\" \r\n                                onClick={closeProjectForm}\r\n                                className=\"btn-secondary\"\r\n                            >\r\n                                Annulla\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n            \r\n            {/* Modale Form Chat */}\r\n            {showChatForm && (\r\n                <div className=\"modal\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"chat-form-title\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h2 id=\"chat-form-title\">Nuova Chat</h2>\r\n                            <button \r\n                                className=\"close-btn\" \r\n                                onClick={closeChatForm}\r\n                                aria-label=\"Chiudi form chat\"\r\n                            >\r\n                                <X size={18} />\r\n                            </button>\r\n                        </div>\r\n                        <form className=\"modal-body\" onSubmit={createChat}>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"chat-title\">Titolo Chat *</label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id=\"chat-title\" \r\n                                    value={chatForm.title}\r\n                                    onChange={(e) => setChatForm(prev => ({ ...prev, title: e.target.value }))}\r\n                                    placeholder=\"Inserisci il titolo della chat\"\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            \r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"chat-project\">Progetto</label>\r\n                                <select \r\n                                    id=\"chat-project\" \r\n                                    value={chatForm.projectId || ''}\r\n                                    onChange={(e) => setChatForm(prev => ({ ...prev, projectId: e.target.value || null }))}\r\n                                >\r\n                                    <option value=\"\">Nessun progetto (Chat indipendente)</option>\r\n                                    {projects.map(project => (\r\n                                        <option key={project.id} value={project.id}>\r\n                                            {project.name}\r\n                                        </option>\r\n                                    ))}\r\n                                </select>\r\n                                <small className=\"form-help\">\r\n                                    Scegli un progetto per associare la chat, oppure lascia vuoto per una chat indipendente.\r\n                                </small>\r\n                            </div>\r\n                        </form>\r\n                        <div className=\"modal-footer\">\r\n                            <button \r\n                                type=\"submit\" \r\n                                onClick={createChat}\r\n                                className=\"btn-primary\"\r\n                                disabled={!chatForm.title.trim()}\r\n                            >\r\n                                Crea Chat\r\n                            </button>\r\n                            <button \r\n                                type=\"button\" \r\n                                onClick={closeChatForm}\r\n                                className=\"btn-secondary\"\r\n                            >\r\n                                Annulla\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n            \r\n            {/* Modale Impostazioni */}\r\n            {showSettings && (\r\n                <div className=\"modal\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"settings-title\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h2 id=\"settings-title\">Impostazioni</h2>\r\n                            <button \r\n                                className=\"close-btn\" \r\n                                onClick={() => setShowSettings(false)}\r\n                                aria-label=\"Chiudi impostazioni\"\r\n                            >\r\n                                <X size={18} />\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <div className=\"setting-group\">\r\n                                <label htmlFor=\"provider-select\">Provider</label>\r\n                                <select\r\n                                    id=\"provider-select\"\r\n                                    value={settings.provider}\r\n                                    onChange={e => {\r\n                                        const newProvider = e.target.value;\r\n                                        const defaultModel = availableModels[newProvider][0]?.value || '';\r\n                                        const newSettings = { ...settings, provider: newProvider, model: defaultModel };\r\n                                        setSettings(newSettings);\r\n                                        saveSettingsToStorage(newSettings);\r\n                                    }}\r\n                                >\r\n                                    {PROVIDERS.map(p => (\r\n                                        <option key={p.value} value={p.value}>{p.label}</option>\r\n                                    ))}\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"setting-group\">\r\n                                <label htmlFor=\"model-select\">Modello</label>\r\n                                <select\r\n                                    id=\"model-select\"\r\n                                    value={settings.model}\r\n                                    onChange={e => {\r\n                                        const newSettings = { ...settings, model: e.target.value };\r\n                                        setSettings(newSettings);\r\n                                        saveSettingsToStorage(newSettings);\r\n                                    }}\r\n                                >\r\n                                    {availableModels[settings.provider]?.map(m => (\r\n                                        <option key={m.value} value={m.value}>{m.label}</option>\r\n                                    ))}\r\n                                </select>\r\n                            </div>\r\n                            \r\n                            <div className=\"setting-group\">\r\n                                <label htmlFor=\"temperature\">\r\n                                    Temperatura: <span id=\"temperature-value\">{settings.temperature}</span>\r\n                                </label>\r\n                                <input \r\n                                    type=\"range\" \r\n                                    id=\"temperature\" \r\n                                    min=\"0\" \r\n                                    max=\"1\" \r\n                                    step=\"0.1\" \r\n                                    defaultValue={settings.temperature}\r\n                                    onChange={(e) => {\r\n                                        document.getElementById('temperature-value').textContent = e.target.value;\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            \r\n                            <div className=\"setting-group\">\r\n                                <label htmlFor=\"max-tokens\">\r\n                                    Token massimi: <span id=\"max-tokens-value\">{settings.maxTokens}</span>\r\n                                </label>\r\n                                <input \r\n                                    type=\"range\" \r\n                                    id=\"max-tokens\" \r\n                                    min=\"100\" \r\n                                    max=\"32768\" \r\n                                    step=\"100\" \r\n                                    defaultValue={settings.maxTokens}\r\n                                    onChange={(e) => {\r\n                                        document.getElementById('max-tokens-value').textContent = e.target.value;\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-footer\">\r\n                            <button id=\"save-settings\" onClick={saveSettings}>Salva</button>\r\n                            <button id=\"cancel-settings\" onClick={() => setShowSettings(false)}>Annulla</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n            \r\n            {/* Modale Contesto RAG */}\r\n            {showContextModal && (\r\n                <div className=\"modal\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"context-modal-title\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h2 id=\"context-modal-title\"><BarChart3 size={20} /> Aggiungi contesto per la chat</h2>\r\n                            <button \r\n                                className=\"close-btn\" \r\n                                onClick={() => setShowContextModal(false)}\r\n                                aria-label=\"Chiudi modale contesto\"\r\n                            >\r\n                                <X size={18} />\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"chat-context\">Contesto per la Chat</label>\r\n                                <textarea \r\n                                    id=\"chat-context\" \r\n                                    value={currentContext}\r\n                                    onChange={(e) => setCurrentContext(e.target.value)}\r\n                                    placeholder=\"Incolla qui informazioni, documenti o testi che vuoi che il modello consideri nelle sue risposte...\"\r\n                                    rows=\"8\"\r\n                                />\r\n                                <small className=\"form-help\">\r\n                                    Questo testo verrà iniettato nel prompt di sistema. Il modello avrà accesso a queste informazioni e le utilizzerà per rispondere alle tue domande in modo più preciso e contestualizzato.\r\n                                </small>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-footer\">\r\n                            <button \r\n                                type=\"button\" \r\n                                onClick={saveChatContext}\r\n                                className=\"btn-primary\"\r\n                            >\r\n                                Salva Contesto\r\n                            </button>\r\n                            <button \r\n                                type=\"button\" \r\n                                onClick={() => setShowContextModal(false)}\r\n                                className=\"btn-secondary\"\r\n                            >\r\n                                Annulla\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n            \r\n            {/* RAG Upload Modal */}\r\n            {showUploadModal && (\r\n                <div className=\"modal-overlay\" onClick={() => setShowUploadModal(false)}>\r\n                    <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\r\n                        <div className=\"modal-header\">\r\n                            <div>\r\n                                <h2><Database size={20} /> Gestione Documenti RAG</h2>\r\n                                <p>Carica e gestisci i tuoi documenti per il RAG</p>\r\n                            </div>\r\n                            <button \r\n                                className=\"modal-close\" \r\n                                onClick={() => setShowUploadModal(false)}\r\n                            >\r\n                                <X size={18} />\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            {/* Project Info */}\r\n                            {currentProject && (\r\n                                <div className=\"project-info\">\r\n                                    <h3><FolderOpen size={16} /> {currentProject.name}</h3>\r\n                                    <div className=\"rag-stats\"><BarChart3 size={14} /> Statistiche: {ragStats.documents} documenti, {ragStats.chunks} chunks</div>\r\n                                </div>\r\n                            )}\r\n                            \r\n                            {/* Upload Section */}\r\n                            <div className=\"modal-section\">\r\n                                <h3><Upload size={16} /> Carica Nuovo Documento</h3>\r\n                                <div className=\"upload-section\">\r\n                                    <div className=\"upload-area\">\r\n                                        <input\r\n                                            type=\"file\"\r\n                                            accept=\".txt\"\r\n                                            onChange={(e) => {\r\n                                                const file = e.target.files[0];\r\n                                                if (file) {\r\n                                                    uploadDocument(file);\r\n                                                }\r\n                                            }}\r\n                                            disabled={uploading}\r\n                                            className=\"file-input\"\r\n                                        />\r\n                                        <p className=\"upload-help\">\r\n                                            <FileText size={14} /> Solo file .txt supportati in questa versione\r\n                                            <br /><Zap size={14} /> Boost immediato per modelli free OpenRouter!\r\n                                        </p>\r\n                                        \r\n                                        {uploading && (\r\n                                            <div className=\"upload-progress\">\r\n                                                Elaborazione in corso...\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            {/* Documents List */}\r\n                            <div className=\"modal-section\">\r\n                                <h3><FileText size={16} /> Documenti Caricati</h3>\r\n                                {documents.length === 0 ? (\r\n                                    <p className=\"no-docs\">Nessun documento caricato</p>\r\n                                ) : (\r\n                                    <div className=\"documents-list\">\r\n                                        {documents.map(doc => (\r\n                                            <div key={doc.id} className=\"document-item\">\r\n                                                <div className=\"doc-info\">\r\n                                                    <span className=\"doc-name\"><File size={14} /> {doc.filename}</span>\r\n                                                    <span className=\"doc-meta\">\r\n                                                        {doc.chunk_count} chunks • {Math.round(doc.content_size / 1024)}KB\r\n                                                    </span>\r\n                                                    <span className=\"doc-date\">\r\n                                                        {new Date(doc.created_at).toLocaleDateString()}\r\n                                                    </span>\r\n                                                </div>\r\n                                                <button \r\n                                                    className=\"delete-doc-btn\"\r\n                                                    onClick={() => deleteDocument(doc.id, doc.filename)}\r\n                                                    title=\"Elimina documento\"\r\n                                                >\r\n                                                    <Trash2 size={14} />\r\n                                                </button>\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-footer\">\r\n                            <button \r\n                                type=\"button\" \r\n                                onClick={() => setShowUploadModal(false)}\r\n                                className=\"btn-secondary\"\r\n                            >\r\n                                Chiudi\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}