{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lorenzo\\\\Desktop\\\\chatbot\\\\react-frontend\\\\src\\\\MarkdownRenderer.js\";\nimport React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport remarkGfm from 'remark-gfm';\n\n// 1. Error Boundary Component\n// This class component will catch rendering errors in its children.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass MarkdownErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false\n    };\n  }\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return {\n      hasError: true\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    // You can also log the error to an error reporting service\n    console.error(\"Error rendering Markdown:\", error, errorInfo);\n  }\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: \"Error: Impossibile renderizzare questo contenuto.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 14\n      }, this);\n    }\n    return this.props.children;\n  }\n}\n\n// 2. Memoized Markdown Renderer Component\n// This component handles the actual rendering and is wrapped by the Error Boundary.\nconst MemoizedMarkdownRenderer = /*#__PURE__*/React.memo(_c = ({\n  content\n}) => {\n  // More robust content sanitization to handle objects and other types\n  const sanitizedContent = typeof content === 'string' ? content : content && typeof content.toString === 'function' ? content.toString() : \"Contenuto non valido\";\n\n  // Ensure we always pass a string to ReactMarkdown\n  const stringContent = String(sanitizedContent || '');\n  return /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n    remarkPlugins: [remarkGfm],\n    children: stringContent\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n});\n\n// 3. Main Component to be exported\n// This component combines the Error Boundary and the Renderer.\n_c2 = MemoizedMarkdownRenderer;\nconst MarkdownRenderer = ({\n  content\n}) => {\n  return /*#__PURE__*/_jsxDEV(MarkdownErrorBoundary, {\n    children: /*#__PURE__*/_jsxDEV(MemoizedMarkdownRenderer, {\n      content: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_c3 = MarkdownRenderer;\nexport default MarkdownRenderer;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"MemoizedMarkdownRenderer$React.memo\");\n$RefreshReg$(_c2, \"MemoizedMarkdownRenderer\");\n$RefreshReg$(_c3, \"MarkdownRenderer\");","map":{"version":3,"names":["React","ReactMarkdown","remarkGfm","jsxDEV","_jsxDEV","MarkdownErrorBoundary","Component","constructor","props","state","hasError","getDerivedStateFromError","error","componentDidCatch","errorInfo","console","render","children","fileName","_jsxFileName","lineNumber","columnNumber","MemoizedMarkdownRenderer","memo","_c","content","sanitizedContent","toString","stringContent","String","remarkPlugins","_c2","MarkdownRenderer","_c3","$RefreshReg$"],"sources":["C:/Users/Lorenzo/Desktop/chatbot/react-frontend/src/MarkdownRenderer.js"],"sourcesContent":["import React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport remarkGfm from 'remark-gfm';\n\n// 1. Error Boundary Component\n// This class component will catch rendering errors in its children.\nclass MarkdownErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // You can also log the error to an error reporting service\n    console.error(\"Error rendering Markdown:\", error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return <pre>Error: Impossibile renderizzare questo contenuto.</pre>;\n    }\n\n    return this.props.children;\n  }\n}\n\n// 2. Memoized Markdown Renderer Component\n// This component handles the actual rendering and is wrapped by the Error Boundary.\nconst MemoizedMarkdownRenderer = React.memo(({ content }) => {\n  // More robust content sanitization to handle objects and other types\n  const sanitizedContent = typeof content === 'string' ? content : \n                          (content && typeof content.toString === 'function' ? content.toString() : \n                          \"Contenuto non valido\");\n  \n  // Ensure we always pass a string to ReactMarkdown\n  const stringContent = String(sanitizedContent || '');\n  \n  return (\n    <ReactMarkdown remarkPlugins={[remarkGfm]}>\n      {stringContent}\n    </ReactMarkdown>\n  );\n});\n\n// 3. Main Component to be exported\n// This component combines the Error Boundary and the Renderer.\nconst MarkdownRenderer = ({ content }) => {\n  return (\n    <MarkdownErrorBoundary>\n      <MemoizedMarkdownRenderer content={content} />\n    </MarkdownErrorBoundary>\n  );\n};\n\nexport default MarkdownRenderer;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,gBAAgB;AAC1C,OAAOC,SAAS,MAAM,YAAY;;AAElC;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,qBAAqB,SAASL,KAAK,CAACM,SAAS,CAAC;EAClDC,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MAAEC,QAAQ,EAAE;IAAM,CAAC;EAClC;EAEA,OAAOC,wBAAwBA,CAACC,KAAK,EAAE;IACrC;IACA,OAAO;MAAEF,QAAQ,EAAE;IAAK,CAAC;EAC3B;EAEAG,iBAAiBA,CAACD,KAAK,EAAEE,SAAS,EAAE;IAClC;IACAC,OAAO,CAACH,KAAK,CAAC,2BAA2B,EAAEA,KAAK,EAAEE,SAAS,CAAC;EAC9D;EAEAE,MAAMA,CAAA,EAAG;IACP,IAAI,IAAI,CAACP,KAAK,CAACC,QAAQ,EAAE;MACvB;MACA,oBAAON,OAAA;QAAAa,QAAA,EAAK;MAAiD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IACrE;IAEA,OAAO,IAAI,CAACb,KAAK,CAACS,QAAQ;EAC5B;AACF;;AAEA;AACA;AACA,MAAMK,wBAAwB,gBAAGtB,KAAK,CAACuB,IAAI,CAAAC,EAAA,GAACA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAC3D;EACA,MAAMC,gBAAgB,GAAG,OAAOD,OAAO,KAAK,QAAQ,GAAGA,OAAO,GACrCA,OAAO,IAAI,OAAOA,OAAO,CAACE,QAAQ,KAAK,UAAU,GAAGF,OAAO,CAACE,QAAQ,CAAC,CAAC,GACvE,sBAAuB;;EAE/C;EACA,MAAMC,aAAa,GAAGC,MAAM,CAACH,gBAAgB,IAAI,EAAE,CAAC;EAEpD,oBACEtB,OAAA,CAACH,aAAa;IAAC6B,aAAa,EAAE,CAAC5B,SAAS,CAAE;IAAAe,QAAA,EACvCW;EAAa;IAAAV,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEpB,CAAC,CAAC;;AAEF;AACA;AAAAU,GAAA,GAjBMT,wBAAwB;AAkB9B,MAAMU,gBAAgB,GAAGA,CAAC;EAAEP;AAAQ,CAAC,KAAK;EACxC,oBACErB,OAAA,CAACC,qBAAqB;IAAAY,QAAA,eACpBb,OAAA,CAACkB,wBAAwB;MAACG,OAAO,EAAEA;IAAQ;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzB,CAAC;AAE5B,CAAC;AAACY,GAAA,GANID,gBAAgB;AAQtB,eAAeA,gBAAgB;AAAC,IAAAR,EAAA,EAAAO,GAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAV,EAAA;AAAAU,YAAA,CAAAH,GAAA;AAAAG,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}