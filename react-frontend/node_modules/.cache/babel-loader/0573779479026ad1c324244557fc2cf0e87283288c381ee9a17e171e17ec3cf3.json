{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lorenzo\\\\Desktop\\\\chatbot-local\\\\azure-ai-chatbot\\\\react-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\n// Rimosso l'import di ReactMarkdown e remarkGfm\nimport MarkdownRenderer from './MarkdownRenderer'; // Importa il nuovo componente\nimport './style.css';\n\n// Configurazione\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PROVIDERS = [{\n  value: 'azure',\n  label: 'Azure'\n}, {\n  value: 'local',\n  label: 'Local'\n}, {\n  value: 'openrouter',\n  label: 'OpenRouter'\n}];\nconst MODELS = {\n  azure: [{\n    value: 'gpt-4.1',\n    label: 'GPT-4.1 (Azure)'\n  }],\n  local: [{\n    value: 'qwen/qwen3-4b-thinking-2507',\n    label: 'Qwen3-4B (Local)'\n  }],\n  openrouter: [{\n    value: 'openai/gpt-3.5-turbo',\n    label: 'GPT-3.5 Turbo'\n  }, {\n    value: 'anthropic/claude-3-haiku',\n    label: 'Claude 3 Haiku'\n  }, {\n    value: 'meta-llama/llama-3.1-8b-instruct:free',\n    label: 'Llama 3.1 8B (Free)'\n  }, {\n    value: 'microsoft/phi-3-mini-128k-instruct:free',\n    label: 'Phi-3 Mini (Free)'\n  }, {\n    value: 'google/gemma-2-9b-it:free',\n    label: 'Gemma 2 9B (Free)'\n  }, {\n    value: 'qwen/qwen-2-7b-instruct:free',\n    label: 'Qwen2 7B (Free)'\n  }]\n};\nfunction App() {\n  _s();\n  // Elementi DOM\n  const chatMessagesRef = useRef(null);\n  const userInputRef = useRef(null);\n  const sendButtonRef = useRef(null);\n  // Rimosso modelSelectRef perché non più utilizzato\n\n  // Stato per i modelli dinamici\n  const [availableModels, setAvailableModels] = useState(MODELS);\n\n  // Funzione per caricare le impostazioni dal localStorage\n  const loadSettingsFromStorage = () => {\n    const savedSettings = localStorage.getItem('krakenGPT-settings');\n    if (savedSettings) {\n      try {\n        var _MODELS$;\n        const parsed = JSON.parse(savedSettings);\n        return {\n          provider: parsed.provider || 'azure',\n          model: parsed.model || ((_MODELS$ = MODELS[parsed.provider || 'azure'][0]) === null || _MODELS$ === void 0 ? void 0 : _MODELS$.value) || MODELS['azure'][0].value,\n          temperature: parsed.temperature || 0.7,\n          maxTokens: parsed.maxTokens || 13107\n        };\n      } catch (e) {\n        console.error('Errore nel caricamento delle impostazioni:', e);\n      }\n    }\n    return {\n      provider: 'azure',\n      model: MODELS['azure'][0].value,\n      temperature: 0.7,\n      maxTokens: 13107\n    };\n  };\n\n  // Stato\n  const [userInput, setUserInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [isBotTyping, setIsBotTyping] = useState(false);\n  const [settings, setSettings] = useState(loadSettingsFromStorage());\n  const [showSettings, setShowSettings] = useState(false);\n  const [sidebarOpen, setSidebarOpen] = useState(false); // Sidebar chiusa di default\n  const [projects, setProjects] = useState([]);\n  const [projectChats, setProjectChats] = useState([]); // Chat del progetto corrente\n  const [independentChats, setIndependentChats] = useState([]); // Chat indipendenti\n  const [currentProject, setCurrentProject] = useState(null);\n  const [currentChat, setCurrentChat] = useState(null);\n  const [showProjectForm, setShowProjectForm] = useState(false);\n  const [editingProject, setEditingProject] = useState(null);\n  const [projectForm, setProjectForm] = useState({\n    name: '',\n    description: '',\n    prompt: ''\n  });\n  const [showChatForm, setShowChatForm] = useState(false);\n  const [chatForm, setChatForm] = useState({\n    title: '',\n    projectId: null\n  });\n  const [showContextModal, setShowContextModal] = useState(false);\n  const [currentContext, setCurrentContext] = useState(\"\");\n\n  // Stato streaming\n  const [currentBotMessage, setCurrentBotMessage] = useState('');\n\n  // Stato per il pulsante stop e timer\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [abortController, setAbortController] = useState(null);\n  const [responseTime, setResponseTime] = useState(null);\n  const [startTime, setStartTime] = useState(null);\n\n  // Inizializzazione\n\n  // Funzione per salvare le impostazioni nel localStorage\n  const saveSettingsToStorage = newSettings => {\n    localStorage.setItem('krakenGPT-settings', JSON.stringify(newSettings));\n  };\n\n  // Carica modelli dal backend\n  const loadModels = useCallback(async () => {\n    try {\n      const response = await fetch('/models');\n      if (response.ok) {\n        const data = await response.json();\n        console.log(\"Modelli ricevuti dal backend:\", data);\n\n        // Aggiorna i modelli disponibili\n        const newModels = {\n          azure: data.models.azure.map(model => ({\n            value: model,\n            label: model.replace('gpt-', 'GPT-').replace('-', ' ').toUpperCase()\n          })),\n          openrouter: data.models.openrouter.map(model => ({\n            value: model,\n            label: model.includes(':free') ? `${model.split('/')[1]} (Free)` : model.split('/')[1] || model\n          })),\n          local: data.models.local.map(model => ({\n            value: model,\n            label: `${model} (Local)`\n          }))\n        };\n        setAvailableModels(newModels);\n        console.log(\"Modelli aggiornati:\", newModels);\n      }\n    } catch (err) {\n      console.error(\"Errore caricamento modelli:\", err);\n    }\n  }, []);\n\n  // Carica progetti dal backend\n  const loadProjects = useCallback(async () => {\n    try {\n      const response = await fetch('/api/projects');\n      if (response.ok) {\n        const data = await response.json();\n        setProjects(data);\n        if (data.length > 0) {\n          setCurrentProject(data[0]);\n          loadChats(data[0].id);\n        }\n      }\n    } catch (err) {\n      console.error(\"Errore caricamento progetti:\", err);\n    }\n  }, []);\n\n  // Carica chat per un progetto\n  async function loadChats(projectId) {\n    try {\n      const response = await fetch(`/api/projects/${projectId}/chats`);\n      if (response.ok) {\n        const data = await response.json();\n        setProjectChats(data);\n      }\n    } catch (err) {\n      console.error(\"Errore caricamento chat:\", err);\n    }\n  }\n\n  // Carica messaggi di una chat specifica\n  async function loadChatMessages(chatId) {\n    try {\n      const response = await fetch(`/api/chats/${chatId}`);\n      if (response.ok) {\n        const chat = await response.json();\n\n        // Converti i timestamp da stringhe a oggetti Date\n        // E converti i ruoli 'bot' in 'assistant' per compatibilità con Azure AI\n        const messagesWithDates = (chat.messages || []).map(msg => ({\n          ...msg,\n          role: msg.role === 'bot' ? 'assistant' : msg.role,\n          timestamp: new Date(msg.timestamp)\n        }));\n        setMessages(messagesWithDates);\n      }\n    } catch (err) {\n      console.error(\"Errore caricamento messaggi:\", err);\n    }\n  }\n\n  // Salva messaggi di una chat\n  async function saveChatMessages(chatId, messages) {\n    try {\n      const response = await fetch(`/api/chats/${chatId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          messages: messages\n        })\n      });\n      if (!response.ok) {\n        console.error(\"Errore salvataggio messaggi:\", response.statusText);\n      }\n    } catch (err) {\n      console.error(\"Errore salvataggio messaggi:\", err);\n    }\n  }\n\n  // Carica chat indipendenti (per ora vuoto, da implementare nel backend)\n  async function loadIndependentChats() {\n    try {\n      // TODO: Implementare API per chat indipendenti nel backend\n      // const response = await fetch('/api/independent-chats');\n      // if (response.ok) {\n      //     const data = await response.json();\n      //     setIndependentChats(data);\n      // }\n      setIndependentChats([]);\n    } catch (err) {\n      console.error(\"Errore caricamento chat indipendenti:\", err);\n    }\n  }\n\n  // Inizializzazione\n  useEffect(() => {\n    loadModels(); // Carica i modelli dinamici per primi\n    loadSupportedModels();\n    loadProjects();\n    loadIndependentChats();\n  }, [loadProjects, loadModels]); // Dipendenza corretta con useCallback\n\n  // Apri form per nuovo progetto\n  function openProjectForm(project = null) {\n    if (project) {\n      setEditingProject(project);\n      setProjectForm({\n        name: project.name,\n        description: project.description || '',\n        prompt: project.prompt || ''\n      });\n    } else {\n      setEditingProject(null);\n      setProjectForm({\n        name: '',\n        description: '',\n        prompt: ''\n      });\n    }\n    setShowProjectForm(true);\n  }\n\n  // Chiudi form progetto\n  function closeProjectForm() {\n    setShowProjectForm(false);\n    setEditingProject(null);\n    setProjectForm({\n      name: '',\n      description: '',\n      prompt: ''\n    });\n  }\n\n  // Salva progetto (crea o modifica)\n  async function saveProject(e) {\n    e.preventDefault();\n    if (!projectForm.name.trim()) return;\n    try {\n      const url = editingProject ? `/api/projects/${editingProject.id}` : '/api/projects';\n      const method = editingProject ? 'PUT' : 'POST';\n      const response = await fetch(url, {\n        method: method,\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: projectForm.name.trim(),\n          description: projectForm.description.trim(),\n          prompt: projectForm.prompt.trim()\n        })\n      });\n      if (response.ok) {\n        const savedProject = await response.json();\n        if (editingProject) {\n          // Aggiorna progetto esistente\n          setProjects(prev => prev.map(p => p.id === editingProject.id ? savedProject : p));\n          if ((currentProject === null || currentProject === void 0 ? void 0 : currentProject.id) === editingProject.id) {\n            setCurrentProject(savedProject);\n          }\n        } else {\n          // Aggiungi nuovo progetto\n          setProjects(prev => [...prev, savedProject]);\n          setCurrentProject(savedProject);\n          setProjectChats([]);\n        }\n        closeProjectForm();\n      }\n    } catch (err) {\n      console.error(\"Errore salvataggio progetto:\", err);\n    }\n  }\n\n  // Elimina progetto\n  async function deleteProject(projectId) {\n    if (!window.confirm(\"Sei sicuro di voler eliminare questo progetto?\")) return;\n    try {\n      const response = await fetch(`/api/projects/${projectId}`, {\n        method: 'DELETE'\n      });\n      if (response.ok) {\n        setProjects(prev => prev.filter(p => p.id !== projectId));\n        if ((currentProject === null || currentProject === void 0 ? void 0 : currentProject.id) === projectId) {\n          setCurrentProject(null);\n          setProjectChats([]);\n        }\n      }\n    } catch (err) {\n      console.error(\"Errore eliminazione progetto:\", err);\n    }\n  }\n\n  // Elimina chat\n  async function deleteChat(chatId, isIndependent = false) {\n    if (!window.confirm(\"Sei sicuro di voler eliminare questa chat? Questa azione non può essere annullata.\")) return;\n    try {\n      const response = await fetch(`/api/chats/${chatId}`, {\n        method: 'DELETE'\n      });\n      if (response.ok) {\n        if (isIndependent) {\n          setIndependentChats(prev => prev.filter(c => c.id !== chatId));\n        } else {\n          setProjectChats(prev => prev.filter(c => c.id !== chatId));\n        }\n\n        // Se la chat eliminata è quella corrente, deseleziona\n        if ((currentChat === null || currentChat === void 0 ? void 0 : currentChat.id) === chatId) {\n          setCurrentChat(null);\n          setMessages([]);\n        }\n      }\n    } catch (err) {\n      console.error(\"Errore eliminazione chat:\", err);\n    }\n  }\n\n  // Apri form per nuova chat\n  function openChatForm() {\n    setChatForm({\n      title: '',\n      projectId: (currentProject === null || currentProject === void 0 ? void 0 : currentProject.id) || null\n    });\n    setShowChatForm(true);\n  }\n\n  // Chiudi form chat\n  function closeChatForm() {\n    setShowChatForm(false);\n    setChatForm({\n      title: '',\n      projectId: null\n    });\n  }\n\n  // Crea nuova chat\n  async function createChat(e) {\n    e.preventDefault();\n    if (!chatForm.title.trim()) return;\n    try {\n      // Per ora, le chat indipendenti non sono supportate dal backend\n      // Creiamo sempre una chat di progetto\n      const projectId = chatForm.projectId || (projects.length > 0 ? projects[0].id : null);\n      if (!projectId) {\n        alert(\"Crea prima un progetto per poter creare chat!\");\n        return;\n      }\n      const response = await fetch('/api/chats', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          project_id: projectId,\n          title: chatForm.title.trim(),\n          messages: []\n        })\n      });\n      if (response.ok) {\n        const newChat = await response.json();\n\n        // Aggiorna la lista delle chat del progetto\n        setProjectChats(prev => [...prev, newChat]);\n\n        // Se è il progetto corrente, seleziona la chat\n        if ((currentProject === null || currentProject === void 0 ? void 0 : currentProject.id) === projectId) {\n          setCurrentChat(newChat);\n          setMessages([]);\n        }\n        closeChatForm();\n      }\n    } catch (err) {\n      console.error(\"Errore creazione chat:\", err);\n    }\n  }\n\n  // Salva il contesto della chat\n  async function saveChatContext() {\n    if (!currentChat) return;\n    try {\n      const response = await fetch(`/api/chats/${currentChat.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          context: currentContext\n        })\n      });\n      if (response.ok) {\n        const updatedChat = await response.json();\n        // Aggiorna la chat corrente nello stato per riflettere il nuovo contesto\n        setCurrentChat(updatedChat);\n        // Aggiorna anche la lista delle chat\n        if (updatedChat.project_id) {\n          setProjectChats(prev => prev.map(c => c.id === updatedChat.id ? updatedChat : c));\n        } else {\n          setIndependentChats(prev => prev.map(c => c.id === updatedChat.id ? updatedChat : c));\n        }\n      }\n    } catch (err) {\n      console.error(\"Errore salvataggio contesto:\", err);\n    } finally {\n      setShowContextModal(false);\n    }\n  }\n\n  // Effetto per lo scroll automatico\n  useEffect(() => {\n    if (chatMessagesRef.current) {\n      chatMessagesRef.current.scrollTop = chatMessagesRef.current.scrollHeight;\n    }\n  }, [messages, isBotTyping]);\n\n  // Carica modelli dal backend\n  async function loadSupportedModels() {\n    try {\n      const response = await fetch('/models');\n      if (response.ok) {\n        const data = await response.json();\n        console.log(\"Modelli supportati:\", data.models);\n      }\n    } catch (err) {\n      console.error(\"Errore caricamento modelli:\", err);\n    }\n  }\n\n  // Invio messaggio\n  function sendMessage(e) {\n    e.preventDefault();\n    const text = userInput.trim();\n    if (!text || isGenerating) return;\n\n    // Aggiungi messaggio utente\n    const userMsg = {\n      id: Date.now(),\n      role: 'user',\n      content: text,\n      timestamp: new Date()\n    };\n    const updatedMessages = [...messages, userMsg];\n    setMessages(updatedMessages);\n    setUserInput('');\n    setIsBotTyping(true);\n    setCurrentBotMessage('');\n    setIsGenerating(true);\n    setResponseTime(null);\n    setStartTime(Date.now());\n\n    // Salva i messaggi nel database se c'è una chat corrente\n    if (currentChat) {\n      saveChatMessages(currentChat.id, updatedMessages);\n    }\n\n    // Ottieni risposta del bot\n    getBotResponse(updatedMessages);\n  }\n\n  // Risposta Bot (Streaming)\n  async function getBotResponse(currentMessages) {\n    const controller = new AbortController();\n    setAbortController(controller);\n    try {\n      console.log(\"Inviando richiesta al bot con modello:\", settings.model);\n      const systemMessage = `You are KrakenGPT, a helpful AI coding partner. Always format your responses using Markdown. For code blocks, use triple backticks (\\`\\`\\`) and specify the language.`;\n      const context = (currentChat === null || currentChat === void 0 ? void 0 : currentChat.context) || \"\";\n      const systemMessageWithContext = context ? `${systemMessage}\\n\\n--- CONTEXT ---\\n${context}\\n--- END CONTEXT ---` : systemMessage;\n\n      // Formatta i messaggi per l'API (solo 'role' e 'content')\n      // Azure AI richiede ruoli specifici: 'system', 'assistant', 'user', 'function', 'tool', 'developer'\n      const apiMessages = currentMessages.map(({\n        role,\n        content\n      }) => {\n        // Converti 'bot' in 'assistant' per compatibilità con Azure AI\n        const azureRole = role === 'bot' ? 'assistant' : role;\n        return {\n          role: azureRole,\n          content\n        };\n      });\n      const requestBody = {\n        provider: settings.provider,\n        model: settings.model,\n        messages: [{\n          role: \"system\",\n          content: systemMessageWithContext\n        }, ...apiMessages],\n        temperature: settings.temperature,\n        max_tokens: settings.maxTokens,\n        stream: true\n      };\n      console.log(\"Corpo della richiesta:\", requestBody);\n      const response = await fetch('/v1/chat/completions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(requestBody),\n        signal: controller.signal\n      });\n      console.log(\"Risposta ricevuta:\", response.status, response.statusText);\n      console.log(\"Headers della risposta:\", [...response.headers.entries()]);\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error(\"Errore HTTP:\", response.status, errorText);\n        throw new Error(`HTTP ${response.status}: ${errorText}`);\n      }\n\n      // Verifica se la risposta è effettivamente uno stream\n      if (!response.body) {\n        console.error(\"La risposta non contiene un body streamabile\");\n        throw new Error(\"La risposta non contiene un body streamabile\");\n      }\n      const reader = response.body.getReader();\n      const decoder = new TextDecoder();\n      let buffer = \"\";\n      let botMessageContent = \"\";\n      let chunkCount = 0;\n      let hasReceivedContent = false;\n      while (true) {\n        const {\n          done,\n          value\n        } = await reader.read();\n        chunkCount++;\n        console.log(`Chunk ${chunkCount}: done=${done}, value length=${(value === null || value === void 0 ? void 0 : value.length) || 0}`);\n        if (done) {\n          console.log(\"Stream completato\");\n          break;\n        }\n\n        // Segnala che abbiamo ricevuto almeno un chunk\n        hasReceivedContent = true;\n        buffer += decoder.decode(value, {\n          stream: true\n        });\n        const lines = buffer.split(\"\\n\");\n        buffer = lines.pop();\n        for (const line of lines) {\n          console.log(\"Linea ricevuta:\", line);\n          if (line.startsWith(\"data: \")) {\n            const jsonStr = line.slice(6);\n            if (jsonStr === \"[DONE]\") {\n              console.log(\"Stream terminato con [DONE]\");\n              break;\n            }\n            try {\n              var _data$choices, _data$choices$, _data$choices$$delta;\n              const data = JSON.parse(jsonStr);\n              console.log(\"Dati ricevuti:\", data);\n              const content = (_data$choices = data.choices) === null || _data$choices === void 0 ? void 0 : (_data$choices$ = _data$choices[0]) === null || _data$choices$ === void 0 ? void 0 : (_data$choices$$delta = _data$choices$.delta) === null || _data$choices$$delta === void 0 ? void 0 : _data$choices$$delta.content;\n              if (content) {\n                botMessageContent += content;\n                setCurrentBotMessage(botMessageContent);\n              }\n            } catch (e) {\n              console.warn(\"Parse error:\", e, \"Line:\", line);\n            }\n          }\n        }\n      }\n      console.log(\"Contenuto finale del bot:\", botMessageContent);\n\n      // Determina il contenuto del messaggio del bot\n      let finalContent;\n      if (!hasReceivedContent) {\n        finalContent = \"❌ Nessuna risposta ricevuta dal modello. Il server ha restituito una risposta vuota.\";\n      } else if (!botMessageContent) {\n        finalContent = \"❌ Nessun contenuto ricevuto dal modello. La risposta potrebbe essere stata interrotta.\";\n      } else {\n        finalContent = botMessageContent;\n      }\n\n      // Aggiungi messaggio completo del bot\n      const botMsg = {\n        id: Date.now(),\n        role: 'assistant',\n        // Usiamo 'assistant' invece di 'bot' per compatibilità con Azure AI\n        content: finalContent,\n        timestamp: new Date()\n      };\n      setMessages(prev => {\n        const updatedMessages = [...prev, botMsg];\n\n        // Salva i messaggi nel database se c'è una chat corrente\n        if (currentChat) {\n          saveChatMessages(currentChat.id, updatedMessages);\n        }\n        return updatedMessages;\n      });\n    } catch (error) {\n      console.error(\"Errore completo:\", error);\n\n      // Se l'errore è dovuto a AbortController, non mostrare messaggio di errore\n      if (error.name === 'AbortError') {\n        const abortMsg = {\n          id: Date.now(),\n          role: 'bot',\n          content: '⏹️ Risposta interrotta dall\\'utente.',\n          timestamp: new Date()\n        };\n        setMessages(prev => {\n          const updatedMessages = [...prev, abortMsg];\n\n          // Salva i messaggi nel database se c'è una chat corrente\n          if (currentChat) {\n            saveChatMessages(currentChat.id, updatedMessages);\n          }\n          return updatedMessages;\n        });\n      } else {\n        const errorMsg = {\n          id: Date.now(),\n          role: 'bot',\n          content: `❌ Errore: ${error.message}`,\n          timestamp: new Date()\n        };\n        setMessages(prev => {\n          const updatedMessages = [...prev, errorMsg];\n\n          // Salva i messaggi nel database se c'è una chat corrente\n          if (currentChat) {\n            saveChatMessages(currentChat.id, updatedMessages);\n          }\n          return updatedMessages;\n        });\n      }\n    } finally {\n      // Calcola il tempo di risposta\n      if (startTime) {\n        const endTime = Date.now();\n        const responseTimeMs = endTime - startTime;\n        setResponseTime(responseTimeMs);\n      }\n      setIsBotTyping(false);\n      setCurrentBotMessage('');\n      setIsGenerating(false);\n      setAbortController(null);\n    }\n  }\n\n  // Funzione per fermare la generazione\n  function stopGeneration() {\n    if (abortController) {\n      abortController.abort();\n    }\n  }\n\n  // Copia codice negli appunti\n  // Salva impostazioni\n  function saveSettings() {\n    var _document$getElementB, _document$getElementB2, _document$getElementB3, _document$getElementB4;\n    const provider = ((_document$getElementB = document.getElementById('provider-select')) === null || _document$getElementB === void 0 ? void 0 : _document$getElementB.value) || settings.provider;\n    const model = ((_document$getElementB2 = document.getElementById('model-select')) === null || _document$getElementB2 === void 0 ? void 0 : _document$getElementB2.value) || settings.model;\n    setSettings({\n      provider,\n      model,\n      temperature: parseFloat(((_document$getElementB3 = document.getElementById('temperature')) === null || _document$getElementB3 === void 0 ? void 0 : _document$getElementB3.value) || settings.temperature),\n      maxTokens: parseInt(((_document$getElementB4 = document.getElementById('max-tokens')) === null || _document$getElementB4 === void 0 ? void 0 : _document$getElementB4.value) || settings.maxTokens)\n    });\n    setShowSettings(false);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: `sidebar ${sidebarOpen ? 'open' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"KrakenGPT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 713,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"icon-btn close-sidebar-btn\",\n          onClick: () => setSidebarOpen(false),\n          title: \"Chiudi sidebar\",\n          children: \"\\u2630\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 714,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 712,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"sidebar-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\uD83D\\uDCC2 Progetti\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 726,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"icon-btn new-project-btn\",\n            onClick: () => openProjectForm(),\n            title: \"Nuovo Progetto\",\n            \"aria-label\": \"Crea nuovo progetto\",\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 727,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 725,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"projects-list\",\n          children: projects.map(project => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: `sidebar-item project-item ${(currentProject === null || currentProject === void 0 ? void 0 : currentProject.id) === project.id ? 'active' : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"project-name\",\n              onClick: () => {\n                setCurrentProject(project);\n                loadChats(project.id);\n              },\n              children: project.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 742,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"project-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"icon-btn edit-project-btn\",\n                onClick: e => {\n                  e.stopPropagation();\n                  openProjectForm(project);\n                },\n                title: \"Modifica progetto\",\n                \"aria-label\": \"Modifica progetto\",\n                children: \"\\u270E\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 752,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"icon-btn delete-project-btn\",\n                onClick: e => {\n                  e.stopPropagation();\n                  deleteProject(project.id);\n                },\n                title: \"Elimina progetto\",\n                \"aria-label\": \"Elimina progetto\",\n                children: \"\\u2297\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 763,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 751,\n              columnNumber: 33\n            }, this)]\n          }, project.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 738,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 736,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 724,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"sidebar-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\uD83D\\uDCAC Chat recenti\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 783,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"icon-btn new-chat-btn\",\n            onClick: openChatForm,\n            title: \"Nuova Chat\",\n            \"aria-label\": \"Avvia nuova chat\",\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 784,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 782,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"conversation-history\",\n          children: [projectChats.map(chat => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: `sidebar-item chat-item ${(currentChat === null || currentChat === void 0 ? void 0 : currentChat.id) === chat.id ? 'active' : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat-content\",\n              onClick: () => {\n                setCurrentChat(chat);\n                loadChatMessages(chat.id);\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chat-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"chat-title\",\n                  children: chat.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 807,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"chat-project\",\n                  children: currentProject === null || currentProject === void 0 ? void 0 : currentProject.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 808,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 806,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 799,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat-actions\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"icon-btn delete-chat-btn\",\n                onClick: e => {\n                  e.stopPropagation();\n                  deleteChat(chat.id, false);\n                },\n                title: \"Elimina chat\",\n                \"aria-label\": \"Elimina chat\",\n                children: \"\\u2297\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 812,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 811,\n              columnNumber: 33\n            }, this)]\n          }, chat.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 795,\n            columnNumber: 29\n          }, this)), independentChats.map(chat => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: `sidebar-item chat-item ${(currentChat === null || currentChat === void 0 ? void 0 : currentChat.id) === chat.id ? 'active' : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat-content\",\n              onClick: () => {\n                setCurrentChat(chat);\n                loadChatMessages(chat.id);\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chat-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"chat-title\",\n                  children: chat.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 839,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"chat-project independent\",\n                  children: \"Indipendente\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 840,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 838,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 831,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat-actions\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"icon-btn delete-chat-btn\",\n                onClick: e => {\n                  e.stopPropagation();\n                  deleteChat(chat.id, true);\n                },\n                title: \"Elimina chat\",\n                \"aria-label\": \"Elimina chat\",\n                children: \"\\u2297\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 844,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 843,\n              columnNumber: 33\n            }, this)]\n          }, `ind-${chat.id}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 827,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 793,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 781,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        className: \"sidebar-footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-avatar\",\n            \"aria-hidden\": \"true\",\n            children: \"\\uD83D\\uDC64\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 864,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"user-name\",\n            children: \"Utente\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 865,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 863,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"settings-btn\",\n          onClick: () => setShowSettings(true),\n          children: \"\\u2699 Impostazioni\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 867,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 862,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 710,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-container\",\n      children: [!sidebarOpen && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"open-sidebar-btn\",\n        onClick: () => setSidebarOpen(true),\n        title: \"Apri sidebar\",\n        children: \"\\u2630\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 875,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"chat-header\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-header-main\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            id: \"chat-title\",\n            children: \"KrakenGPT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 887,\n            columnNumber: 25\n          }, this), currentChat && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"edit-context-btn\",\n            onClick: () => {\n              setCurrentContext(currentChat.context || \"\");\n              setShowContextModal(true);\n            },\n            title: \"Aggiungi Contesto RAG\",\n            children: \"\\uD83D\\uDCDA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 891,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 886,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 885,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"chat-messages\",\n        ref: chatMessagesRef,\n        \"aria-live\": \"polite\",\n        \"aria-atomic\": \"false\",\n        children: currentChat && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [messages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${msg.role}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-content\",\n              children: /*#__PURE__*/_jsxDEV(MarkdownRenderer, {\n                content: typeof msg.content === 'string' ? msg.content : JSON.stringify(msg.content, null, 2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 912,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 911,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-time\",\n              children: new Date(msg.timestamp).toLocaleTimeString([], {\n                hour: '2-digit',\n                minute: '2-digit'\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 914,\n              columnNumber: 37\n            }, this)]\n          }, msg.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 910,\n            columnNumber: 33\n          }, this)), isBotTyping && currentBotMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message bot streaming\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-content\",\n              children: /*#__PURE__*/_jsxDEV(MarkdownRenderer, {\n                content: typeof currentBotMessage === 'string' ? currentBotMessage : JSON.stringify(currentBotMessage, null, 2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 924,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 923,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 922,\n            columnNumber: 33\n          }, this), isBotTyping && !currentBotMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"enhanced-typing-indicator\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"typing-text\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 933,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 934,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 935,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 932,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 931,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 906,\n        columnNumber: 17\n      }, this), !currentChat && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-chat-selected\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"welcome-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Benvenuto in KrakenGPT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 947,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Seleziona una chat esistente o creane una nuova per iniziare.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 948,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"recent-chats-box\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Chat Recenti\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 950,\n              columnNumber: 33\n            }, this), projectChats.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"recent-chats-list\",\n              children: projectChats.slice(0, 5).map(chat => /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"recent-chat-item\",\n                onClick: () => {\n                  setCurrentChat(chat);\n                  loadChatMessages(chat.id);\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"recent-chat-title\",\n                  children: chat.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 962,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"recent-chat-project\",\n                  children: currentProject === null || currentProject === void 0 ? void 0 : currentProject.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 963,\n                  columnNumber: 49\n                }, this)]\n              }, chat.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 954,\n                columnNumber: 45\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 952,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"no-recent-chats\",\n              children: \"Nessuna chat recente disponibile.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 968,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 949,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"new-chat-button\",\n            onClick: openChatForm,\n            children: \"+ Nuova Chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 971,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 946,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 945,\n        columnNumber: 21\n      }, this), currentChat && /*#__PURE__*/_jsxDEV(\"footer\", {\n        className: \"chat-input-container\",\n        children: [responseTime && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"response-time\",\n          children: [\"\\u23F1\\uFE0F Tempo di risposta: \", (responseTime / 1000).toFixed(2), \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 986,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"input-row\",\n          onSubmit: sendMessage,\n          autoComplete: \"off\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"file-input\",\n            className: \"file-upload-btn\",\n            children: [\"\\uD83D\\uDCCE\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              id: \"file-input\",\n              accept: \"image/*,.pdf,.txt\",\n              hidden: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 994,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 992,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: userInput,\n            onChange: e => setUserInput(e.target.value),\n            ref: userInputRef,\n            placeholder: \"Chiedi qualcosa a KrakenGPT...\",\n            \"aria-label\": \"Inserisci messaggio\",\n            required: true,\n            disabled: isGenerating,\n            onKeyDown: e => {\n              if (e.key === 'Enter' && !e.shiftKey) {\n                e.preventDefault();\n                if (!isGenerating) {\n                  sendMessage(e);\n                }\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 996,\n            columnNumber: 29\n          }, this), isGenerating ? /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: stopGeneration,\n            className: \"stop-btn\",\n            \"aria-label\": \"Interrompi generazione\",\n            children: \"\\u23F9\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1014,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            ref: sendButtonRef,\n            \"aria-label\": \"Invia messaggio\",\n            disabled: isBotTyping,\n            children: \"\\u27A4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1023,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 991,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-warning\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"KrakenGPT pu\\xF2 commettere errori. Verifica le informazioni importanti.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1034,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1033,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 983,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 872,\n      columnNumber: 13\n    }, this), showProjectForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      role: \"dialog\",\n      \"aria-modal\": \"true\",\n      \"aria-labelledby\": \"project-form-title\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            id: \"project-form-title\",\n            children: editingProject ? 'Modifica Progetto' : 'Nuovo Progetto'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1045,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-btn\",\n            onClick: closeProjectForm,\n            \"aria-label\": \"Chiudi form progetto\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1048,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1044,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"modal-body\",\n          onSubmit: saveProject,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"project-name\",\n              children: \"Nome Progetto *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1058,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"project-name\",\n              value: projectForm.name,\n              onChange: e => setProjectForm(prev => ({\n                ...prev,\n                name: e.target.value\n              })),\n              placeholder: \"Inserisci il nome del progetto\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1059,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1057,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"project-description\",\n              children: \"Descrizione\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1070,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: \"project-description\",\n              value: projectForm.description,\n              onChange: e => setProjectForm(prev => ({\n                ...prev,\n                description: e.target.value\n              })),\n              placeholder: \"Descrizione del progetto (opzionale)\",\n              rows: \"3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1071,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1069,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"project-prompt\",\n              children: \"Project Prompt\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1081,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: \"project-prompt\",\n              value: projectForm.prompt,\n              onChange: e => setProjectForm(prev => ({\n                ...prev,\n                prompt: e.target.value\n              })),\n              placeholder: \"Prompt di sistema per questo progetto (es: 'Sei un assistente specializzato in React e JavaScript...')\",\n              rows: \"4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1082,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"form-help\",\n              children: \"Questo prompt verr\\xE0 utilizzato come contesto di sistema per tutte le chat di questo progetto.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1089,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1080,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1056,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: saveProject,\n            className: \"btn-primary\",\n            disabled: !projectForm.name.trim(),\n            children: editingProject ? 'Salva Modifiche' : 'Crea Progetto'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1095,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: closeProjectForm,\n            className: \"btn-secondary\",\n            children: \"Annulla\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1103,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1094,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1043,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1042,\n      columnNumber: 17\n    }, this), showChatForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      role: \"dialog\",\n      \"aria-modal\": \"true\",\n      \"aria-labelledby\": \"chat-form-title\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            id: \"chat-form-title\",\n            children: \"Nuova Chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1120,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-btn\",\n            onClick: closeChatForm,\n            \"aria-label\": \"Chiudi form chat\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1121,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1119,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"modal-body\",\n          onSubmit: createChat,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"chat-title\",\n              children: \"Titolo Chat *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1131,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"chat-title\",\n              value: chatForm.title,\n              onChange: e => setChatForm(prev => ({\n                ...prev,\n                title: e.target.value\n              })),\n              placeholder: \"Inserisci il titolo della chat\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1132,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1130,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"chat-project\",\n              children: \"Progetto\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1143,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"chat-project\",\n              value: chatForm.projectId || '',\n              onChange: e => setChatForm(prev => ({\n                ...prev,\n                projectId: e.target.value || null\n              })),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Nessun progetto (Chat indipendente)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1149,\n                columnNumber: 37\n              }, this), projects.map(project => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: project.id,\n                children: project.name\n              }, project.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1151,\n                columnNumber: 41\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1144,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"form-help\",\n              children: \"Scegli un progetto per associare la chat, oppure lascia vuoto per una chat indipendente.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1156,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1142,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1129,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            onClick: createChat,\n            className: \"btn-primary\",\n            disabled: !chatForm.title.trim(),\n            children: \"Crea Chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1162,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: closeChatForm,\n            className: \"btn-secondary\",\n            children: \"Annulla\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1170,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1161,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1118,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1117,\n      columnNumber: 17\n    }, this), showSettings && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      role: \"dialog\",\n      \"aria-modal\": \"true\",\n      \"aria-labelledby\": \"settings-title\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            id: \"settings-title\",\n            children: \"Impostazioni\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1187,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-btn\",\n            onClick: () => setShowSettings(false),\n            \"aria-label\": \"Chiudi impostazioni\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1188,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1186,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"setting-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"provider-select\",\n              children: \"Provider\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1198,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"provider-select\",\n              value: settings.provider,\n              onChange: e => {\n                var _MODELS$newProvider$;\n                const newProvider = e.target.value;\n                const defaultModel = ((_MODELS$newProvider$ = MODELS[newProvider][0]) === null || _MODELS$newProvider$ === void 0 ? void 0 : _MODELS$newProvider$.value) || '';\n                setSettings(prev => ({\n                  ...prev,\n                  provider: newProvider,\n                  model: defaultModel\n                }));\n              },\n              children: PROVIDERS.map(p => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: p.value,\n                children: p.label\n              }, p.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1209,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1199,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1197,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"setting-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"model-select\",\n              children: \"Modello\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1214,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"model-select\",\n              value: settings.model,\n              onChange: e => setSettings(prev => ({\n                ...prev,\n                model: e.target.value\n              })),\n              children: MODELS[settings.provider].map(m => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: m.value,\n                children: m.label\n              }, m.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1221,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1215,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1213,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"setting-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"temperature\",\n              children: [\"Temperatura: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                id: \"temperature-value\",\n                children: settings.temperature\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1228,\n                columnNumber: 50\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1227,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              id: \"temperature\",\n              min: \"0\",\n              max: \"1\",\n              step: \"0.1\",\n              defaultValue: settings.temperature,\n              onChange: e => {\n                document.getElementById('temperature-value').textContent = e.target.value;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1230,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1226,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"setting-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"max-tokens\",\n              children: [\"Token massimi: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                id: \"max-tokens-value\",\n                children: settings.maxTokens\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1245,\n                columnNumber: 52\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1244,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              id: \"max-tokens\",\n              min: \"100\",\n              max: \"32768\",\n              step: \"100\",\n              defaultValue: settings.maxTokens,\n              onChange: e => {\n                document.getElementById('max-tokens-value').textContent = e.target.value;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1247,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1243,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1196,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"save-settings\",\n            onClick: saveSettings,\n            children: \"Salva\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1261,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"cancel-settings\",\n            onClick: () => setShowSettings(false),\n            children: \"Annulla\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1262,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1260,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1185,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1184,\n      columnNumber: 17\n    }, this), showContextModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      role: \"dialog\",\n      \"aria-modal\": \"true\",\n      \"aria-labelledby\": \"context-modal-title\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            id: \"context-modal-title\",\n            children: \"\\uD83D\\uDCDA Aggiungi Contesto RAG\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1273,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-btn\",\n            onClick: () => setShowContextModal(false),\n            \"aria-label\": \"Chiudi modale contesto\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1274,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1272,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-body\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"chat-context\",\n              children: \"Contesto per la Chat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1284,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: \"chat-context\",\n              value: currentContext,\n              onChange: e => setCurrentContext(e.target.value),\n              placeholder: \"Incolla qui il testo da usare come contesto per l'AI...\",\n              rows: \"8\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1285,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"form-help\",\n              children: \"Questo testo verr\\xE0 aggiunto al prompt di sistema per fornire contesto all'AI (RAG).\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1292,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1283,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1282,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: saveChatContext,\n            className: \"btn-primary\",\n            children: \"Salva Contesto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1298,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => setShowContextModal(false),\n            className: \"btn-secondary\",\n            children: \"Annulla\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1305,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1297,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1271,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1270,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 708,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"rnAD0mjwuHs+gUeF3d8x/ynvqNw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","MarkdownRenderer","jsxDEV","_jsxDEV","Fragment","_Fragment","PROVIDERS","value","label","MODELS","azure","local","openrouter","App","_s","chatMessagesRef","userInputRef","sendButtonRef","availableModels","setAvailableModels","loadSettingsFromStorage","savedSettings","localStorage","getItem","_MODELS$","parsed","JSON","parse","provider","model","temperature","maxTokens","e","console","error","userInput","setUserInput","messages","setMessages","isBotTyping","setIsBotTyping","settings","setSettings","showSettings","setShowSettings","sidebarOpen","setSidebarOpen","projects","setProjects","projectChats","setProjectChats","independentChats","setIndependentChats","currentProject","setCurrentProject","currentChat","setCurrentChat","showProjectForm","setShowProjectForm","editingProject","setEditingProject","projectForm","setProjectForm","name","description","prompt","showChatForm","setShowChatForm","chatForm","setChatForm","title","projectId","showContextModal","setShowContextModal","currentContext","setCurrentContext","currentBotMessage","setCurrentBotMessage","isGenerating","setIsGenerating","abortController","setAbortController","responseTime","setResponseTime","startTime","setStartTime","saveSettingsToStorage","newSettings","setItem","stringify","loadModels","response","fetch","ok","data","json","log","newModels","models","map","replace","toUpperCase","includes","split","err","loadProjects","length","loadChats","id","loadChatMessages","chatId","chat","messagesWithDates","msg","role","timestamp","Date","saveChatMessages","method","headers","body","statusText","loadIndependentChats","loadSupportedModels","openProjectForm","project","closeProjectForm","saveProject","preventDefault","trim","url","savedProject","prev","p","deleteProject","window","confirm","filter","deleteChat","isIndependent","c","openChatForm","closeChatForm","createChat","alert","project_id","newChat","saveChatContext","context","updatedChat","current","scrollTop","scrollHeight","sendMessage","text","userMsg","now","content","updatedMessages","getBotResponse","currentMessages","controller","AbortController","systemMessage","systemMessageWithContext","apiMessages","azureRole","requestBody","max_tokens","stream","signal","status","entries","errorText","Error","reader","getReader","decoder","TextDecoder","buffer","botMessageContent","chunkCount","hasReceivedContent","done","read","decode","lines","pop","line","startsWith","jsonStr","slice","_data$choices","_data$choices$","_data$choices$$delta","choices","delta","warn","finalContent","botMsg","abortMsg","errorMsg","message","endTime","responseTimeMs","stopGeneration","abort","saveSettings","_document$getElementB","_document$getElementB2","_document$getElementB3","_document$getElementB4","document","getElementById","parseFloat","parseInt","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","stopPropagation","ref","toLocaleTimeString","hour","minute","toFixed","onSubmit","autoComplete","htmlFor","type","accept","hidden","onChange","target","placeholder","required","disabled","onKeyDown","key","shiftKey","rows","_MODELS$newProvider$","newProvider","defaultModel","m","min","max","step","defaultValue","textContent","_c","$RefreshReg$"],"sources":["C:/Users/Lorenzo/Desktop/chatbot-local/azure-ai-chatbot/react-frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\r\n// Rimosso l'import di ReactMarkdown e remarkGfm\r\nimport MarkdownRenderer from './MarkdownRenderer'; // Importa il nuovo componente\r\nimport './style.css';\r\n\r\n// Configurazione\r\nconst PROVIDERS = [\r\n    { value: 'azure', label: 'Azure' },\r\n    { value: 'local', label: 'Local' },\r\n    { value: 'openrouter', label: 'OpenRouter' }\r\n];\r\nconst MODELS = {\r\n    azure: [\r\n        { value: 'gpt-4.1', label: 'GPT-4.1 (Azure)' }\r\n    ],\r\n    local: [\r\n        { value: 'qwen/qwen3-4b-thinking-2507', label: 'Qwen3-4B (Local)' }\r\n    ],\r\n    openrouter: [\r\n        { value: 'openai/gpt-3.5-turbo', label: 'GPT-3.5 Turbo' },\r\n        { value: 'anthropic/claude-3-haiku', label: 'Claude 3 Haiku' },\r\n        { value: 'meta-llama/llama-3.1-8b-instruct:free', label: 'Llama 3.1 8B (Free)' },\r\n        { value: 'microsoft/phi-3-mini-128k-instruct:free', label: 'Phi-3 Mini (Free)' },\r\n        { value: 'google/gemma-2-9b-it:free', label: 'Gemma 2 9B (Free)' },\r\n        { value: 'qwen/qwen-2-7b-instruct:free', label: 'Qwen2 7B (Free)' }\r\n    ]\r\n};\r\n\r\nfunction App() {\r\n    // Elementi DOM\r\n    const chatMessagesRef = useRef(null);\r\n    const userInputRef = useRef(null);\r\n    const sendButtonRef = useRef(null);\r\n    // Rimosso modelSelectRef perché non più utilizzato\r\n    \r\n    // Stato per i modelli dinamici\r\n    const [availableModels, setAvailableModels] = useState(MODELS);\r\n    \r\n    // Funzione per caricare le impostazioni dal localStorage\r\n    const loadSettingsFromStorage = () => {\r\n        const savedSettings = localStorage.getItem('krakenGPT-settings');\r\n        if (savedSettings) {\r\n            try {\r\n                const parsed = JSON.parse(savedSettings);\r\n                return {\r\n                    provider: parsed.provider || 'azure',\r\n                    model: parsed.model || MODELS[parsed.provider || 'azure'][0]?.value || MODELS['azure'][0].value,\r\n                    temperature: parsed.temperature || 0.7,\r\n                    maxTokens: parsed.maxTokens || 13107\r\n                };\r\n            } catch (e) {\r\n                console.error('Errore nel caricamento delle impostazioni:', e);\r\n            }\r\n        }\r\n        return {\r\n            provider: 'azure',\r\n            model: MODELS['azure'][0].value,\r\n            temperature: 0.7,\r\n            maxTokens: 13107\r\n        };\r\n    };\r\n    \r\n    // Stato\r\n    const [userInput, setUserInput] = useState('');\r\n    const [messages, setMessages] = useState([]);\r\n    const [isBotTyping, setIsBotTyping] = useState(false);\r\n    const [settings, setSettings] = useState(loadSettingsFromStorage());\r\n    const [showSettings, setShowSettings] = useState(false);\r\n    const [sidebarOpen, setSidebarOpen] = useState(false); // Sidebar chiusa di default\r\n    const [projects, setProjects] = useState([]);\r\n    const [projectChats, setProjectChats] = useState([]); // Chat del progetto corrente\r\n    const [independentChats, setIndependentChats] = useState([]); // Chat indipendenti\r\n    const [currentProject, setCurrentProject] = useState(null);\r\n    const [currentChat, setCurrentChat] = useState(null);\r\n    const [showProjectForm, setShowProjectForm] = useState(false);\r\n    const [editingProject, setEditingProject] = useState(null);\r\n    const [projectForm, setProjectForm] = useState({\r\n        name: '',\r\n        description: '',\r\n        prompt: ''\r\n    });\r\n    const [showChatForm, setShowChatForm] = useState(false);\r\n    const [chatForm, setChatForm] = useState({\r\n        title: '',\r\n        projectId: null\r\n    });\r\n    const [showContextModal, setShowContextModal] = useState(false);\r\n    const [currentContext, setCurrentContext] = useState(\"\");\r\n    \r\n    // Stato streaming\r\n    const [currentBotMessage, setCurrentBotMessage] = useState('');\r\n    \r\n    // Stato per il pulsante stop e timer\r\n    const [isGenerating, setIsGenerating] = useState(false);\r\n    const [abortController, setAbortController] = useState(null);\r\n    const [responseTime, setResponseTime] = useState(null);\r\n    const [startTime, setStartTime] = useState(null);\r\n    \r\n    // Inizializzazione\r\n    \r\n    // Funzione per salvare le impostazioni nel localStorage\r\n    const saveSettingsToStorage = (newSettings) => {\r\n        localStorage.setItem('krakenGPT-settings', JSON.stringify(newSettings));\r\n    };\r\n    \r\n    // Carica modelli dal backend\r\n    const loadModels = useCallback(async () => {\r\n        try {\r\n            const response = await fetch('/models');\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                console.log(\"Modelli ricevuti dal backend:\", data);\r\n                \r\n                // Aggiorna i modelli disponibili\r\n                const newModels = {\r\n                    azure: data.models.azure.map(model => ({ \r\n                        value: model, \r\n                        label: model.replace('gpt-', 'GPT-').replace('-', ' ').toUpperCase() \r\n                    })),\r\n                    openrouter: data.models.openrouter.map(model => ({ \r\n                        value: model, \r\n                        label: model.includes(':free') ? `${model.split('/')[1]} (Free)` : model.split('/')[1] || model\r\n                    })),\r\n                    local: data.models.local.map(model => ({ \r\n                        value: model, \r\n                        label: `${model} (Local)` \r\n                    }))\r\n                };\r\n                \r\n                setAvailableModels(newModels);\r\n                console.log(\"Modelli aggiornati:\", newModels);\r\n            }\r\n        } catch (err) {\r\n            console.error(\"Errore caricamento modelli:\", err);\r\n        }\r\n    }, []);\r\n    \r\n    // Carica progetti dal backend\r\n    const loadProjects = useCallback(async () => {\r\n        try {\r\n            const response = await fetch('/api/projects');\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                setProjects(data);\r\n                if (data.length > 0) {\r\n                    setCurrentProject(data[0]);\r\n                    loadChats(data[0].id);\r\n                }\r\n            }\r\n        } catch (err) {\r\n            console.error(\"Errore caricamento progetti:\", err);\r\n        }\r\n    }, []);\r\n    \r\n    // Carica chat per un progetto\r\n    async function loadChats(projectId) {\r\n        try {\r\n            const response = await fetch(`/api/projects/${projectId}/chats`);\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                setProjectChats(data);\r\n            }\r\n        } catch (err) {\r\n            console.error(\"Errore caricamento chat:\", err);\r\n        }\r\n    }\r\n    \r\n    // Carica messaggi di una chat specifica\r\n    async function loadChatMessages(chatId) {\r\n        try {\r\n            const response = await fetch(`/api/chats/${chatId}`);\r\n            if (response.ok) {\r\n                const chat = await response.json();\r\n                \r\n                // Converti i timestamp da stringhe a oggetti Date\r\n                // E converti i ruoli 'bot' in 'assistant' per compatibilità con Azure AI\r\n                const messagesWithDates = (chat.messages || []).map(msg => ({\r\n                    ...msg,\r\n                    role: msg.role === 'bot' ? 'assistant' : msg.role,\r\n                    timestamp: new Date(msg.timestamp)\r\n                }));\r\n                \r\n                setMessages(messagesWithDates);\r\n            }\r\n        } catch (err) {\r\n            console.error(\"Errore caricamento messaggi:\", err);\r\n        }\r\n    }\r\n    \r\n    // Salva messaggi di una chat\r\n    async function saveChatMessages(chatId, messages) {\r\n        try {\r\n            const response = await fetch(`/api/chats/${chatId}`, {\r\n                method: 'PUT',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ messages: messages })\r\n            });\r\n            \r\n            if (!response.ok) {\r\n                console.error(\"Errore salvataggio messaggi:\", response.statusText);\r\n            }\r\n        } catch (err) {\r\n            console.error(\"Errore salvataggio messaggi:\", err);\r\n        }\r\n    }\r\n    \r\n    // Carica chat indipendenti (per ora vuoto, da implementare nel backend)\r\n    async function loadIndependentChats() {\r\n        try {\r\n            // TODO: Implementare API per chat indipendenti nel backend\r\n            // const response = await fetch('/api/independent-chats');\r\n            // if (response.ok) {\r\n            //     const data = await response.json();\r\n            //     setIndependentChats(data);\r\n            // }\r\n            setIndependentChats([]);\r\n        } catch (err) {\r\n            console.error(\"Errore caricamento chat indipendenti:\", err);\r\n        }\r\n    }\r\n    \r\n    // Inizializzazione\r\n    useEffect(() => {\r\n        loadModels(); // Carica i modelli dinamici per primi\r\n        loadSupportedModels();\r\n        loadProjects();\r\n        loadIndependentChats();\r\n    }, [loadProjects, loadModels]); // Dipendenza corretta con useCallback\r\n    \r\n    // Apri form per nuovo progetto\r\n    function openProjectForm(project = null) {\r\n        if (project) {\r\n            setEditingProject(project);\r\n            setProjectForm({\r\n                name: project.name,\r\n                description: project.description || '',\r\n                prompt: project.prompt || ''\r\n            });\r\n        } else {\r\n            setEditingProject(null);\r\n            setProjectForm({\r\n                name: '',\r\n                description: '',\r\n                prompt: ''\r\n            });\r\n        }\r\n        setShowProjectForm(true);\r\n    }\r\n    \r\n    // Chiudi form progetto\r\n    function closeProjectForm() {\r\n        setShowProjectForm(false);\r\n        setEditingProject(null);\r\n        setProjectForm({\r\n            name: '',\r\n            description: '',\r\n            prompt: ''\r\n        });\r\n    }\r\n    \r\n    // Salva progetto (crea o modifica)\r\n    async function saveProject(e) {\r\n        e.preventDefault();\r\n        if (!projectForm.name.trim()) return;\r\n        \r\n        try {\r\n            const url = editingProject ? `/api/projects/${editingProject.id}` : '/api/projects';\r\n            const method = editingProject ? 'PUT' : 'POST';\r\n            \r\n            const response = await fetch(url, {\r\n                method: method,\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    name: projectForm.name.trim(),\r\n                    description: projectForm.description.trim(),\r\n                    prompt: projectForm.prompt.trim()\r\n                })\r\n            });\r\n            \r\n            if (response.ok) {\r\n                const savedProject = await response.json();\r\n                \r\n                if (editingProject) {\r\n                    // Aggiorna progetto esistente\r\n                    setProjects(prev => prev.map(p => p.id === editingProject.id ? savedProject : p));\r\n                    if (currentProject?.id === editingProject.id) {\r\n                        setCurrentProject(savedProject);\r\n                    }\r\n                } else {\r\n                    // Aggiungi nuovo progetto\r\n                    setProjects(prev => [...prev, savedProject]);\r\n                    setCurrentProject(savedProject);\r\n                    setProjectChats([]);\r\n                }\r\n                \r\n                closeProjectForm();\r\n            }\r\n        } catch (err) {\r\n            console.error(\"Errore salvataggio progetto:\", err);\r\n        }\r\n    }\r\n    \r\n    // Elimina progetto\r\n    async function deleteProject(projectId) {\r\n        if (!window.confirm(\"Sei sicuro di voler eliminare questo progetto?\")) return;\r\n        \r\n        try {\r\n            const response = await fetch(`/api/projects/${projectId}`, {\r\n                method: 'DELETE'\r\n            });\r\n            \r\n            if (response.ok) {\r\n                setProjects(prev => prev.filter(p => p.id !== projectId));\r\n                if (currentProject?.id === projectId) {\r\n                    setCurrentProject(null);\r\n                    setProjectChats([]);\r\n                }\r\n            }\r\n        } catch (err) {\r\n            console.error(\"Errore eliminazione progetto:\", err);\r\n        }\r\n    }\r\n    \r\n    // Elimina chat\r\n    async function deleteChat(chatId, isIndependent = false) {\r\n        if (!window.confirm(\"Sei sicuro di voler eliminare questa chat? Questa azione non può essere annullata.\")) return;\r\n        \r\n        try {\r\n            const response = await fetch(`/api/chats/${chatId}`, {\r\n                method: 'DELETE'\r\n            });\r\n            \r\n            if (response.ok) {\r\n                if (isIndependent) {\r\n                    setIndependentChats(prev => prev.filter(c => c.id !== chatId));\r\n                } else {\r\n                    setProjectChats(prev => prev.filter(c => c.id !== chatId));\r\n                }\r\n                \r\n                // Se la chat eliminata è quella corrente, deseleziona\r\n                if (currentChat?.id === chatId) {\r\n                    setCurrentChat(null);\r\n                    setMessages([]);\r\n                }\r\n            }\r\n        } catch (err) {\r\n            console.error(\"Errore eliminazione chat:\", err);\r\n        }\r\n    }\r\n    \r\n    // Apri form per nuova chat\r\n    function openChatForm() {\r\n        setChatForm({\r\n            title: '',\r\n            projectId: currentProject?.id || null\r\n        });\r\n        setShowChatForm(true);\r\n    }\r\n    \r\n    // Chiudi form chat\r\n    function closeChatForm() {\r\n        setShowChatForm(false);\r\n        setChatForm({\r\n            title: '',\r\n            projectId: null\r\n        });\r\n    }\r\n    \r\n    // Crea nuova chat\r\n    async function createChat(e) {\r\n        e.preventDefault();\r\n        if (!chatForm.title.trim()) return;\r\n        \r\n        try {\r\n            // Per ora, le chat indipendenti non sono supportate dal backend\r\n            // Creiamo sempre una chat di progetto\r\n            const projectId = chatForm.projectId || (projects.length > 0 ? projects[0].id : null);\r\n            \r\n            if (!projectId) {\r\n                alert(\"Crea prima un progetto per poter creare chat!\");\r\n                return;\r\n            }\r\n            \r\n            const response = await fetch('/api/chats', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ \r\n                    project_id: projectId, \r\n                    title: chatForm.title.trim(),\r\n                    messages: []\r\n                })\r\n            });\r\n            \r\n            if (response.ok) {\r\n                const newChat = await response.json();\r\n                \r\n                // Aggiorna la lista delle chat del progetto\r\n                setProjectChats(prev => [...prev, newChat]);\r\n                \r\n                // Se è il progetto corrente, seleziona la chat\r\n                if (currentProject?.id === projectId) {\r\n                    setCurrentChat(newChat);\r\n                    setMessages([]);\r\n                }\r\n                \r\n                closeChatForm();\r\n            }\r\n        } catch (err) {\r\n            console.error(\"Errore creazione chat:\", err);\r\n        }\r\n    }\r\n    \r\n    // Salva il contesto della chat\r\n    async function saveChatContext() {\r\n        if (!currentChat) return;\r\n\r\n        try {\r\n            const response = await fetch(`/api/chats/${currentChat.id}`, {\r\n                method: 'PUT',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ context: currentContext })\r\n            });\r\n\r\n            if (response.ok) {\r\n                const updatedChat = await response.json();\r\n                // Aggiorna la chat corrente nello stato per riflettere il nuovo contesto\r\n                setCurrentChat(updatedChat);\r\n                // Aggiorna anche la lista delle chat\r\n                if (updatedChat.project_id) {\r\n                    setProjectChats(prev => prev.map(c => c.id === updatedChat.id ? updatedChat : c));\r\n                } else {\r\n                    setIndependentChats(prev => prev.map(c => c.id === updatedChat.id ? updatedChat : c));\r\n                }\r\n            }\r\n        } catch (err) {\r\n            console.error(\"Errore salvataggio contesto:\", err);\r\n        } finally {\r\n            setShowContextModal(false);\r\n        }\r\n    }\r\n    \r\n    // Effetto per lo scroll automatico\r\n    useEffect(() => {\r\n        if (chatMessagesRef.current) {\r\n            chatMessagesRef.current.scrollTop = chatMessagesRef.current.scrollHeight;\r\n        }\r\n    }, [messages, isBotTyping]);\r\n    \r\n    // Carica modelli dal backend\r\n    async function loadSupportedModels() {\r\n        try {\r\n            const response = await fetch('/models');\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                console.log(\"Modelli supportati:\", data.models);\r\n            }\r\n        } catch (err) {\r\n            console.error(\"Errore caricamento modelli:\", err);\r\n        }\r\n    }\r\n    \r\n    \r\n    // Invio messaggio\r\n    function sendMessage(e) {\r\n        e.preventDefault();\r\n        const text = userInput.trim();\r\n        if (!text || isGenerating) return;\r\n        \r\n        // Aggiungi messaggio utente\r\n        const userMsg = {\r\n            id: Date.now(),\r\n            role: 'user',\r\n            content: text,\r\n            timestamp: new Date()\r\n        };\r\n        \r\n        const updatedMessages = [...messages, userMsg];\r\n        setMessages(updatedMessages);\r\n        setUserInput('');\r\n        setIsBotTyping(true);\r\n        setCurrentBotMessage('');\r\n        setIsGenerating(true);\r\n        setResponseTime(null);\r\n        setStartTime(Date.now());\r\n        \r\n        // Salva i messaggi nel database se c'è una chat corrente\r\n        if (currentChat) {\r\n            saveChatMessages(currentChat.id, updatedMessages);\r\n        }\r\n        \r\n        // Ottieni risposta del bot\r\n        getBotResponse(updatedMessages);\r\n    }\r\n    \r\n    // Risposta Bot (Streaming)\r\n    async function getBotResponse(currentMessages) {\r\n        const controller = new AbortController();\r\n        setAbortController(controller);\r\n        \r\n        try {\r\n            console.log(\"Inviando richiesta al bot con modello:\", settings.model);\r\n            \r\n            const systemMessage = `You are KrakenGPT, a helpful AI coding partner. Always format your responses using Markdown. For code blocks, use triple backticks (\\`\\`\\`) and specify the language.`;\r\n            const context = currentChat?.context || \"\";\r\n            const systemMessageWithContext = context \r\n                ? `${systemMessage}\\n\\n--- CONTEXT ---\\n${context}\\n--- END CONTEXT ---`\r\n                : systemMessage;\r\n\r\n            // Formatta i messaggi per l'API (solo 'role' e 'content')\r\n            // Azure AI richiede ruoli specifici: 'system', 'assistant', 'user', 'function', 'tool', 'developer'\r\n            const apiMessages = currentMessages.map(({ role, content }) => {\r\n                // Converti 'bot' in 'assistant' per compatibilità con Azure AI\r\n                const azureRole = role === 'bot' ? 'assistant' : role;\r\n                return { role: azureRole, content };\r\n            });\r\n\r\n            const requestBody = {\r\n                provider: settings.provider,\r\n                model: settings.model,\r\n                messages: [\r\n                    { role: \"system\", content: systemMessageWithContext },\r\n                    ...apiMessages\r\n                ],\r\n                temperature: settings.temperature,\r\n                max_tokens: settings.maxTokens,\r\n                stream: true\r\n            };\r\n            \r\n            console.log(\"Corpo della richiesta:\", requestBody);\r\n            \r\n            const response = await fetch('/v1/chat/completions', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(requestBody),\r\n                signal: controller.signal\r\n            });\r\n            \r\n            console.log(\"Risposta ricevuta:\", response.status, response.statusText);\r\n            console.log(\"Headers della risposta:\", [...response.headers.entries()]);\r\n            \r\n            if (!response.ok) {\r\n                const errorText = await response.text();\r\n                console.error(\"Errore HTTP:\", response.status, errorText);\r\n                throw new Error(`HTTP ${response.status}: ${errorText}`);\r\n            }\r\n            \r\n            // Verifica se la risposta è effettivamente uno stream\r\n            if (!response.body) {\r\n                console.error(\"La risposta non contiene un body streamabile\");\r\n                throw new Error(\"La risposta non contiene un body streamabile\");\r\n            }\r\n            \r\n            const reader = response.body.getReader();\r\n            const decoder = new TextDecoder();\r\n            let buffer = \"\";\r\n            let botMessageContent = \"\";\r\n            \r\n            let chunkCount = 0;\r\n            let hasReceivedContent = false;\r\n            \r\n            while (true) {\r\n                const { done, value } = await reader.read();\r\n                chunkCount++;\r\n                console.log(`Chunk ${chunkCount}: done=${done}, value length=${value?.length || 0}`);\r\n                \r\n                if (done) {\r\n                    console.log(\"Stream completato\");\r\n                    break;\r\n                }\r\n                \r\n                // Segnala che abbiamo ricevuto almeno un chunk\r\n                hasReceivedContent = true;\r\n                \r\n                buffer += decoder.decode(value, { stream: true });\r\n                const lines = buffer.split(\"\\n\");\r\n                buffer = lines.pop();\r\n                \r\n                for (const line of lines) {\r\n                    console.log(\"Linea ricevuta:\", line);\r\n                    if (line.startsWith(\"data: \")) {\r\n                        const jsonStr = line.slice(6);\r\n                        if (jsonStr === \"[DONE]\") {\r\n                            console.log(\"Stream terminato con [DONE]\");\r\n                            break;\r\n                        }\r\n                        \r\n                        try {\r\n                            const data = JSON.parse(jsonStr);\r\n                            console.log(\"Dati ricevuti:\", data);\r\n                            const content = data.choices?.[0]?.delta?.content;\r\n                            if (content) {\r\n                                botMessageContent += content;\r\n                                setCurrentBotMessage(botMessageContent);\r\n                            }\r\n                        } catch (e) {\r\n                            console.warn(\"Parse error:\", e, \"Line:\", line);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            \r\n            console.log(\"Contenuto finale del bot:\", botMessageContent);\r\n            \r\n            // Determina il contenuto del messaggio del bot\r\n            let finalContent;\r\n            if (!hasReceivedContent) {\r\n                finalContent = \"❌ Nessuna risposta ricevuta dal modello. Il server ha restituito una risposta vuota.\";\r\n            } else if (!botMessageContent) {\r\n                finalContent = \"❌ Nessun contenuto ricevuto dal modello. La risposta potrebbe essere stata interrotta.\";\r\n            } else {\r\n                finalContent = botMessageContent;\r\n            }\r\n            \r\n            // Aggiungi messaggio completo del bot\r\n            const botMsg = {\r\n                id: Date.now(),\r\n                role: 'assistant',  // Usiamo 'assistant' invece di 'bot' per compatibilità con Azure AI\r\n                content: finalContent,\r\n                timestamp: new Date()\r\n            };\r\n            \r\n            setMessages(prev => {\r\n                const updatedMessages = [...prev, botMsg];\r\n                \r\n                // Salva i messaggi nel database se c'è una chat corrente\r\n                if (currentChat) {\r\n                    saveChatMessages(currentChat.id, updatedMessages);\r\n                }\r\n                \r\n                return updatedMessages;\r\n            });\r\n        } catch (error) {\r\n            console.error(\"Errore completo:\", error);\r\n            \r\n            // Se l'errore è dovuto a AbortController, non mostrare messaggio di errore\r\n            if (error.name === 'AbortError') {\r\n                const abortMsg = {\r\n                    id: Date.now(),\r\n                    role: 'bot',\r\n                    content: '⏹️ Risposta interrotta dall\\'utente.',\r\n                    timestamp: new Date()\r\n                };\r\n                setMessages(prev => {\r\n                    const updatedMessages = [...prev, abortMsg];\r\n                    \r\n                    // Salva i messaggi nel database se c'è una chat corrente\r\n                    if (currentChat) {\r\n                        saveChatMessages(currentChat.id, updatedMessages);\r\n                    }\r\n                    \r\n                    return updatedMessages;\r\n                });\r\n            } else {\r\n                const errorMsg = {\r\n                    id: Date.now(),\r\n                    role: 'bot',\r\n                    content: `❌ Errore: ${error.message}`,\r\n                    timestamp: new Date()\r\n                };\r\n                setMessages(prev => {\r\n                    const updatedMessages = [...prev, errorMsg];\r\n                    \r\n                    // Salva i messaggi nel database se c'è una chat corrente\r\n                    if (currentChat) {\r\n                        saveChatMessages(currentChat.id, updatedMessages);\r\n                    }\r\n                    \r\n                    return updatedMessages;\r\n                });\r\n            }\r\n        } finally {\r\n            // Calcola il tempo di risposta\r\n            if (startTime) {\r\n                const endTime = Date.now();\r\n                const responseTimeMs = endTime - startTime;\r\n                setResponseTime(responseTimeMs);\r\n            }\r\n            \r\n            setIsBotTyping(false);\r\n            setCurrentBotMessage('');\r\n            setIsGenerating(false);\r\n            setAbortController(null);\r\n        }\r\n    }\r\n    \r\n    // Funzione per fermare la generazione\r\n    function stopGeneration() {\r\n        if (abortController) {\r\n            abortController.abort();\r\n        }\r\n    }\r\n    \r\n    // Copia codice negli appunti\r\n    // Salva impostazioni\r\n    function saveSettings() {\r\n        const provider = document.getElementById('provider-select')?.value || settings.provider;\r\n        const model = document.getElementById('model-select')?.value || settings.model;\r\n        setSettings({\r\n            provider,\r\n            model,\r\n            temperature: parseFloat(document.getElementById('temperature')?.value || settings.temperature),\r\n            maxTokens: parseInt(document.getElementById('max-tokens')?.value || settings.maxTokens)\r\n        });\r\n        setShowSettings(false);\r\n    }\r\n    \r\n    return (\r\n        <div className=\"app-container\">\r\n            {/* Sidebar */}\r\n            <aside className={`sidebar ${sidebarOpen ? 'open' : ''}`}>\r\n                {/* Header Sidebar con pulsante chiudi */}\r\n                <div className=\"sidebar-header\">\r\n                    <h2>KrakenGPT</h2>\r\n                    <button \r\n                        className=\"icon-btn close-sidebar-btn\" \r\n                        onClick={() => setSidebarOpen(false)}\r\n                        title=\"Chiudi sidebar\"\r\n                    >\r\n                        ☰\r\n                    </button>\r\n                </div>\r\n                \r\n                {/* Sezione Progetti */}\r\n                <section className=\"sidebar-section\">\r\n                    <div className=\"section-header\">\r\n                        <h3>📂 Progetti</h3>\r\n                        <button \r\n                            className=\"icon-btn new-project-btn\" \r\n                            onClick={() => openProjectForm()}\r\n                            title=\"Nuovo Progetto\" \r\n                            aria-label=\"Crea nuovo progetto\"\r\n                        >\r\n                            +\r\n                        </button>\r\n                    </div>\r\n                    <ul className=\"projects-list\">\r\n                        {projects.map(project => (\r\n                            <li \r\n                                key={project.id} \r\n                                className={`sidebar-item project-item ${currentProject?.id === project.id ? 'active' : ''}`}\r\n                            >\r\n                                <div \r\n                                    className=\"project-name\"\r\n                                    onClick={() => {\r\n                                        setCurrentProject(project);\r\n                                        loadChats(project.id);\r\n                                    }}\r\n                                >\r\n                                    {project.name}\r\n                                </div>\r\n                                <div className=\"project-actions\">\r\n                                    <button \r\n                                        className=\"icon-btn edit-project-btn\" \r\n                                        onClick={(e) => {\r\n                                            e.stopPropagation();\r\n                                            openProjectForm(project);\r\n                                        }}\r\n                                        title=\"Modifica progetto\"\r\n                                        aria-label=\"Modifica progetto\"\r\n                                    >\r\n                                        ✎\r\n                                    </button>\r\n                                    <button \r\n                                        className=\"icon-btn delete-project-btn\" \r\n                                        onClick={(e) => {\r\n                                            e.stopPropagation();\r\n                                            deleteProject(project.id);\r\n                                        }}\r\n                                        title=\"Elimina progetto\"\r\n                                        aria-label=\"Elimina progetto\"\r\n                                    >\r\n                                        ⊗\r\n                                    </button>\r\n                                </div>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </section>\r\n                \r\n                {/* Sezione Chat Recenti */}\r\n                <section className=\"sidebar-section\">\r\n                    <div className=\"section-header\">\r\n                        <h3>💬 Chat recenti</h3>\r\n                        <button \r\n                            className=\"icon-btn new-chat-btn\" \r\n                            onClick={openChatForm}\r\n                            title=\"Nuova Chat\" \r\n                            aria-label=\"Avvia nuova chat\"\r\n                        >\r\n                            +\r\n                        </button>\r\n                    </div>\r\n                    <ul className=\"conversation-history\">\r\n                        {projectChats.map(chat => (\r\n                            <li \r\n                                key={chat.id} \r\n                                className={`sidebar-item chat-item ${currentChat?.id === chat.id ? 'active' : ''}`}\r\n                            >\r\n                                <div \r\n                                    className=\"chat-content\"\r\n                                    onClick={() => {\r\n                                        setCurrentChat(chat);\r\n                                        loadChatMessages(chat.id);\r\n                                    }}\r\n                                >\r\n                                    <div className=\"chat-info\">\r\n                                        <span className=\"chat-title\">{chat.title}</span>\r\n                                        <span className=\"chat-project\">{currentProject?.name}</span>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"chat-actions\">\r\n                                    <button \r\n                                        className=\"icon-btn delete-chat-btn\" \r\n                                        onClick={(e) => {\r\n                                            e.stopPropagation();\r\n                                            deleteChat(chat.id, false);\r\n                                        }}\r\n                                        title=\"Elimina chat\"\r\n                                        aria-label=\"Elimina chat\"\r\n                                    >\r\n                                        ⊗\r\n                                    </button>\r\n                                </div>\r\n                            </li>\r\n                        ))}\r\n                        {independentChats.map(chat => (\r\n                            <li \r\n                                key={`ind-${chat.id}`} \r\n                                className={`sidebar-item chat-item ${currentChat?.id === chat.id ? 'active' : ''}`}\r\n                            >\r\n                                <div \r\n                                    className=\"chat-content\"\r\n                                    onClick={() => {\r\n                                        setCurrentChat(chat);\r\n                                        loadChatMessages(chat.id);\r\n                                    }}\r\n                                >\r\n                                    <div className=\"chat-info\">\r\n                                        <span className=\"chat-title\">{chat.title}</span>\r\n                                        <span className=\"chat-project independent\">Indipendente</span>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"chat-actions\">\r\n                                    <button \r\n                                        className=\"icon-btn delete-chat-btn\" \r\n                                        onClick={(e) => {\r\n                                            e.stopPropagation();\r\n                                            deleteChat(chat.id, true);\r\n                                        }}\r\n                                        title=\"Elimina chat\"\r\n                                        aria-label=\"Elimina chat\"\r\n                                    >\r\n                                        ⊗\r\n                                    </button>\r\n                                </div>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </section>\r\n                \r\n                {/* Footer Sidebar */}\r\n                <footer className=\"sidebar-footer\">\r\n                    <div className=\"user-info\">\r\n                        <div className=\"user-avatar\" aria-hidden=\"true\">👤</div>\r\n                        <span className=\"user-name\">Utente</span>\r\n                    </div>\r\n                    <button className=\"settings-btn\" onClick={() => setShowSettings(true)}>⚙ Impostazioni</button>\r\n                </footer>\r\n            </aside>\r\n            \r\n            {/* Main Container */}\r\n            <main className=\"main-container\">\r\n                {/* Pulsante per aprire sidebar quando è chiusa */}\r\n                {!sidebarOpen && (\r\n                    <button \r\n                        className=\"open-sidebar-btn\"\r\n                        onClick={() => setSidebarOpen(true)}\r\n                        title=\"Apri sidebar\"\r\n                    >\r\n                        ☰\r\n                    </button>\r\n                )}\r\n                \r\n                {/* Header Chat */}\r\n                <header className=\"chat-header\">\r\n                    <div className=\"chat-header-main\">\r\n                        <h1 id=\"chat-title\">\r\n                            KrakenGPT\r\n                        </h1>\r\n                        {currentChat && (\r\n                            <button \r\n                                className=\"edit-context-btn\"\r\n                                onClick={() => {\r\n                                    setCurrentContext(currentChat.context || \"\");\r\n                                    setShowContextModal(true);\r\n                                }}\r\n                                title=\"Aggiungi Contesto RAG\"\r\n                            >\r\n                                📚\r\n                            </button>\r\n                        )}\r\n                    </div>\r\n                </header>\r\n                \r\n                {/* Messaggi Chat */}\r\n                <section className=\"chat-messages\" ref={chatMessagesRef} aria-live=\"polite\" aria-atomic=\"false\">\r\n                    {currentChat && (\r\n                        <>\r\n                            {messages.map(msg => (\r\n                                <div key={msg.id} className={`message ${msg.role}`}>\r\n                                    <div className=\"message-content\">\r\n                                        <MarkdownRenderer content={typeof msg.content === 'string' ? msg.content : JSON.stringify(msg.content, null, 2)} />\r\n                                    </div>\r\n                                    <div className=\"message-time\">\r\n                                        {new Date(msg.timestamp).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                            \r\n                            {/* Messaggio in streaming */}\r\n                            {isBotTyping && currentBotMessage && (\r\n                                <div className=\"message bot streaming\">\r\n                                    <div className=\"message-content\">\r\n                                        <MarkdownRenderer content={typeof currentBotMessage === 'string' ? currentBotMessage : JSON.stringify(currentBotMessage, null, 2)} />\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                            \r\n                            {/* Indicatore di digitazione */}\r\n                            {isBotTyping && !currentBotMessage && (\r\n                                <div className=\"enhanced-typing-indicator\">\r\n                                    <div className=\"typing-text\">\r\n                                        <span></span>\r\n                                        <span></span>\r\n                                        <span></span>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </>\r\n                    )}\r\n                </section>\r\n                \r\n                {/* Dialogo \"Nessuna chat selezionata\" - Floating */}\r\n                {!currentChat && (\r\n                    <div className=\"no-chat-selected\">\r\n                        <div className=\"welcome-box\">\r\n                            <h2>Benvenuto in KrakenGPT</h2>\r\n                            <p>Seleziona una chat esistente o creane una nuova per iniziare.</p>\r\n                            <div className=\"recent-chats-box\">\r\n                                <h3>Chat Recenti</h3>\r\n                                {projectChats.length > 0 ? (\r\n                                    <ul className=\"recent-chats-list\">\r\n                                        {projectChats.slice(0, 5).map(chat => (\r\n                                            <li \r\n                                                key={chat.id} \r\n                                                className=\"recent-chat-item\"\r\n                                                onClick={() => {\r\n                                                    setCurrentChat(chat);\r\n                                                    loadChatMessages(chat.id);\r\n                                                }}\r\n                                            >\r\n                                                <span className=\"recent-chat-title\">{chat.title}</span>\r\n                                                <span className=\"recent-chat-project\">{currentProject?.name}</span>\r\n                                            </li>\r\n                                        ))}\r\n                                    </ul>\r\n                                ) : (\r\n                                    <p className=\"no-recent-chats\">Nessuna chat recente disponibile.</p>\r\n                                )}\r\n                            </div>\r\n                            <button \r\n                                className=\"new-chat-button\"\r\n                                onClick={openChatForm}\r\n                            >\r\n                                + Nuova Chat\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n                \r\n                {/* Input Chat */}\r\n                {currentChat && (\r\n                    <footer className=\"chat-input-container\">\r\n                        {/* Misuratore tempo di risposta */}\r\n                        {responseTime && (\r\n                            <div className=\"response-time\">\r\n                                ⏱️ Tempo di risposta: {(responseTime / 1000).toFixed(2)}s\r\n                            </div>\r\n                        )}\r\n                        \r\n                        <form className=\"input-row\" onSubmit={sendMessage} autoComplete=\"off\">\r\n                            <label htmlFor=\"file-input\" className=\"file-upload-btn\">\r\n                                📎\r\n                                <input type=\"file\" id=\"file-input\" accept=\"image/*,.pdf,.txt\" hidden />\r\n                            </label>\r\n                            <textarea\r\n                                value={userInput}\r\n                                onChange={(e) => setUserInput(e.target.value)}\r\n                                ref={userInputRef}\r\n                                placeholder=\"Chiedi qualcosa a KrakenGPT...\"\r\n                                aria-label=\"Inserisci messaggio\"\r\n                                required\r\n                                disabled={isGenerating}\r\n                                onKeyDown={(e) => {\r\n                                    if (e.key === 'Enter' && !e.shiftKey) {\r\n                                        e.preventDefault();\r\n                                        if (!isGenerating) {\r\n                                            sendMessage(e);\r\n                                        }\r\n                                    }\r\n                                }}\r\n                            />\r\n                            {isGenerating ? (\r\n                                <button \r\n                                    type=\"button\" \r\n                                    onClick={stopGeneration}\r\n                                    className=\"stop-btn\"\r\n                                    aria-label=\"Interrompi generazione\"\r\n                                >\r\n                                    ⏹️\r\n                                </button>\r\n                            ) : (\r\n                                <button \r\n                                    type=\"submit\" \r\n                                    ref={sendButtonRef} \r\n                                    aria-label=\"Invia messaggio\"\r\n                                    disabled={isBotTyping}\r\n                                >\r\n                                    ➤\r\n                                </button>\r\n                            )}\r\n                        </form>\r\n                        <div className=\"input-warning\">\r\n                            <span>KrakenGPT può commettere errori. Verifica le informazioni importanti.</span>\r\n                        </div>\r\n                    </footer>\r\n                )}\r\n            </main>\r\n            \r\n            {/* Modale Form Progetto */}\r\n            {showProjectForm && (\r\n                <div className=\"modal\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"project-form-title\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h2 id=\"project-form-title\">\r\n                                {editingProject ? 'Modifica Progetto' : 'Nuovo Progetto'}\r\n                            </h2>\r\n                            <button \r\n                                className=\"close-btn\" \r\n                                onClick={closeProjectForm}\r\n                                aria-label=\"Chiudi form progetto\"\r\n                            >\r\n                                &times;\r\n                            </button>\r\n                        </div>\r\n                        <form className=\"modal-body\" onSubmit={saveProject}>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"project-name\">Nome Progetto *</label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id=\"project-name\" \r\n                                    value={projectForm.name}\r\n                                    onChange={(e) => setProjectForm(prev => ({ ...prev, name: e.target.value }))}\r\n                                    placeholder=\"Inserisci il nome del progetto\"\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            \r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"project-description\">Descrizione</label>\r\n                                <textarea \r\n                                    id=\"project-description\" \r\n                                    value={projectForm.description}\r\n                                    onChange={(e) => setProjectForm(prev => ({ ...prev, description: e.target.value }))}\r\n                                    placeholder=\"Descrizione del progetto (opzionale)\"\r\n                                    rows=\"3\"\r\n                                />\r\n                            </div>\r\n                            \r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"project-prompt\">Project Prompt</label>\r\n                                <textarea \r\n                                    id=\"project-prompt\" \r\n                                    value={projectForm.prompt}\r\n                                    onChange={(e) => setProjectForm(prev => ({ ...prev, prompt: e.target.value }))}\r\n                                    placeholder=\"Prompt di sistema per questo progetto (es: 'Sei un assistente specializzato in React e JavaScript...')\"\r\n                                    rows=\"4\"\r\n                                />\r\n                                <small className=\"form-help\">\r\n                                    Questo prompt verrà utilizzato come contesto di sistema per tutte le chat di questo progetto.\r\n                                </small>\r\n                            </div>\r\n                        </form>\r\n                        <div className=\"modal-footer\">\r\n                            <button \r\n                                type=\"button\" \r\n                                onClick={saveProject}\r\n                                className=\"btn-primary\"\r\n                                disabled={!projectForm.name.trim()}\r\n                            >\r\n                                {editingProject ? 'Salva Modifiche' : 'Crea Progetto'}\r\n                            </button>\r\n                            <button \r\n                                type=\"button\" \r\n                                onClick={closeProjectForm}\r\n                                className=\"btn-secondary\"\r\n                            >\r\n                                Annulla\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n            \r\n            {/* Modale Form Chat */}\r\n            {showChatForm && (\r\n                <div className=\"modal\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"chat-form-title\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h2 id=\"chat-form-title\">Nuova Chat</h2>\r\n                            <button \r\n                                className=\"close-btn\" \r\n                                onClick={closeChatForm}\r\n                                aria-label=\"Chiudi form chat\"\r\n                            >\r\n                                &times;\r\n                            </button>\r\n                        </div>\r\n                        <form className=\"modal-body\" onSubmit={createChat}>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"chat-title\">Titolo Chat *</label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id=\"chat-title\" \r\n                                    value={chatForm.title}\r\n                                    onChange={(e) => setChatForm(prev => ({ ...prev, title: e.target.value }))}\r\n                                    placeholder=\"Inserisci il titolo della chat\"\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            \r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"chat-project\">Progetto</label>\r\n                                <select \r\n                                    id=\"chat-project\" \r\n                                    value={chatForm.projectId || ''}\r\n                                    onChange={(e) => setChatForm(prev => ({ ...prev, projectId: e.target.value || null }))}\r\n                                >\r\n                                    <option value=\"\">Nessun progetto (Chat indipendente)</option>\r\n                                    {projects.map(project => (\r\n                                        <option key={project.id} value={project.id}>\r\n                                            {project.name}\r\n                                        </option>\r\n                                    ))}\r\n                                </select>\r\n                                <small className=\"form-help\">\r\n                                    Scegli un progetto per associare la chat, oppure lascia vuoto per una chat indipendente.\r\n                                </small>\r\n                            </div>\r\n                        </form>\r\n                        <div className=\"modal-footer\">\r\n                            <button \r\n                                type=\"submit\" \r\n                                onClick={createChat}\r\n                                className=\"btn-primary\"\r\n                                disabled={!chatForm.title.trim()}\r\n                            >\r\n                                Crea Chat\r\n                            </button>\r\n                            <button \r\n                                type=\"button\" \r\n                                onClick={closeChatForm}\r\n                                className=\"btn-secondary\"\r\n                            >\r\n                                Annulla\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n            \r\n            {/* Modale Impostazioni */}\r\n            {showSettings && (\r\n                <div className=\"modal\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"settings-title\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h2 id=\"settings-title\">Impostazioni</h2>\r\n                            <button \r\n                                className=\"close-btn\" \r\n                                onClick={() => setShowSettings(false)}\r\n                                aria-label=\"Chiudi impostazioni\"\r\n                            >\r\n                                &times;\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <div className=\"setting-group\">\r\n                                <label htmlFor=\"provider-select\">Provider</label>\r\n                                <select\r\n                                    id=\"provider-select\"\r\n                                    value={settings.provider}\r\n                                    onChange={e => {\r\n                                        const newProvider = e.target.value;\r\n                                        const defaultModel = MODELS[newProvider][0]?.value || '';\r\n                                        setSettings(prev => ({ ...prev, provider: newProvider, model: defaultModel }));\r\n                                    }}\r\n                                >\r\n                                    {PROVIDERS.map(p => (\r\n                                        <option key={p.value} value={p.value}>{p.label}</option>\r\n                                    ))}\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"setting-group\">\r\n                                <label htmlFor=\"model-select\">Modello</label>\r\n                                <select\r\n                                    id=\"model-select\"\r\n                                    value={settings.model}\r\n                                    onChange={e => setSettings(prev => ({ ...prev, model: e.target.value }))}\r\n                                >\r\n                                    {MODELS[settings.provider].map(m => (\r\n                                        <option key={m.value} value={m.value}>{m.label}</option>\r\n                                    ))}\r\n                                </select>\r\n                            </div>\r\n                            \r\n                            <div className=\"setting-group\">\r\n                                <label htmlFor=\"temperature\">\r\n                                    Temperatura: <span id=\"temperature-value\">{settings.temperature}</span>\r\n                                </label>\r\n                                <input \r\n                                    type=\"range\" \r\n                                    id=\"temperature\" \r\n                                    min=\"0\" \r\n                                    max=\"1\" \r\n                                    step=\"0.1\" \r\n                                    defaultValue={settings.temperature}\r\n                                    onChange={(e) => {\r\n                                        document.getElementById('temperature-value').textContent = e.target.value;\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            \r\n                            <div className=\"setting-group\">\r\n                                <label htmlFor=\"max-tokens\">\r\n                                    Token massimi: <span id=\"max-tokens-value\">{settings.maxTokens}</span>\r\n                                </label>\r\n                                <input \r\n                                    type=\"range\" \r\n                                    id=\"max-tokens\" \r\n                                    min=\"100\" \r\n                                    max=\"32768\" \r\n                                    step=\"100\" \r\n                                    defaultValue={settings.maxTokens}\r\n                                    onChange={(e) => {\r\n                                        document.getElementById('max-tokens-value').textContent = e.target.value;\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-footer\">\r\n                            <button id=\"save-settings\" onClick={saveSettings}>Salva</button>\r\n                            <button id=\"cancel-settings\" onClick={() => setShowSettings(false)}>Annulla</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n            \r\n            {/* Modale Contesto RAG */}\r\n            {showContextModal && (\r\n                <div className=\"modal\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"context-modal-title\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h2 id=\"context-modal-title\">📚 Aggiungi Contesto RAG</h2>\r\n                            <button \r\n                                className=\"close-btn\" \r\n                                onClick={() => setShowContextModal(false)}\r\n                                aria-label=\"Chiudi modale contesto\"\r\n                            >\r\n                                &times;\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"chat-context\">Contesto per la Chat</label>\r\n                                <textarea \r\n                                    id=\"chat-context\" \r\n                                    value={currentContext}\r\n                                    onChange={(e) => setCurrentContext(e.target.value)}\r\n                                    placeholder=\"Incolla qui il testo da usare come contesto per l'AI...\"\r\n                                    rows=\"8\"\r\n                                />\r\n                                <small className=\"form-help\">\r\n                                    Questo testo verrà aggiunto al prompt di sistema per fornire contesto all'AI (RAG).\r\n                                </small>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-footer\">\r\n                            <button \r\n                                type=\"button\" \r\n                                onClick={saveChatContext}\r\n                                className=\"btn-primary\"\r\n                            >\r\n                                Salva Contesto\r\n                            </button>\r\n                            <button \r\n                                type=\"button\" \r\n                                onClick={() => setShowContextModal(false)}\r\n                                className=\"btn-secondary\"\r\n                            >\r\n                                Annulla\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}