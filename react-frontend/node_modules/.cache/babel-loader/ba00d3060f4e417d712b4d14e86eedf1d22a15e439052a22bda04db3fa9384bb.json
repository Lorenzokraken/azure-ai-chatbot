{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lorenzo\\\\Desktop\\\\chatbot\\\\react-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './style.css';\n\n// Configurazione\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_CONFIG = {\n  endpoint: \"/api\",\n  // Utilizza il proxy di React\n  model_name: \"mistralai/mistral-7b-instruct:free\",\n  temperature: 0.7,\n  max_tokens: 13107\n};\nfunction App() {\n  _s();\n  // Elementi DOM\n  const chatMessagesRef = useRef(null);\n  const userInputRef = useRef(null);\n  const sendButtonRef = useRef(null);\n  const modelSelectRef = useRef(null);\n\n  // Stato\n  const [userInput, setUserInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [isBotTyping, setIsBotTyping] = useState(false);\n  const [settings, setSettings] = useState({\n    model: API_CONFIG.model_name,\n    temperature: API_CONFIG.temperature,\n    maxTokens: API_CONFIG.max_tokens\n  });\n  const [showSettings, setShowSettings] = useState(false);\n  const [sidebarOpen, setSidebarOpen] = useState(true);\n  const [projects, setProjects] = useState([]);\n  const [chats, setChats] = useState([]);\n  const [currentProject, setCurrentProject] = useState(null);\n  const [currentChat, setCurrentChat] = useState(null);\n\n  // Stato streaming\n  const [currentBotMessage, setCurrentBotMessage] = useState('');\n\n  // Inizializzazione\n  useEffect(() => {\n    loadSupportedModels();\n    loadProjects();\n  }, []);\n\n  // Carica progetti dal backend\n  async function loadProjects() {\n    try {\n      const response = await fetch(`${API_CONFIG.endpoint}/projects`);\n      if (response.ok) {\n        const data = await response.json();\n        setProjects(data);\n        if (data.length > 0) {\n          setCurrentProject(data[0]);\n          loadChats(data[0].id);\n        }\n      }\n    } catch (err) {\n      console.error(\"Errore caricamento progetti:\", err);\n    }\n  }\n\n  // Carica chat per un progetto\n  async function loadChats(projectId) {\n    try {\n      const response = await fetch(`${API_CONFIG.endpoint}/projects/${projectId}/chats`);\n      if (response.ok) {\n        const data = await response.json();\n        setChats(data);\n      }\n    } catch (err) {\n      console.error(\"Errore caricamento chat:\", err);\n    }\n  }\n\n  // Crea nuovo progetto\n  async function createProject() {\n    const projectName = prompt(\"Nome del nuovo progetto:\");\n    if (!projectName) return;\n    try {\n      const response = await fetch(`${API_CONFIG.endpoint}/projects`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: projectName,\n          description: \"\"\n        })\n      });\n      if (response.ok) {\n        const newProject = await response.json();\n        setProjects(prev => [...prev, newProject]);\n        setCurrentProject(newProject);\n        setChats([]);\n      }\n    } catch (err) {\n      console.error(\"Errore creazione progetto:\", err);\n    }\n  }\n\n  // Crea nuova chat\n  async function createChat() {\n    if (!currentProject) {\n      alert(\"Seleziona prima un progetto!\");\n      return;\n    }\n    const chatTitle = prompt(\"Titolo della nuova chat:\") || \"Nuova Chat\";\n    try {\n      const response = await fetch(`${API_CONFIG.endpoint}/chats`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          project_id: currentProject.id,\n          title: chatTitle,\n          messages: []\n        })\n      });\n      if (response.ok) {\n        const newChat = await response.json();\n        setChats(prev => [...prev, newChat]);\n        setCurrentChat(newChat);\n        setMessages([]);\n      }\n    } catch (err) {\n      console.error(\"Errore creazione chat:\", err);\n    }\n  }\n\n  // Effetto per lo scroll automatico\n  useEffect(() => {\n    if (chatMessagesRef.current) {\n      chatMessagesRef.current.scrollTop = chatMessagesRef.current.scrollHeight;\n    }\n  }, [messages, isBotTyping]);\n\n  // Carica modelli dal backend\n  async function loadSupportedModels() {\n    try {\n      const response = await fetch(`${API_CONFIG.endpoint}/models`);\n      if (response.ok) {\n        const data = await response.json();\n        // Per ora non facciamo nulla, ma potremmo popolare un select\n        console.log(\"Modelli supportati:\", data.models);\n      }\n    } catch (err) {\n      console.error(\"Errore caricamento modelli:\", err);\n    }\n  }\n\n  // Invio messaggio\n  function sendMessage(e) {\n    e.preventDefault();\n    const text = userInput.trim();\n    if (!text) return;\n\n    // Aggiungi messaggio utente\n    const userMsg = {\n      id: Date.now(),\n      role: 'user',\n      content: text,\n      timestamp: new Date()\n    };\n    setMessages(prev => [...prev, userMsg]);\n    setUserInput('');\n    setIsBotTyping(true);\n    setCurrentBotMessage('');\n\n    // Ottieni risposta del bot\n    getBotResponse(text);\n  }\n\n  // Risposta Bot (Streaming)\n  async function getBotResponse(userMessage) {\n    try {\n      const response = await fetch(`${API_CONFIG.endpoint}/v1/chat/completions`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          model: settings.model,\n          messages: [{\n            role: \"system\",\n            content: \"You are Cursor Assistant, a helpful AI coding partner.\"\n          }, {\n            role: \"user\",\n            content: userMessage\n          }],\n          temperature: settings.temperature,\n          max_tokens: settings.maxTokens,\n          stream: true\n        })\n      });\n      if (!response.ok) throw new Error(`HTTP ${response.status}`);\n      const reader = response.body.getReader();\n      const decoder = new TextDecoder();\n      let buffer = \"\";\n      let botMessageContent = \"\";\n      while (true) {\n        const {\n          done,\n          value\n        } = await reader.read();\n        if (done) break;\n        buffer += decoder.decode(value, {\n          stream: true\n        });\n        const lines = buffer.split(\"\\n\");\n        buffer = lines.pop();\n        for (const line of lines) {\n          if (line.startsWith(\"data: \")) {\n            const jsonStr = line.slice(6);\n            if (jsonStr === \"[DONE]\") break;\n            try {\n              var _data$choices, _data$choices$, _data$choices$$delta;\n              const data = JSON.parse(jsonStr);\n              const content = (_data$choices = data.choices) === null || _data$choices === void 0 ? void 0 : (_data$choices$ = _data$choices[0]) === null || _data$choices$ === void 0 ? void 0 : (_data$choices$$delta = _data$choices$.delta) === null || _data$choices$$delta === void 0 ? void 0 : _data$choices$$delta.content;\n              if (content) {\n                botMessageContent += content;\n                setCurrentBotMessage(botMessageContent);\n              }\n            } catch (e) {\n              console.warn(\"Parse error:\", e);\n            }\n          }\n        }\n      }\n\n      // Aggiungi messaggio completo del bot\n      const botMsg = {\n        id: Date.now(),\n        role: 'bot',\n        content: botMessageContent,\n        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, botMsg]);\n    } catch (error) {\n      console.error(\"Errore:\", error);\n      const errorMsg = {\n        id: Date.now(),\n        role: 'bot',\n        content: \"❌ Errore. Riprova più tardi.\",\n        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, errorMsg]);\n    } finally {\n      setIsBotTyping(false);\n      setCurrentBotMessage('');\n    }\n  }\n\n  // Formatta il contenuto markdown\n  function formatMarkdown(text) {\n    if (!text) return '';\n    return text.replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>').replace(/\\*(.*?)\\*/g, '<em>$1</em>').replace(/`(.*?)`/g, '<code>$1</code>').replace(/^### (.*$)/gm, '<h3>$1</h3>').replace(/^## (.*$)/gm, '<h2>$1</h2>').replace(/^# (.*$)/gm, '<h1>$1</h1>').replace(/^\\s*\\* (.*$)/gm, '<li>$1</li>').replace(/(<li>.*<\\/li>)/gs, '<ul>$1</ul>').replace(/\\n/g, '<br>');\n  }\n\n  // Determina se il contenuto è codice\n  function isCodeContent(content) {\n    const patterns = [/^\\s*[\\{\\[\\(\\w]+\\s*[=\\{\\[\\(]/, /function\\s+\\w+\\s*\\(/, /(const|let)\\s+\\w+\\s*=/, /class\\s+\\w+/, /import\\s+.*\\s+from/, /export\\s+(default\\s+)?(function|class|const|let)/, /\\w+\\s*\\([^)]*\\)\\s*\\{/, /```[\\s\\S]*```/];\n    return patterns.some(p => new RegExp(p).test(content));\n  }\n\n  // Copia codice negli appunti\n  function copyCodeToClipboard(code) {\n    navigator.clipboard.writeText(code);\n  }\n\n  // Salva impostazioni\n  function saveSettings() {\n    var _modelSelectRef$curre, _document$getElementB, _document$getElementB2;\n    setSettings({\n      model: ((_modelSelectRef$curre = modelSelectRef.current) === null || _modelSelectRef$curre === void 0 ? void 0 : _modelSelectRef$curre.value) || settings.model,\n      temperature: parseFloat(((_document$getElementB = document.getElementById('temperature')) === null || _document$getElementB === void 0 ? void 0 : _document$getElementB.value) || settings.temperature),\n      maxTokens: parseInt(((_document$getElementB2 = document.getElementById('max-tokens')) === null || _document$getElementB2 === void 0 ? void 0 : _document$getElementB2.value) || settings.maxTokens)\n    });\n    setShowSettings(false);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: `sidebar ${sidebarOpen ? 'open' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Cursor Assistant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"icon-btn close-sidebar-btn\",\n          onClick: () => setSidebarOpen(false),\n          title: \"Chiudi sidebar\",\n          children: \"\\u2715\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"sidebar-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\uD83D\\uDCC2 Progetti\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"icon-btn new-project-btn\",\n            onClick: createProject,\n            title: \"Nuovo Progetto\",\n            \"aria-label\": \"Crea nuovo progetto\",\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"projects-list\",\n          children: projects.map(project => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: `sidebar-item ${(currentProject === null || currentProject === void 0 ? void 0 : currentProject.id) === project.id ? 'active' : ''}`,\n            onClick: () => {\n              setCurrentProject(project);\n              loadChats(project.id);\n            },\n            children: project.name\n          }, project.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"sidebar-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\uD83D\\uDCAC Chat recenti\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"icon-btn new-chat-btn\",\n            onClick: createChat,\n            title: \"Nuova Chat\",\n            \"aria-label\": \"Avvia nuova chat\",\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"conversation-history\",\n          children: chats.map(chat => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: `sidebar-item ${(currentChat === null || currentChat === void 0 ? void 0 : currentChat.id) === chat.id ? 'active' : ''}`,\n            onClick: () => {\n              setCurrentChat(chat);\n              // Carica i messaggi della chat qui se necessario\n            },\n            children: chat.title\n          }, chat.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        className: \"sidebar-footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-avatar\",\n            \"aria-hidden\": \"true\",\n            children: \"\\uD83D\\uDC64\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"user-name\",\n            children: \"Utente\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"settings-btn\",\n          onClick: () => setShowSettings(true),\n          children: \"\\u2699\\uFE0F Impostazioni\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-container\",\n      children: [!sidebarOpen && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"open-sidebar-btn\",\n        onClick: () => setSidebarOpen(true),\n        title: \"Apri sidebar\",\n        children: \"\\u2630\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"avatar\",\n          \"aria-hidden\": \"true\",\n          children: \"\\uD83E\\uDD16\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          id: \"chat-title\",\n          children: currentChat ? currentChat.title : 'Cursor Assistant — Nuova Chat'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"icon-btn delete-chat-btn\",\n          title: \"Elimina Chat\",\n          \"aria-label\": \"Elimina chat corrente\",\n          children: \"\\uD83D\\uDDD1\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"chat-messages\",\n        ref: chatMessagesRef,\n        \"aria-live\": \"polite\",\n        \"aria-atomic\": \"false\",\n        children: [messages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${msg.role}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"avatar\",\n            children: msg.role === 'user' ? '👤' : '🤖'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-content\",\n            children: isCodeContent(msg.content) ? /*#__PURE__*/_jsxDEV(\"pre\", {\n              children: [/*#__PURE__*/_jsxDEV(\"code\", {\n                children: msg.content.trim()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"copy-button\",\n                onClick: () => copyCodeToClipboard(msg.content),\n                children: \"Copy\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 412,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              dangerouslySetInnerHTML: {\n                __html: formatMarkdown(msg.content)\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-time\",\n            children: msg.timestamp.toLocaleTimeString([], {\n              hour: '2-digit',\n              minute: '2-digit'\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 29\n          }, this)]\n        }, msg.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 25\n        }, this)), isBotTyping && currentBotMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message bot streaming\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"avatar\",\n            children: \"\\uD83E\\uDD16\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-content\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              dangerouslySetInnerHTML: {\n                __html: formatMarkdown(currentBotMessage)\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 25\n        }, this), isBotTyping && !currentBotMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"enhanced-typing-indicator\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"avatar\",\n            children: \"\\uD83E\\uDD16\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"typing-text\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 444,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        className: \"chat-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"input-row\",\n          onSubmit: sendMessage,\n          autoComplete: \"off\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"file-input\",\n            className: \"file-upload-btn\",\n            children: [\"\\uD83D\\uDCCE\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              id: \"file-input\",\n              accept: \"image/*,.pdf,.txt\",\n              hidden: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: userInput,\n            onChange: e => setUserInput(e.target.value),\n            ref: userInputRef,\n            placeholder: \"Chiedi qualcosa a Cursor Assistant...\",\n            \"aria-label\": \"Inserisci messaggio\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            ref: sendButtonRef,\n            \"aria-label\": \"Invia messaggio\",\n            disabled: isBotTyping,\n            children: \"\\u27A4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-footer\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Cursor Assistant pu\\xF2 commettere errori. Verifica le informazioni importanti.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 13\n    }, this), showSettings && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      role: \"dialog\",\n      \"aria-modal\": \"true\",\n      \"aria-labelledby\": \"settings-title\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            id: \"settings-title\",\n            children: \"Impostazioni\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-btn\",\n            onClick: () => setShowSettings(false),\n            \"aria-label\": \"Chiudi impostazioni\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"setting-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"model-select\",\n              children: \"Modello\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 499,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"model-select\",\n              ref: modelSelectRef,\n              defaultValue: settings.model,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"mistralai/mistral-7b-instruct:free\",\n                children: \"Mistral 7B (Free)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 505,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"google/gemma-7b-it:free\",\n                children: \"Gemma 7B (Free)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 506,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"meta-llama/llama-3.1-8b-instruct:free\",\n                children: \"Llama 3.1 8B (Free)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 507,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"microsoft/phi-3-mini-128k-instruct:free\",\n                children: \"Phi-3 Mini (Free)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 508,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"openchat/openchat-7b:free\",\n                children: \"OpenChat 7B (Free)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 509,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"neversleep/llama-3-lumimaid-8b:free\",\n                children: \"Llama 3 Lumimaid (Free)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 510,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"sao10k/fimbulvetr-11b-v2:free\",\n                children: \"Fimbulvetr 11B (Free)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 511,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 500,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"setting-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"temperature\",\n              children: [\"Temperatura: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                id: \"temperature-value\",\n                children: settings.temperature\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 517,\n                columnNumber: 50\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 516,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              id: \"temperature\",\n              min: \"0\",\n              max: \"1\",\n              step: \"0.1\",\n              defaultValue: settings.temperature,\n              onChange: e => {\n                document.getElementById('temperature-value').textContent = e.target.value;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 519,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 515,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"setting-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"max-tokens\",\n              children: [\"Token massimi: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                id: \"max-tokens-value\",\n                children: settings.maxTokens\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 534,\n                columnNumber: 52\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 533,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              id: \"max-tokens\",\n              min: \"100\",\n              max: \"32768\",\n              step: \"100\",\n              defaultValue: settings.maxTokens,\n              onChange: e => {\n                document.getElementById('max-tokens-value').textContent = e.target.value;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 536,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 532,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"save-settings\",\n            onClick: saveSettings,\n            children: \"Salva\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 550,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"cancel-settings\",\n            onClick: () => setShowSettings(false),\n            children: \"Annulla\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 551,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 296,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"/jch6nfSUpVhxLMYrK3mWgpM3uc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","API_CONFIG","endpoint","model_name","temperature","max_tokens","App","_s","chatMessagesRef","userInputRef","sendButtonRef","modelSelectRef","userInput","setUserInput","messages","setMessages","isBotTyping","setIsBotTyping","settings","setSettings","model","maxTokens","showSettings","setShowSettings","sidebarOpen","setSidebarOpen","projects","setProjects","chats","setChats","currentProject","setCurrentProject","currentChat","setCurrentChat","currentBotMessage","setCurrentBotMessage","loadSupportedModels","loadProjects","response","fetch","ok","data","json","length","loadChats","id","err","console","error","projectId","createProject","projectName","prompt","method","headers","body","JSON","stringify","name","description","newProject","prev","createChat","alert","chatTitle","project_id","title","newChat","current","scrollTop","scrollHeight","log","models","sendMessage","e","preventDefault","text","trim","userMsg","Date","now","role","content","timestamp","getBotResponse","userMessage","stream","Error","status","reader","getReader","decoder","TextDecoder","buffer","botMessageContent","done","value","read","decode","lines","split","pop","line","startsWith","jsonStr","slice","_data$choices","_data$choices$","_data$choices$$delta","parse","choices","delta","warn","botMsg","errorMsg","formatMarkdown","replace","isCodeContent","patterns","some","p","RegExp","test","copyCodeToClipboard","code","navigator","clipboard","writeText","saveSettings","_modelSelectRef$curre","_document$getElementB","_document$getElementB2","parseFloat","document","getElementById","parseInt","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","project","chat","ref","msg","dangerouslySetInnerHTML","__html","toLocaleTimeString","hour","minute","onSubmit","autoComplete","htmlFor","type","accept","hidden","onChange","target","placeholder","required","disabled","defaultValue","min","max","step","textContent","_c","$RefreshReg$"],"sources":["C:/Users/Lorenzo/Desktop/chatbot/react-frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './style.css';\n\n// Configurazione\nconst API_CONFIG = {\n    endpoint: \"/api\", // Utilizza il proxy di React\n    model_name: \"mistralai/mistral-7b-instruct:free\",\n    temperature: 0.7,\n    max_tokens: 13107\n};\n\nfunction App() {\n    // Elementi DOM\n    const chatMessagesRef = useRef(null);\n    const userInputRef = useRef(null);\n    const sendButtonRef = useRef(null);\n    const modelSelectRef = useRef(null);\n    \n    // Stato\n    const [userInput, setUserInput] = useState('');\n    const [messages, setMessages] = useState([]);\n    const [isBotTyping, setIsBotTyping] = useState(false);\n    const [settings, setSettings] = useState({\n        model: API_CONFIG.model_name,\n        temperature: API_CONFIG.temperature,\n        maxTokens: API_CONFIG.max_tokens\n    });\n    const [showSettings, setShowSettings] = useState(false);\n    const [sidebarOpen, setSidebarOpen] = useState(true);\n    const [projects, setProjects] = useState([]);\n    const [chats, setChats] = useState([]);\n    const [currentProject, setCurrentProject] = useState(null);\n    const [currentChat, setCurrentChat] = useState(null);\n    \n    // Stato streaming\n    const [currentBotMessage, setCurrentBotMessage] = useState('');\n    \n    // Inizializzazione\n    useEffect(() => {\n        loadSupportedModels();\n        loadProjects();\n    }, []);\n    \n    // Carica progetti dal backend\n    async function loadProjects() {\n        try {\n            const response = await fetch(`${API_CONFIG.endpoint}/projects`);\n            if (response.ok) {\n                const data = await response.json();\n                setProjects(data);\n                if (data.length > 0) {\n                    setCurrentProject(data[0]);\n                    loadChats(data[0].id);\n                }\n            }\n        } catch (err) {\n            console.error(\"Errore caricamento progetti:\", err);\n        }\n    }\n    \n    // Carica chat per un progetto\n    async function loadChats(projectId) {\n        try {\n            const response = await fetch(`${API_CONFIG.endpoint}/projects/${projectId}/chats`);\n            if (response.ok) {\n                const data = await response.json();\n                setChats(data);\n            }\n        } catch (err) {\n            console.error(\"Errore caricamento chat:\", err);\n        }\n    }\n    \n    // Crea nuovo progetto\n    async function createProject() {\n        const projectName = prompt(\"Nome del nuovo progetto:\");\n        if (!projectName) return;\n        \n        try {\n            const response = await fetch(`${API_CONFIG.endpoint}/projects`, {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({ name: projectName, description: \"\" })\n            });\n            \n            if (response.ok) {\n                const newProject = await response.json();\n                setProjects(prev => [...prev, newProject]);\n                setCurrentProject(newProject);\n                setChats([]);\n            }\n        } catch (err) {\n            console.error(\"Errore creazione progetto:\", err);\n        }\n    }\n    \n    // Crea nuova chat\n    async function createChat() {\n        if (!currentProject) {\n            alert(\"Seleziona prima un progetto!\");\n            return;\n        }\n        \n        const chatTitle = prompt(\"Titolo della nuova chat:\") || \"Nuova Chat\";\n        \n        try {\n            const response = await fetch(`${API_CONFIG.endpoint}/chats`, {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({ \n                    project_id: currentProject.id, \n                    title: chatTitle,\n                    messages: []\n                })\n            });\n            \n            if (response.ok) {\n                const newChat = await response.json();\n                setChats(prev => [...prev, newChat]);\n                setCurrentChat(newChat);\n                setMessages([]);\n            }\n        } catch (err) {\n            console.error(\"Errore creazione chat:\", err);\n        }\n    }\n    \n    // Effetto per lo scroll automatico\n    useEffect(() => {\n        if (chatMessagesRef.current) {\n            chatMessagesRef.current.scrollTop = chatMessagesRef.current.scrollHeight;\n        }\n    }, [messages, isBotTyping]);\n    \n    // Carica modelli dal backend\n    async function loadSupportedModels() {\n        try {\n            const response = await fetch(`${API_CONFIG.endpoint}/models`);\n            if (response.ok) {\n                const data = await response.json();\n                // Per ora non facciamo nulla, ma potremmo popolare un select\n                console.log(\"Modelli supportati:\", data.models);\n            }\n        } catch (err) {\n            console.error(\"Errore caricamento modelli:\", err);\n        }\n    }\n    \n    \n    // Invio messaggio\n    function sendMessage(e) {\n        e.preventDefault();\n        const text = userInput.trim();\n        if (!text) return;\n        \n        // Aggiungi messaggio utente\n        const userMsg = {\n            id: Date.now(),\n            role: 'user',\n            content: text,\n            timestamp: new Date()\n        };\n        \n        setMessages(prev => [...prev, userMsg]);\n        setUserInput('');\n        setIsBotTyping(true);\n        setCurrentBotMessage('');\n        \n        // Ottieni risposta del bot\n        getBotResponse(text);\n    }\n    \n    // Risposta Bot (Streaming)\n    async function getBotResponse(userMessage) {\n        try {\n            const response = await fetch(`${API_CONFIG.endpoint}/v1/chat/completions`, {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({\n                    model: settings.model,\n                    messages: [\n                        { role: \"system\", content: \"You are Cursor Assistant, a helpful AI coding partner.\" },\n                        { role: \"user\", content: userMessage }\n                    ],\n                    temperature: settings.temperature,\n                    max_tokens: settings.maxTokens,\n                    stream: true\n                })\n            });\n            \n            if (!response.ok) throw new Error(`HTTP ${response.status}`);\n            \n            const reader = response.body.getReader();\n            const decoder = new TextDecoder();\n            let buffer = \"\";\n            let botMessageContent = \"\";\n            \n            while (true) {\n                const { done, value } = await reader.read();\n                if (done) break;\n                \n                buffer += decoder.decode(value, { stream: true });\n                const lines = buffer.split(\"\\n\");\n                buffer = lines.pop();\n                \n                for (const line of lines) {\n                    if (line.startsWith(\"data: \")) {\n                        const jsonStr = line.slice(6);\n                        if (jsonStr === \"[DONE]\") break;\n                        \n                        try {\n                            const data = JSON.parse(jsonStr);\n                            const content = data.choices?.[0]?.delta?.content;\n                            if (content) {\n                                botMessageContent += content;\n                                setCurrentBotMessage(botMessageContent);\n                            }\n                        } catch (e) {\n                            console.warn(\"Parse error:\", e);\n                        }\n                    }\n                }\n            }\n            \n            // Aggiungi messaggio completo del bot\n            const botMsg = {\n                id: Date.now(),\n                role: 'bot',\n                content: botMessageContent,\n                timestamp: new Date()\n            };\n            \n            setMessages(prev => [...prev, botMsg]);\n        } catch (error) {\n            console.error(\"Errore:\", error);\n            const errorMsg = {\n                id: Date.now(),\n                role: 'bot',\n                content: \"❌ Errore. Riprova più tardi.\",\n                timestamp: new Date()\n            };\n            setMessages(prev => [...prev, errorMsg]);\n        } finally {\n            setIsBotTyping(false);\n            setCurrentBotMessage('');\n        }\n    }\n    \n    // Formatta il contenuto markdown\n    function formatMarkdown(text) {\n        if (!text) return '';\n        \n        return text\n            .replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>')\n            .replace(/\\*(.*?)\\*/g, '<em>$1</em>')\n            .replace(/`(.*?)`/g, '<code>$1</code>')\n            .replace(/^### (.*$)/gm, '<h3>$1</h3>')\n            .replace(/^## (.*$)/gm, '<h2>$1</h2>')\n            .replace(/^# (.*$)/gm, '<h1>$1</h1>')\n            .replace(/^\\s*\\* (.*$)/gm, '<li>$1</li>')\n            .replace(/(<li>.*<\\/li>)/gs, '<ul>$1</ul>')\n            .replace(/\\n/g, '<br>');\n    }\n    \n    // Determina se il contenuto è codice\n    function isCodeContent(content) {\n        const patterns = [\n            /^\\s*[\\{\\[\\(\\w]+\\s*[=\\{\\[\\(]/,\n            /function\\s+\\w+\\s*\\(/,\n            /(const|let)\\s+\\w+\\s*=/,\n            /class\\s+\\w+/,\n            /import\\s+.*\\s+from/,\n            /export\\s+(default\\s+)?(function|class|const|let)/,\n            /\\w+\\s*\\([^)]*\\)\\s*\\{/,\n            /```[\\s\\S]*```/\n        ];\n        return patterns.some(p => new RegExp(p).test(content));\n    }\n    \n    // Copia codice negli appunti\n    function copyCodeToClipboard(code) {\n        navigator.clipboard.writeText(code);\n    }\n    \n    // Salva impostazioni\n    function saveSettings() {\n        setSettings({\n            model: modelSelectRef.current?.value || settings.model,\n            temperature: parseFloat(document.getElementById('temperature')?.value || settings.temperature),\n            maxTokens: parseInt(document.getElementById('max-tokens')?.value || settings.maxTokens)\n        });\n        setShowSettings(false);\n    }\n    \n    return (\n        <div className=\"app-container\">\n            {/* Sidebar */}\n            <aside className={`sidebar ${sidebarOpen ? 'open' : ''}`}>\n                {/* Header Sidebar con pulsante chiudi */}\n                <div className=\"sidebar-header\">\n                    <h2>Cursor Assistant</h2>\n                    <button \n                        className=\"icon-btn close-sidebar-btn\" \n                        onClick={() => setSidebarOpen(false)}\n                        title=\"Chiudi sidebar\"\n                    >\n                        ✕\n                    </button>\n                </div>\n                \n                {/* Sezione Progetti */}\n                <section className=\"sidebar-section\">\n                    <div className=\"section-header\">\n                        <h3>📂 Progetti</h3>\n                        <button \n                            className=\"icon-btn new-project-btn\" \n                            onClick={createProject}\n                            title=\"Nuovo Progetto\" \n                            aria-label=\"Crea nuovo progetto\"\n                        >\n                            +\n                        </button>\n                    </div>\n                    <ul className=\"projects-list\">\n                        {projects.map(project => (\n                            <li \n                                key={project.id} \n                                className={`sidebar-item ${currentProject?.id === project.id ? 'active' : ''}`}\n                                onClick={() => {\n                                    setCurrentProject(project);\n                                    loadChats(project.id);\n                                }}\n                            >\n                                {project.name}\n                            </li>\n                        ))}\n                    </ul>\n                </section>\n                \n                {/* Sezione Chat Recenti */}\n                <section className=\"sidebar-section\">\n                    <div className=\"section-header\">\n                        <h3>💬 Chat recenti</h3>\n                        <button \n                            className=\"icon-btn new-chat-btn\" \n                            onClick={createChat}\n                            title=\"Nuova Chat\" \n                            aria-label=\"Avvia nuova chat\"\n                        >\n                            +\n                        </button>\n                    </div>\n                    <ul className=\"conversation-history\">\n                        {chats.map(chat => (\n                            <li \n                                key={chat.id} \n                                className={`sidebar-item ${currentChat?.id === chat.id ? 'active' : ''}`}\n                                onClick={() => {\n                                    setCurrentChat(chat);\n                                    // Carica i messaggi della chat qui se necessario\n                                }}\n                            >\n                                {chat.title}\n                            </li>\n                        ))}\n                    </ul>\n                </section>\n                \n                {/* Footer Sidebar */}\n                <footer className=\"sidebar-footer\">\n                    <div className=\"user-info\">\n                        <div className=\"user-avatar\" aria-hidden=\"true\">👤</div>\n                        <span className=\"user-name\">Utente</span>\n                    </div>\n                    <button className=\"settings-btn\" onClick={() => setShowSettings(true)}>⚙️ Impostazioni</button>\n                </footer>\n            </aside>\n            \n            {/* Main Container */}\n            <main className=\"main-container\">\n                {/* Pulsante per aprire sidebar quando è chiusa */}\n                {!sidebarOpen && (\n                    <button \n                        className=\"open-sidebar-btn\"\n                        onClick={() => setSidebarOpen(true)}\n                        title=\"Apri sidebar\"\n                    >\n                        ☰\n                    </button>\n                )}\n                \n                {/* Header Chat */}\n                <header className=\"chat-header\">\n                    <div className=\"avatar\" aria-hidden=\"true\">🤖</div>\n                    <h1 id=\"chat-title\">\n                        {currentChat ? currentChat.title : 'Cursor Assistant — Nuova Chat'}\n                    </h1>\n                    <button className=\"icon-btn delete-chat-btn\" title=\"Elimina Chat\" aria-label=\"Elimina chat corrente\">🗑️</button>\n                </header>\n                \n                {/* Messaggi Chat */}\n                <section className=\"chat-messages\" ref={chatMessagesRef} aria-live=\"polite\" aria-atomic=\"false\">\n                    {messages.map(msg => (\n                        <div key={msg.id} className={`message ${msg.role}`}>\n                            <div className=\"avatar\">\n                                {msg.role === 'user' ? '👤' : '🤖'}\n                            </div>\n                            <div className=\"message-content\">\n                                {isCodeContent(msg.content) ? (\n                                    <pre>\n                                        <code>{msg.content.trim()}</code>\n                                        <button \n                                            className=\"copy-button\" \n                                            onClick={() => copyCodeToClipboard(msg.content)}\n                                        >\n                                            Copy\n                                        </button>\n                                    </pre>\n                                ) : (\n                                    <div dangerouslySetInnerHTML={{ __html: formatMarkdown(msg.content) }} />\n                                )}\n                            </div>\n                            <div className=\"message-time\">\n                                {msg.timestamp.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\n                            </div>\n                        </div>\n                    ))}\n                    \n                    {/* Messaggio in streaming */}\n                    {isBotTyping && currentBotMessage && (\n                        <div className=\"message bot streaming\">\n                            <div className=\"avatar\">🤖</div>\n                            <div className=\"message-content\">\n                                <div dangerouslySetInnerHTML={{ __html: formatMarkdown(currentBotMessage) }} />\n                            </div>\n                        </div>\n                    )}\n                    \n                    {/* Indicatore di digitazione */}\n                    {isBotTyping && !currentBotMessage && (\n                        <div className=\"enhanced-typing-indicator\">\n                            <div className=\"avatar\">🤖</div>\n                            <div className=\"typing-text\">\n                                <span></span>\n                                <span></span>\n                                <span></span>\n                            </div>\n                        </div>\n                    )}\n                </section>\n                \n                {/* Input Chat */}\n                <footer className=\"chat-input-container\">\n                    <form className=\"input-row\" onSubmit={sendMessage} autoComplete=\"off\">\n                        <label htmlFor=\"file-input\" className=\"file-upload-btn\">\n                            📎\n                            <input type=\"file\" id=\"file-input\" accept=\"image/*,.pdf,.txt\" hidden />\n                        </label>\n                        <input\n                            type=\"text\"\n                            value={userInput}\n                            onChange={(e) => setUserInput(e.target.value)}\n                            ref={userInputRef}\n                            placeholder=\"Chiedi qualcosa a Cursor Assistant...\"\n                            aria-label=\"Inserisci messaggio\"\n                            required\n                        />\n                        <button \n                            type=\"submit\" \n                            ref={sendButtonRef} \n                            aria-label=\"Invia messaggio\"\n                            disabled={isBotTyping}\n                        >\n                            ➤\n                        </button>\n                    </form>\n                    <div className=\"input-footer\">\n                        <span>Cursor Assistant può commettere errori. Verifica le informazioni importanti.</span>\n                    </div>\n                </footer>\n            </main>\n            \n            {/* Modale Impostazioni */}\n            {showSettings && (\n                <div className=\"modal\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"settings-title\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h2 id=\"settings-title\">Impostazioni</h2>\n                            <button \n                                className=\"close-btn\" \n                                onClick={() => setShowSettings(false)}\n                                aria-label=\"Chiudi impostazioni\"\n                            >\n                                &times;\n                            </button>\n                        </div>\n                        <div className=\"modal-body\">\n                            <div className=\"setting-group\">\n                                <label htmlFor=\"model-select\">Modello</label>\n                                <select \n                                    id=\"model-select\" \n                                    ref={modelSelectRef}\n                                    defaultValue={settings.model}\n                                >\n                                    <option value=\"mistralai/mistral-7b-instruct:free\">Mistral 7B (Free)</option>\n                                    <option value=\"google/gemma-7b-it:free\">Gemma 7B (Free)</option>\n                                    <option value=\"meta-llama/llama-3.1-8b-instruct:free\">Llama 3.1 8B (Free)</option>\n                                    <option value=\"microsoft/phi-3-mini-128k-instruct:free\">Phi-3 Mini (Free)</option>\n                                    <option value=\"openchat/openchat-7b:free\">OpenChat 7B (Free)</option>\n                                    <option value=\"neversleep/llama-3-lumimaid-8b:free\">Llama 3 Lumimaid (Free)</option>\n                                    <option value=\"sao10k/fimbulvetr-11b-v2:free\">Fimbulvetr 11B (Free)</option>\n                                </select>\n                            </div>\n                            \n                            <div className=\"setting-group\">\n                                <label htmlFor=\"temperature\">\n                                    Temperatura: <span id=\"temperature-value\">{settings.temperature}</span>\n                                </label>\n                                <input \n                                    type=\"range\" \n                                    id=\"temperature\" \n                                    min=\"0\" \n                                    max=\"1\" \n                                    step=\"0.1\" \n                                    defaultValue={settings.temperature}\n                                    onChange={(e) => {\n                                        document.getElementById('temperature-value').textContent = e.target.value;\n                                    }}\n                                />\n                            </div>\n                            \n                            <div className=\"setting-group\">\n                                <label htmlFor=\"max-tokens\">\n                                    Token massimi: <span id=\"max-tokens-value\">{settings.maxTokens}</span>\n                                </label>\n                                <input \n                                    type=\"range\" \n                                    id=\"max-tokens\" \n                                    min=\"100\" \n                                    max=\"32768\" \n                                    step=\"100\" \n                                    defaultValue={settings.maxTokens}\n                                    onChange={(e) => {\n                                        document.getElementById('max-tokens-value').textContent = e.target.value;\n                                    }}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"modal-footer\">\n                            <button id=\"save-settings\" onClick={saveSettings}>Salva</button>\n                            <button id=\"cancel-settings\" onClick={() => setShowSettings(false)}>Annulla</button>\n                        </div>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}