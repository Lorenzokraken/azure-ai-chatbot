{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lorenzo\\\\Desktop\\\\chatbot\\\\react-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './style.css';\n\n// Configurazione\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_CONFIG = {\n  endpoint: \"/api\",\n  // Utilizza il proxy di React\n  model_name: \"qwen/qwen3-8b:free\",\n  temperature: 0.7,\n  max_tokens: 13107\n};\nfunction App() {\n  _s();\n  // Elementi DOM\n  const chatMessagesRef = useRef(null);\n  const userInputRef = useRef(null);\n  const sendButtonRef = useRef(null);\n  const modelSelectRef = useRef(null);\n\n  // Stato\n  const [userInput, setUserInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [isBotTyping, setIsBotTyping] = useState(false);\n  const [settings, setSettings] = useState({\n    model: API_CONFIG.model_name,\n    temperature: API_CONFIG.temperature,\n    maxTokens: API_CONFIG.max_tokens\n  });\n  const [showSettings, setShowSettings] = useState(false);\n  const [sidebarOpen, setSidebarOpen] = useState(true);\n  const [projects, setProjects] = useState([]);\n  const [projectChats, setProjectChats] = useState([]); // Chat del progetto corrente\n  const [independentChats, setIndependentChats] = useState([]); // Chat indipendenti\n  const [currentProject, setCurrentProject] = useState(null);\n  const [currentChat, setCurrentChat] = useState(null);\n  const [showProjectForm, setShowProjectForm] = useState(false);\n  const [editingProject, setEditingProject] = useState(null);\n  const [projectForm, setProjectForm] = useState({\n    name: '',\n    description: '',\n    prompt: ''\n  });\n  const [showChatForm, setShowChatForm] = useState(false);\n  const [chatForm, setChatForm] = useState({\n    title: '',\n    projectId: null\n  });\n  const [showContextModal, setShowContextModal] = useState(false);\n  const [currentContext, setCurrentContext] = useState(\"\");\n\n  // Stato streaming\n  const [currentBotMessage, setCurrentBotMessage] = useState('');\n\n  // Inizializzazione\n  useEffect(() => {\n    loadSupportedModels();\n    loadProjects();\n    loadIndependentChats();\n  }, []);\n\n  // Carica progetti dal backend\n  async function loadProjects() {\n    try {\n      const response = await fetch('/api/projects');\n      if (response.ok) {\n        const data = await response.json();\n        setProjects(data);\n        if (data.length > 0) {\n          setCurrentProject(data[0]);\n          loadChats(data[0].id);\n        }\n      }\n    } catch (err) {\n      console.error(\"Errore caricamento progetti:\", err);\n    }\n  }\n\n  // Carica chat per un progetto\n  async function loadChats(projectId) {\n    try {\n      const response = await fetch(`/api/projects/${projectId}/chats`);\n      if (response.ok) {\n        const data = await response.json();\n        setProjectChats(data);\n      }\n    } catch (err) {\n      console.error(\"Errore caricamento chat:\", err);\n    }\n  }\n\n  // Carica messaggi di una chat specifica\n  async function loadChatMessages(chatId) {\n    try {\n      const response = await fetch(`/api/chats/${chatId}`);\n      if (response.ok) {\n        const chat = await response.json();\n\n        // Converti i timestamp da stringhe a oggetti Date\n        const messagesWithDates = (chat.messages || []).map(msg => ({\n          ...msg,\n          timestamp: new Date(msg.timestamp)\n        }));\n        setMessages(messagesWithDates);\n      }\n    } catch (err) {\n      console.error(\"Errore caricamento messaggi:\", err);\n    }\n  }\n\n  // Salva messaggi di una chat\n  async function saveChatMessages(chatId, messages) {\n    try {\n      const response = await fetch(`/api/chats/${chatId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          messages: messages\n        })\n      });\n      if (!response.ok) {\n        console.error(\"Errore salvataggio messaggi:\", response.statusText);\n      }\n    } catch (err) {\n      console.error(\"Errore salvataggio messaggi:\", err);\n    }\n  }\n\n  // Carica chat indipendenti (per ora vuoto, da implementare nel backend)\n  async function loadIndependentChats() {\n    try {\n      // TODO: Implementare API per chat indipendenti nel backend\n      // const response = await fetch('/api/independent-chats');\n      // if (response.ok) {\n      //     const data = await response.json();\n      //     setIndependentChats(data);\n      // }\n      setIndependentChats([]);\n    } catch (err) {\n      console.error(\"Errore caricamento chat indipendenti:\", err);\n    }\n  }\n\n  // Apri form per nuovo progetto\n  function openProjectForm(project = null) {\n    if (project) {\n      setEditingProject(project);\n      setProjectForm({\n        name: project.name,\n        description: project.description || '',\n        prompt: project.prompt || ''\n      });\n    } else {\n      setEditingProject(null);\n      setProjectForm({\n        name: '',\n        description: '',\n        prompt: ''\n      });\n    }\n    setShowProjectForm(true);\n  }\n\n  // Chiudi form progetto\n  function closeProjectForm() {\n    setShowProjectForm(false);\n    setEditingProject(null);\n    setProjectForm({\n      name: '',\n      description: '',\n      prompt: ''\n    });\n  }\n\n  // Salva progetto (crea o modifica)\n  async function saveProject(e) {\n    e.preventDefault();\n    if (!projectForm.name.trim()) return;\n    try {\n      const url = editingProject ? `/api/projects/${editingProject.id}` : '/api/projects';\n      const method = editingProject ? 'PUT' : 'POST';\n      const response = await fetch(url, {\n        method: method,\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: projectForm.name.trim(),\n          description: projectForm.description.trim(),\n          prompt: projectForm.prompt.trim()\n        })\n      });\n      if (response.ok) {\n        const savedProject = await response.json();\n        if (editingProject) {\n          // Aggiorna progetto esistente\n          setProjects(prev => prev.map(p => p.id === editingProject.id ? savedProject : p));\n          if ((currentProject === null || currentProject === void 0 ? void 0 : currentProject.id) === editingProject.id) {\n            setCurrentProject(savedProject);\n          }\n        } else {\n          // Aggiungi nuovo progetto\n          setProjects(prev => [...prev, savedProject]);\n          setCurrentProject(savedProject);\n          setProjectChats([]);\n        }\n        closeProjectForm();\n      }\n    } catch (err) {\n      console.error(\"Errore salvataggio progetto:\", err);\n    }\n  }\n\n  // Elimina progetto\n  async function deleteProject(projectId) {\n    if (!window.confirm(\"Sei sicuro di voler eliminare questo progetto?\")) return;\n    try {\n      const response = await fetch(`/api/projects/${projectId}`, {\n        method: 'DELETE'\n      });\n      if (response.ok) {\n        setProjects(prev => prev.filter(p => p.id !== projectId));\n        if ((currentProject === null || currentProject === void 0 ? void 0 : currentProject.id) === projectId) {\n          setCurrentProject(null);\n          setProjectChats([]);\n        }\n      }\n    } catch (err) {\n      console.error(\"Errore eliminazione progetto:\", err);\n    }\n  }\n\n  // Elimina chat\n  async function deleteChat(chatId, isIndependent = false) {\n    if (!window.confirm(\"Sei sicuro di voler eliminare questa chat? Questa azione non può essere annullata.\")) return;\n    try {\n      const response = await fetch(`/api/chats/${chatId}`, {\n        method: 'DELETE'\n      });\n      if (response.ok) {\n        if (isIndependent) {\n          setIndependentChats(prev => prev.filter(c => c.id !== chatId));\n        } else {\n          setProjectChats(prev => prev.filter(c => c.id !== chatId));\n        }\n\n        // Se la chat eliminata è quella corrente, deseleziona\n        if ((currentChat === null || currentChat === void 0 ? void 0 : currentChat.id) === chatId) {\n          setCurrentChat(null);\n          setMessages([]);\n        }\n      }\n    } catch (err) {\n      console.error(\"Errore eliminazione chat:\", err);\n    }\n  }\n\n  // Apri form per nuova chat\n  function openChatForm() {\n    setChatForm({\n      title: '',\n      projectId: (currentProject === null || currentProject === void 0 ? void 0 : currentProject.id) || null\n    });\n    setShowChatForm(true);\n  }\n\n  // Chiudi form chat\n  function closeChatForm() {\n    setShowChatForm(false);\n    setChatForm({\n      title: '',\n      projectId: null\n    });\n  }\n\n  // Crea nuova chat\n  async function createChat(e) {\n    e.preventDefault();\n    if (!chatForm.title.trim()) return;\n    try {\n      // Per ora, le chat indipendenti non sono supportate dal backend\n      // Creiamo sempre una chat di progetto\n      const projectId = chatForm.projectId || (projects.length > 0 ? projects[0].id : null);\n      if (!projectId) {\n        alert(\"Crea prima un progetto per poter creare chat!\");\n        return;\n      }\n      const response = await fetch('/api/chats', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          project_id: projectId,\n          title: chatForm.title.trim(),\n          messages: []\n        })\n      });\n      if (response.ok) {\n        const newChat = await response.json();\n\n        // Aggiorna la lista delle chat del progetto\n        setProjectChats(prev => [...prev, newChat]);\n\n        // Se è il progetto corrente, seleziona la chat\n        if ((currentProject === null || currentProject === void 0 ? void 0 : currentProject.id) === projectId) {\n          setCurrentChat(newChat);\n          setMessages([]);\n        }\n        closeChatForm();\n      }\n    } catch (err) {\n      console.error(\"Errore creazione chat:\", err);\n    }\n  }\n\n  // Salva il contesto della chat\n  async function saveChatContext() {\n    if (!currentChat) return;\n    try {\n      const response = await fetch(`/api/chats/${currentChat.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          context: currentContext\n        })\n      });\n      if (response.ok) {\n        const updatedChat = await response.json();\n        // Aggiorna la chat corrente nello stato per riflettere il nuovo contesto\n        setCurrentChat(updatedChat);\n        // Aggiorna anche la lista delle chat\n        if (updatedChat.project_id) {\n          setProjectChats(prev => prev.map(c => c.id === updatedChat.id ? updatedChat : c));\n        } else {\n          setIndependentChats(prev => prev.map(c => c.id === updatedChat.id ? updatedChat : c));\n        }\n      }\n    } catch (err) {\n      console.error(\"Errore salvataggio contesto:\", err);\n    } finally {\n      setShowContextModal(false);\n    }\n  }\n\n  // Effetto per lo scroll automatico\n  useEffect(() => {\n    if (chatMessagesRef.current) {\n      chatMessagesRef.current.scrollTop = chatMessagesRef.current.scrollHeight;\n    }\n  }, [messages, isBotTyping]);\n\n  // Carica modelli dal backend\n  async function loadSupportedModels() {\n    try {\n      const response = await fetch('/models');\n      if (response.ok) {\n        const data = await response.json();\n        console.log(\"Modelli supportati:\", data.models);\n      }\n    } catch (err) {\n      console.error(\"Errore caricamento modelli:\", err);\n    }\n  }\n\n  // Invio messaggio\n  function sendMessage(e) {\n    e.preventDefault();\n    const text = userInput.trim();\n    if (!text) return;\n\n    // Aggiungi messaggio utente\n    const userMsg = {\n      id: Date.now(),\n      role: 'user',\n      content: text,\n      timestamp: new Date()\n    };\n    const updatedMessages = [...messages, userMsg];\n    setMessages(updatedMessages);\n    setUserInput('');\n    setIsBotTyping(true);\n    setCurrentBotMessage('');\n\n    // Salva i messaggi nel database se c'è una chat corrente\n    if (currentChat) {\n      saveChatMessages(currentChat.id, updatedMessages);\n    }\n\n    // Ottieni risposta del bot\n    getBotResponse(text);\n  }\n\n  // Risposta Bot (Streaming)\n  async function getBotResponse(userMessage) {\n    try {\n      console.log(\"Inviando richiesta al bot con modello:\", settings.model);\n      const systemMessage = \"You are KrakenGPT, a helpful AI coding partner.\";\n      const context = (currentChat === null || currentChat === void 0 ? void 0 : currentChat.context) || \"\";\n      const systemMessageWithContext = context ? `${systemMessage}\\n\\n--- CONTESTO ---\\n${context}\\n--- FINE CONTESTO ---` : systemMessage;\n      const response = await fetch('/v1/chat/completions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          model: settings.model,\n          messages: [{\n            role: \"system\",\n            content: systemMessageWithContext\n          }, {\n            role: \"user\",\n            content: userMessage\n          }],\n          temperature: settings.temperature,\n          max_tokens: settings.maxTokens,\n          stream: true\n        })\n      });\n      console.log(\"Risposta ricevuta:\", response.status, response.statusText);\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error(\"Errore HTTP:\", response.status, errorText);\n        throw new Error(`HTTP ${response.status}: ${errorText}`);\n      }\n      const reader = response.body.getReader();\n      const decoder = new TextDecoder();\n      let buffer = \"\";\n      let botMessageContent = \"\";\n      while (true) {\n        const {\n          done,\n          value\n        } = await reader.read();\n        if (done) break;\n        buffer += decoder.decode(value, {\n          stream: true\n        });\n        const lines = buffer.split(\"\\n\");\n        buffer = lines.pop();\n        for (const line of lines) {\n          if (line.startsWith(\"data: \")) {\n            const jsonStr = line.slice(6);\n            if (jsonStr === \"[DONE]\") break;\n            try {\n              var _data$choices, _data$choices$, _data$choices$$delta;\n              const data = JSON.parse(jsonStr);\n              console.log(\"Dati ricevuti:\", data);\n              const content = (_data$choices = data.choices) === null || _data$choices === void 0 ? void 0 : (_data$choices$ = _data$choices[0]) === null || _data$choices$ === void 0 ? void 0 : (_data$choices$$delta = _data$choices$.delta) === null || _data$choices$$delta === void 0 ? void 0 : _data$choices$$delta.content;\n              if (content) {\n                botMessageContent += content;\n                setCurrentBotMessage(botMessageContent);\n              }\n            } catch (e) {\n              console.warn(\"Parse error:\", e, \"Line:\", line);\n            }\n          }\n        }\n      }\n      console.log(\"Contenuto finale del bot:\", botMessageContent);\n\n      // Aggiungi messaggio completo del bot\n      const botMsg = {\n        id: Date.now(),\n        role: 'bot',\n        content: botMessageContent || \"❌ Nessuna risposta ricevuta dal modello.\",\n        timestamp: new Date()\n      };\n      setMessages(prev => {\n        const updatedMessages = [...prev, botMsg];\n\n        // Salva i messaggi nel database se c'è una chat corrente\n        if (currentChat) {\n          saveChatMessages(currentChat.id, updatedMessages);\n        }\n        return updatedMessages;\n      });\n    } catch (error) {\n      console.error(\"Errore completo:\", error);\n      const errorMsg = {\n        id: Date.now(),\n        role: 'bot',\n        content: `❌ Errore: ${error.message}`,\n        timestamp: new Date()\n      };\n      setMessages(prev => {\n        const updatedMessages = [...prev, errorMsg];\n\n        // Salva i messaggi nel database se c'è una chat corrente\n        if (currentChat) {\n          saveChatMessages(currentChat.id, updatedMessages);\n        }\n        return updatedMessages;\n      });\n    } finally {\n      setIsBotTyping(false);\n      setCurrentBotMessage('');\n    }\n  }\n\n  // Formatta il contenuto markdown\n  function formatMarkdown(text) {\n    if (!text) return '';\n    return text.replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>').replace(/\\*(.*?)\\*/g, '<em>$1</em>').replace(/`(.*?)`/g, '<code>$1</code>').replace(/^### (.*$)/gm, '<h3>$1</h3>').replace(/^## (.*$)/gm, '<h2>$1</h2>').replace(/^# (.*$)/gm, '<h1>$1</h1>').replace(/^\\s*\\* (.*$)/gm, '<li>$1</li>').replace(/(<li>.*<\\/li>)/gs, '<ul>$1</ul>').replace(/\\n/g, '<br>');\n  }\n\n  // Determina se il contenuto è codice\n  function isCodeContent(content) {\n    const patterns = [/^\\s*[\\{\\[\\(\\w]+\\s*[=\\{\\[\\(]/, /function\\s+\\w+\\s*\\(/, /(const|let)\\s+\\w+\\s*=/, /class\\s+\\w+/, /import\\s+.*\\s+from/, /export\\s+(default\\s+)?(function|class|const|let)/, /\\w+\\s*\\([^)]*\\)\\s*\\{/, /```[\\s\\S]*```/];\n    return patterns.some(p => new RegExp(p).test(content));\n  }\n\n  // Copia codice negli appunti\n  function copyCodeToClipboard(code) {\n    navigator.clipboard.writeText(code);\n  }\n\n  // Salva impostazioni\n  function saveSettings() {\n    var _modelSelectRef$curre, _document$getElementB, _document$getElementB2;\n    setSettings({\n      model: ((_modelSelectRef$curre = modelSelectRef.current) === null || _modelSelectRef$curre === void 0 ? void 0 : _modelSelectRef$curre.value) || settings.model,\n      temperature: parseFloat(((_document$getElementB = document.getElementById('temperature')) === null || _document$getElementB === void 0 ? void 0 : _document$getElementB.value) || settings.temperature),\n      maxTokens: parseInt(((_document$getElementB2 = document.getElementById('max-tokens')) === null || _document$getElementB2 === void 0 ? void 0 : _document$getElementB2.value) || settings.maxTokens)\n    });\n    setShowSettings(false);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: `sidebar ${sidebarOpen ? 'open' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"KrakenGPT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"icon-btn close-sidebar-btn\",\n          onClick: () => setSidebarOpen(false),\n          title: \"Chiudi sidebar\",\n          children: \"\\u2715\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"sidebar-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\uD83D\\uDCC2 Progetti\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 580,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"icon-btn new-project-btn\",\n            onClick: () => openProjectForm(),\n            title: \"Nuovo Progetto\",\n            \"aria-label\": \"Crea nuovo progetto\",\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 581,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"projects-list\",\n          children: projects.map(project => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: `sidebar-item project-item ${(currentProject === null || currentProject === void 0 ? void 0 : currentProject.id) === project.id ? 'active' : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"project-name\",\n              onClick: () => {\n                setCurrentProject(project);\n                loadChats(project.id);\n              },\n              children: project.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 596,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"project-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"icon-btn edit-project-btn\",\n                onClick: e => {\n                  e.stopPropagation();\n                  openProjectForm(project);\n                },\n                title: \"Modifica progetto\",\n                \"aria-label\": \"Modifica progetto\",\n                children: \"\\u270E\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 606,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"icon-btn delete-project-btn\",\n                onClick: e => {\n                  e.stopPropagation();\n                  deleteProject(project.id);\n                },\n                title: \"Elimina progetto\",\n                \"aria-label\": \"Elimina progetto\",\n                children: \"\\u2297\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 617,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 605,\n              columnNumber: 33\n            }, this)]\n          }, project.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 592,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 578,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"sidebar-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\uD83D\\uDCAC Chat recenti\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 637,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"icon-btn new-chat-btn\",\n            onClick: openChatForm,\n            title: \"Nuova Chat\",\n            \"aria-label\": \"Avvia nuova chat\",\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 638,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 636,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"conversation-history\",\n          children: [projectChats.map(chat => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: `sidebar-item chat-item ${(currentChat === null || currentChat === void 0 ? void 0 : currentChat.id) === chat.id ? 'active' : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat-content\",\n              onClick: () => {\n                setCurrentChat(chat);\n                loadChatMessages(chat.id);\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chat-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"chat-title\",\n                  children: chat.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 661,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"chat-project\",\n                  children: currentProject === null || currentProject === void 0 ? void 0 : currentProject.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 662,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 660,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 653,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat-actions\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"icon-btn delete-chat-btn\",\n                onClick: e => {\n                  e.stopPropagation();\n                  deleteChat(chat.id, false);\n                },\n                title: \"Elimina chat\",\n                \"aria-label\": \"Elimina chat\",\n                children: \"\\u2297\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 666,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 665,\n              columnNumber: 33\n            }, this)]\n          }, chat.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 649,\n            columnNumber: 29\n          }, this)), independentChats.map(chat => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: `sidebar-item chat-item ${(currentChat === null || currentChat === void 0 ? void 0 : currentChat.id) === chat.id ? 'active' : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat-content\",\n              onClick: () => {\n                setCurrentChat(chat);\n                loadChatMessages(chat.id);\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chat-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"chat-title\",\n                  children: chat.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 693,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"chat-project independent\",\n                  children: \"Indipendente\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 694,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 692,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 685,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat-actions\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"icon-btn delete-chat-btn\",\n                onClick: e => {\n                  e.stopPropagation();\n                  deleteChat(chat.id, true);\n                },\n                title: \"Elimina chat\",\n                \"aria-label\": \"Elimina chat\",\n                children: \"\\u2297\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 698,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 697,\n              columnNumber: 33\n            }, this)]\n          }, `ind-${chat.id}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 681,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 647,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 635,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        className: \"sidebar-footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-avatar\",\n            \"aria-hidden\": \"true\",\n            children: \"\\uD83D\\uDC64\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 718,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"user-name\",\n            children: \"Utente\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 719,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 717,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"settings-btn\",\n          onClick: () => setShowSettings(true),\n          children: \"\\u2699 Impostazioni\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 721,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 716,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 564,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-container\",\n      children: [!sidebarOpen && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"open-sidebar-btn\",\n        onClick: () => setSidebarOpen(true),\n        title: \"Apri sidebar\",\n        children: \"\\u2630\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 729,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-header-main\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"avatar\",\n            \"aria-hidden\": \"true\",\n            children: \"\\uD83E\\uDD16\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 741,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            id: \"chat-title\",\n            children: currentChat ? currentChat.title : 'KrakenGPT — Nuova Chat'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 742,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"icon-btn delete-chat-btn\",\n            title: \"Elimina Chat\",\n            \"aria-label\": \"Elimina chat corrente\",\n            children: \"\\uD83D\\uDDD1\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 745,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 740,\n          columnNumber: 21\n        }, this), currentChat && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-context-bar\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"context-label\",\n            children: \"Contesto RAG:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 749,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"context-preview\",\n            children: currentChat.context ? `${currentChat.context.substring(0, 100)}...` : 'Nessun contesto'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 750,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"edit-context-btn\",\n            onClick: () => {\n              setCurrentContext(currentChat.context || \"\");\n              setShowContextModal(true);\n            },\n            children: \"Modifica Contesto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 753,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 748,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 739,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"chat-messages\",\n        ref: chatMessagesRef,\n        \"aria-live\": \"polite\",\n        \"aria-atomic\": \"false\",\n        children: [messages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${msg.role}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"avatar\",\n            children: msg.role === 'user' ? '👤' : '🤖'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 770,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-content\",\n            children: isCodeContent(msg.content) ? /*#__PURE__*/_jsxDEV(\"pre\", {\n              children: [/*#__PURE__*/_jsxDEV(\"code\", {\n                children: msg.content.trim()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 776,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"copy-button\",\n                onClick: () => copyCodeToClipboard(msg.content),\n                children: \"Copy\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 777,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 775,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              dangerouslySetInnerHTML: {\n                __html: formatMarkdown(msg.content)\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 785,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 773,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-time\",\n            children: msg.timestamp.toLocaleTimeString([], {\n              hour: '2-digit',\n              minute: '2-digit'\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 788,\n            columnNumber: 29\n          }, this)]\n        }, msg.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 769,\n          columnNumber: 25\n        }, this)), isBotTyping && currentBotMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message bot streaming\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"avatar\",\n            children: \"\\uD83E\\uDD16\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 797,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-content\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              dangerouslySetInnerHTML: {\n                __html: formatMarkdown(currentBotMessage)\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 799,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 798,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 796,\n          columnNumber: 25\n        }, this), isBotTyping && !currentBotMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"enhanced-typing-indicator\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"avatar\",\n            children: \"\\uD83E\\uDD16\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 807,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"typing-text\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 809,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 810,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 811,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 808,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 806,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 767,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        className: \"chat-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"input-row\",\n          onSubmit: sendMessage,\n          autoComplete: \"off\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"file-input\",\n            className: \"file-upload-btn\",\n            children: [\"\\uD83D\\uDCCE\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              id: \"file-input\",\n              accept: \"image/*,.pdf,.txt\",\n              hidden: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 822,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 820,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: userInput,\n            onChange: e => setUserInput(e.target.value),\n            ref: userInputRef,\n            placeholder: \"Chiedi qualcosa a KrakenGPT...\",\n            \"aria-label\": \"Inserisci messaggio\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 824,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            ref: sendButtonRef,\n            \"aria-label\": \"Invia messaggio\",\n            disabled: isBotTyping,\n            children: \"\\u27A4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 833,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 819,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-warning\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"KrakenGPT pu\\xF2 commettere errori. Verifica le informazioni importanti.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 843,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 842,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 818,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 726,\n      columnNumber: 13\n    }, this), showProjectForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      role: \"dialog\",\n      \"aria-modal\": \"true\",\n      \"aria-labelledby\": \"project-form-title\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            id: \"project-form-title\",\n            children: editingProject ? 'Modifica Progetto' : 'Nuovo Progetto'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 853,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-btn\",\n            onClick: closeProjectForm,\n            \"aria-label\": \"Chiudi form progetto\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 856,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 852,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"modal-body\",\n          onSubmit: saveProject,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"project-name\",\n              children: \"Nome Progetto *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 866,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"project-name\",\n              value: projectForm.name,\n              onChange: e => setProjectForm(prev => ({\n                ...prev,\n                name: e.target.value\n              })),\n              placeholder: \"Inserisci il nome del progetto\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 867,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 865,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"project-description\",\n              children: \"Descrizione\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 878,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: \"project-description\",\n              value: projectForm.description,\n              onChange: e => setProjectForm(prev => ({\n                ...prev,\n                description: e.target.value\n              })),\n              placeholder: \"Descrizione del progetto (opzionale)\",\n              rows: \"3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 879,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 877,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"project-prompt\",\n              children: \"Project Prompt\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 889,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: \"project-prompt\",\n              value: projectForm.prompt,\n              onChange: e => setProjectForm(prev => ({\n                ...prev,\n                prompt: e.target.value\n              })),\n              placeholder: \"Prompt di sistema per questo progetto (es: 'Sei un assistente specializzato in React e JavaScript...')\",\n              rows: \"4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 890,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"form-help\",\n              children: \"Questo prompt verr\\xE0 utilizzato come contesto di sistema per tutte le chat di questo progetto.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 897,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 888,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 864,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: saveProject,\n            className: \"btn-primary\",\n            disabled: !projectForm.name.trim(),\n            children: editingProject ? 'Salva Modifiche' : 'Crea Progetto'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 903,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: closeProjectForm,\n            className: \"btn-secondary\",\n            children: \"Annulla\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 911,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 902,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 851,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 850,\n      columnNumber: 17\n    }, this), showChatForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      role: \"dialog\",\n      \"aria-modal\": \"true\",\n      \"aria-labelledby\": \"chat-form-title\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            id: \"chat-form-title\",\n            children: \"Nuova Chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 928,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-btn\",\n            onClick: closeChatForm,\n            \"aria-label\": \"Chiudi form chat\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 929,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 927,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"modal-body\",\n          onSubmit: createChat,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"chat-title\",\n              children: \"Titolo Chat *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 939,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"chat-title\",\n              value: chatForm.title,\n              onChange: e => setChatForm(prev => ({\n                ...prev,\n                title: e.target.value\n              })),\n              placeholder: \"Inserisci il titolo della chat\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 940,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 938,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"chat-project\",\n              children: \"Progetto\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 951,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"chat-project\",\n              value: chatForm.projectId || '',\n              onChange: e => setChatForm(prev => ({\n                ...prev,\n                projectId: e.target.value || null\n              })),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Nessun progetto (Chat indipendente)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 957,\n                columnNumber: 37\n              }, this), projects.map(project => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: project.id,\n                children: project.name\n              }, project.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 959,\n                columnNumber: 41\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 952,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"form-help\",\n              children: \"Scegli un progetto per associare la chat, oppure lascia vuoto per una chat indipendente.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 964,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 950,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 937,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            onClick: createChat,\n            className: \"btn-primary\",\n            disabled: !chatForm.title.trim(),\n            children: \"Crea Chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 970,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: closeChatForm,\n            className: \"btn-secondary\",\n            children: \"Annulla\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 978,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 969,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 926,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 925,\n      columnNumber: 17\n    }, this), showSettings && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      role: \"dialog\",\n      \"aria-modal\": \"true\",\n      \"aria-labelledby\": \"settings-title\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            id: \"settings-title\",\n            children: \"Impostazioni\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 995,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-btn\",\n            onClick: () => setShowSettings(false),\n            \"aria-label\": \"Chiudi impostazioni\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 996,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 994,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"setting-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"model-select\",\n              children: \"Modello\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1006,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"model-select\",\n              ref: modelSelectRef,\n              defaultValue: settings.model,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"qwen/qwen3-8b:free\",\n                children: \"Qwen3 8B (Free)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1012,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"qwen/qwen3-coder-480b-a35b:free\",\n                children: \"Qwen3 Coder 480B A35B (Free)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1013,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"mistralai/mistral-7b-instruct:free\",\n                children: \"Mistral 7B (Free)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1014,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"google/gemma-7b-it:free\",\n                children: \"Gemma 7B (Free)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1015,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"meta-llama/llama-3.1-8b-instruct:free\",\n                children: \"Llama 3.1 8B (Free)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1016,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"microsoft/phi-3-mini-128k-instruct:free\",\n                children: \"Phi-3 Mini (Free)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1017,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"openchat/openchat-7b:free\",\n                children: \"OpenChat 7B (Free)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1018,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"neversleep/llama-3-lumimaid-8b:free\",\n                children: \"Llama 3 Lumimaid (Free)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1019,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"sao10k/fimbulvetr-11b-v2:free\",\n                children: \"Fimbulvetr 11B (Free)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1020,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1007,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1005,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"setting-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"temperature\",\n              children: [\"Temperatura: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                id: \"temperature-value\",\n                children: settings.temperature\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1026,\n                columnNumber: 50\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1025,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              id: \"temperature\",\n              min: \"0\",\n              max: \"1\",\n              step: \"0.1\",\n              defaultValue: settings.temperature,\n              onChange: e => {\n                document.getElementById('temperature-value').textContent = e.target.value;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1028,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1024,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"setting-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"max-tokens\",\n              children: [\"Token massimi: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                id: \"max-tokens-value\",\n                children: settings.maxTokens\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1043,\n                columnNumber: 52\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1042,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              id: \"max-tokens\",\n              min: \"100\",\n              max: \"32768\",\n              step: \"100\",\n              defaultValue: settings.maxTokens,\n              onChange: e => {\n                document.getElementById('max-tokens-value').textContent = e.target.value;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1045,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1041,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1004,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"save-settings\",\n            onClick: saveSettings,\n            children: \"Salva\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1059,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"cancel-settings\",\n            onClick: () => setShowSettings(false),\n            children: \"Annulla\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1060,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1058,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 993,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 992,\n      columnNumber: 17\n    }, this), showContextModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      role: \"dialog\",\n      \"aria-modal\": \"true\",\n      \"aria-labelledby\": \"context-modal-title\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            id: \"context-modal-title\",\n            children: \"Modifica Contesto RAG\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1071,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-btn\",\n            onClick: () => setShowContextModal(false),\n            \"aria-label\": \"Chiudi modale contesto\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1072,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1070,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-body\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"chat-context\",\n              children: \"Contesto per la Chat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1082,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: \"chat-context\",\n              value: currentContext,\n              onChange: e => setCurrentContext(e.target.value),\n              placeholder: \"Incolla qui il testo da usare come contesto per l'AI...\",\n              rows: \"15\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1083,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"form-help\",\n              children: \"Questo testo verr\\xE0 aggiunto al prompt di sistema per fornire contesto all'AI (RAG).\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1090,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1081,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1080,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: saveChatContext,\n            className: \"btn-primary\",\n            children: \"Salva Contesto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1096,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => setShowContextModal(false),\n            className: \"btn-secondary\",\n            children: \"Annulla\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1103,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1095,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1069,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1068,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 562,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"xs0qXUgfR06fyf9qSFQXr+b4kHc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","API_CONFIG","endpoint","model_name","temperature","max_tokens","App","_s","chatMessagesRef","userInputRef","sendButtonRef","modelSelectRef","userInput","setUserInput","messages","setMessages","isBotTyping","setIsBotTyping","settings","setSettings","model","maxTokens","showSettings","setShowSettings","sidebarOpen","setSidebarOpen","projects","setProjects","projectChats","setProjectChats","independentChats","setIndependentChats","currentProject","setCurrentProject","currentChat","setCurrentChat","showProjectForm","setShowProjectForm","editingProject","setEditingProject","projectForm","setProjectForm","name","description","prompt","showChatForm","setShowChatForm","chatForm","setChatForm","title","projectId","showContextModal","setShowContextModal","currentContext","setCurrentContext","currentBotMessage","setCurrentBotMessage","loadSupportedModels","loadProjects","loadIndependentChats","response","fetch","ok","data","json","length","loadChats","id","err","console","error","loadChatMessages","chatId","chat","messagesWithDates","map","msg","timestamp","Date","saveChatMessages","method","headers","body","JSON","stringify","statusText","openProjectForm","project","closeProjectForm","saveProject","e","preventDefault","trim","url","savedProject","prev","p","deleteProject","window","confirm","filter","deleteChat","isIndependent","c","openChatForm","closeChatForm","createChat","alert","project_id","newChat","saveChatContext","context","updatedChat","current","scrollTop","scrollHeight","log","models","sendMessage","text","userMsg","now","role","content","updatedMessages","getBotResponse","userMessage","systemMessage","systemMessageWithContext","stream","status","errorText","Error","reader","getReader","decoder","TextDecoder","buffer","botMessageContent","done","value","read","decode","lines","split","pop","line","startsWith","jsonStr","slice","_data$choices","_data$choices$","_data$choices$$delta","parse","choices","delta","warn","botMsg","errorMsg","message","formatMarkdown","replace","isCodeContent","patterns","some","RegExp","test","copyCodeToClipboard","code","navigator","clipboard","writeText","saveSettings","_modelSelectRef$curre","_document$getElementB","_document$getElementB2","parseFloat","document","getElementById","parseInt","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","stopPropagation","substring","ref","dangerouslySetInnerHTML","__html","toLocaleTimeString","hour","minute","onSubmit","autoComplete","htmlFor","type","accept","hidden","onChange","target","placeholder","required","disabled","rows","defaultValue","min","max","step","textContent","_c","$RefreshReg$"],"sources":["C:/Users/Lorenzo/Desktop/chatbot/react-frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './style.css';\n\n// Configurazione\nconst API_CONFIG = {\n    endpoint: \"/api\", // Utilizza il proxy di React\n    model_name: \"qwen/qwen3-8b:free\",\n    temperature: 0.7,\n    max_tokens: 13107\n};\n\nfunction App() {\n    // Elementi DOM\n    const chatMessagesRef = useRef(null);\n    const userInputRef = useRef(null);\n    const sendButtonRef = useRef(null);\n    const modelSelectRef = useRef(null);\n    \n    // Stato\n    const [userInput, setUserInput] = useState('');\n    const [messages, setMessages] = useState([]);\n    const [isBotTyping, setIsBotTyping] = useState(false);\n    const [settings, setSettings] = useState({\n        model: API_CONFIG.model_name,\n        temperature: API_CONFIG.temperature,\n        maxTokens: API_CONFIG.max_tokens\n    });\n    const [showSettings, setShowSettings] = useState(false);\n    const [sidebarOpen, setSidebarOpen] = useState(true);\n    const [projects, setProjects] = useState([]);\n    const [projectChats, setProjectChats] = useState([]); // Chat del progetto corrente\n    const [independentChats, setIndependentChats] = useState([]); // Chat indipendenti\n    const [currentProject, setCurrentProject] = useState(null);\n    const [currentChat, setCurrentChat] = useState(null);\n    const [showProjectForm, setShowProjectForm] = useState(false);\n    const [editingProject, setEditingProject] = useState(null);\n    const [projectForm, setProjectForm] = useState({\n        name: '',\n        description: '',\n        prompt: ''\n    });\n    const [showChatForm, setShowChatForm] = useState(false);\n    const [chatForm, setChatForm] = useState({\n        title: '',\n        projectId: null\n    });\n    const [showContextModal, setShowContextModal] = useState(false);\n    const [currentContext, setCurrentContext] = useState(\"\");\n    \n    // Stato streaming\n    const [currentBotMessage, setCurrentBotMessage] = useState('');\n    \n    // Inizializzazione\n    useEffect(() => {\n        loadSupportedModels();\n        loadProjects();\n        loadIndependentChats();\n    }, []);\n    \n    // Carica progetti dal backend\n    async function loadProjects() {\n        try {\n            const response = await fetch('/api/projects');\n            if (response.ok) {\n                const data = await response.json();\n                setProjects(data);\n                if (data.length > 0) {\n                    setCurrentProject(data[0]);\n                    loadChats(data[0].id);\n                }\n            }\n        } catch (err) {\n            console.error(\"Errore caricamento progetti:\", err);\n        }\n    }\n    \n    // Carica chat per un progetto\n    async function loadChats(projectId) {\n        try {\n            const response = await fetch(`/api/projects/${projectId}/chats`);\n            if (response.ok) {\n                const data = await response.json();\n                setProjectChats(data);\n            }\n        } catch (err) {\n            console.error(\"Errore caricamento chat:\", err);\n        }\n    }\n    \n    // Carica messaggi di una chat specifica\n    async function loadChatMessages(chatId) {\n        try {\n            const response = await fetch(`/api/chats/${chatId}`);\n            if (response.ok) {\n                const chat = await response.json();\n                \n                // Converti i timestamp da stringhe a oggetti Date\n                const messagesWithDates = (chat.messages || []).map(msg => ({\n                    ...msg,\n                    timestamp: new Date(msg.timestamp)\n                }));\n                \n                setMessages(messagesWithDates);\n            }\n        } catch (err) {\n            console.error(\"Errore caricamento messaggi:\", err);\n        }\n    }\n    \n    // Salva messaggi di una chat\n    async function saveChatMessages(chatId, messages) {\n        try {\n            const response = await fetch(`/api/chats/${chatId}`, {\n                method: 'PUT',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({ messages: messages })\n            });\n            \n            if (!response.ok) {\n                console.error(\"Errore salvataggio messaggi:\", response.statusText);\n            }\n        } catch (err) {\n            console.error(\"Errore salvataggio messaggi:\", err);\n        }\n    }\n    \n    // Carica chat indipendenti (per ora vuoto, da implementare nel backend)\n    async function loadIndependentChats() {\n        try {\n            // TODO: Implementare API per chat indipendenti nel backend\n            // const response = await fetch('/api/independent-chats');\n            // if (response.ok) {\n            //     const data = await response.json();\n            //     setIndependentChats(data);\n            // }\n            setIndependentChats([]);\n        } catch (err) {\n            console.error(\"Errore caricamento chat indipendenti:\", err);\n        }\n    }\n    \n    // Apri form per nuovo progetto\n    function openProjectForm(project = null) {\n        if (project) {\n            setEditingProject(project);\n            setProjectForm({\n                name: project.name,\n                description: project.description || '',\n                prompt: project.prompt || ''\n            });\n        } else {\n            setEditingProject(null);\n            setProjectForm({\n                name: '',\n                description: '',\n                prompt: ''\n            });\n        }\n        setShowProjectForm(true);\n    }\n    \n    // Chiudi form progetto\n    function closeProjectForm() {\n        setShowProjectForm(false);\n        setEditingProject(null);\n        setProjectForm({\n            name: '',\n            description: '',\n            prompt: ''\n        });\n    }\n    \n    // Salva progetto (crea o modifica)\n    async function saveProject(e) {\n        e.preventDefault();\n        if (!projectForm.name.trim()) return;\n        \n        try {\n            const url = editingProject ? `/api/projects/${editingProject.id}` : '/api/projects';\n            const method = editingProject ? 'PUT' : 'POST';\n            \n            const response = await fetch(url, {\n                method: method,\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({\n                    name: projectForm.name.trim(),\n                    description: projectForm.description.trim(),\n                    prompt: projectForm.prompt.trim()\n                })\n            });\n            \n            if (response.ok) {\n                const savedProject = await response.json();\n                \n                if (editingProject) {\n                    // Aggiorna progetto esistente\n                    setProjects(prev => prev.map(p => p.id === editingProject.id ? savedProject : p));\n                    if (currentProject?.id === editingProject.id) {\n                        setCurrentProject(savedProject);\n                    }\n                } else {\n                    // Aggiungi nuovo progetto\n                    setProjects(prev => [...prev, savedProject]);\n                    setCurrentProject(savedProject);\n                    setProjectChats([]);\n                }\n                \n                closeProjectForm();\n            }\n        } catch (err) {\n            console.error(\"Errore salvataggio progetto:\", err);\n        }\n    }\n    \n    // Elimina progetto\n    async function deleteProject(projectId) {\n        if (!window.confirm(\"Sei sicuro di voler eliminare questo progetto?\")) return;\n        \n        try {\n            const response = await fetch(`/api/projects/${projectId}`, {\n                method: 'DELETE'\n            });\n            \n            if (response.ok) {\n                setProjects(prev => prev.filter(p => p.id !== projectId));\n                if (currentProject?.id === projectId) {\n                    setCurrentProject(null);\n                    setProjectChats([]);\n                }\n            }\n        } catch (err) {\n            console.error(\"Errore eliminazione progetto:\", err);\n        }\n    }\n    \n    // Elimina chat\n    async function deleteChat(chatId, isIndependent = false) {\n        if (!window.confirm(\"Sei sicuro di voler eliminare questa chat? Questa azione non può essere annullata.\")) return;\n        \n        try {\n            const response = await fetch(`/api/chats/${chatId}`, {\n                method: 'DELETE'\n            });\n            \n            if (response.ok) {\n                if (isIndependent) {\n                    setIndependentChats(prev => prev.filter(c => c.id !== chatId));\n                } else {\n                    setProjectChats(prev => prev.filter(c => c.id !== chatId));\n                }\n                \n                // Se la chat eliminata è quella corrente, deseleziona\n                if (currentChat?.id === chatId) {\n                    setCurrentChat(null);\n                    setMessages([]);\n                }\n            }\n        } catch (err) {\n            console.error(\"Errore eliminazione chat:\", err);\n        }\n    }\n    \n    // Apri form per nuova chat\n    function openChatForm() {\n        setChatForm({\n            title: '',\n            projectId: currentProject?.id || null\n        });\n        setShowChatForm(true);\n    }\n    \n    // Chiudi form chat\n    function closeChatForm() {\n        setShowChatForm(false);\n        setChatForm({\n            title: '',\n            projectId: null\n        });\n    }\n    \n    // Crea nuova chat\n    async function createChat(e) {\n        e.preventDefault();\n        if (!chatForm.title.trim()) return;\n        \n        try {\n            // Per ora, le chat indipendenti non sono supportate dal backend\n            // Creiamo sempre una chat di progetto\n            const projectId = chatForm.projectId || (projects.length > 0 ? projects[0].id : null);\n            \n            if (!projectId) {\n                alert(\"Crea prima un progetto per poter creare chat!\");\n                return;\n            }\n            \n            const response = await fetch('/api/chats', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({ \n                    project_id: projectId, \n                    title: chatForm.title.trim(),\n                    messages: []\n                })\n            });\n            \n            if (response.ok) {\n                const newChat = await response.json();\n                \n                // Aggiorna la lista delle chat del progetto\n                setProjectChats(prev => [...prev, newChat]);\n                \n                // Se è il progetto corrente, seleziona la chat\n                if (currentProject?.id === projectId) {\n                    setCurrentChat(newChat);\n                    setMessages([]);\n                }\n                \n                closeChatForm();\n            }\n        } catch (err) {\n            console.error(\"Errore creazione chat:\", err);\n        }\n    }\n    \n    // Salva il contesto della chat\n    async function saveChatContext() {\n        if (!currentChat) return;\n\n        try {\n            const response = await fetch(`/api/chats/${currentChat.id}`, {\n                method: 'PUT',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({ context: currentContext })\n            });\n\n            if (response.ok) {\n                const updatedChat = await response.json();\n                // Aggiorna la chat corrente nello stato per riflettere il nuovo contesto\n                setCurrentChat(updatedChat);\n                // Aggiorna anche la lista delle chat\n                if (updatedChat.project_id) {\n                    setProjectChats(prev => prev.map(c => c.id === updatedChat.id ? updatedChat : c));\n                } else {\n                    setIndependentChats(prev => prev.map(c => c.id === updatedChat.id ? updatedChat : c));\n                }\n            }\n        } catch (err) {\n            console.error(\"Errore salvataggio contesto:\", err);\n        } finally {\n            setShowContextModal(false);\n        }\n    }\n    \n    // Effetto per lo scroll automatico\n    useEffect(() => {\n        if (chatMessagesRef.current) {\n            chatMessagesRef.current.scrollTop = chatMessagesRef.current.scrollHeight;\n        }\n    }, [messages, isBotTyping]);\n    \n    // Carica modelli dal backend\n    async function loadSupportedModels() {\n        try {\n            const response = await fetch('/models');\n            if (response.ok) {\n                const data = await response.json();\n                console.log(\"Modelli supportati:\", data.models);\n            }\n        } catch (err) {\n            console.error(\"Errore caricamento modelli:\", err);\n        }\n    }\n    \n    \n    // Invio messaggio\n    function sendMessage(e) {\n        e.preventDefault();\n        const text = userInput.trim();\n        if (!text) return;\n        \n        // Aggiungi messaggio utente\n        const userMsg = {\n            id: Date.now(),\n            role: 'user',\n            content: text,\n            timestamp: new Date()\n        };\n        \n        const updatedMessages = [...messages, userMsg];\n        setMessages(updatedMessages);\n        setUserInput('');\n        setIsBotTyping(true);\n        setCurrentBotMessage('');\n        \n        // Salva i messaggi nel database se c'è una chat corrente\n        if (currentChat) {\n            saveChatMessages(currentChat.id, updatedMessages);\n        }\n        \n        // Ottieni risposta del bot\n        getBotResponse(text);\n    }\n    \n    // Risposta Bot (Streaming)\n    async function getBotResponse(userMessage) {\n        try {\n            console.log(\"Inviando richiesta al bot con modello:\", settings.model);\n            \n            const systemMessage = \"You are KrakenGPT, a helpful AI coding partner.\";\n            const context = currentChat?.context || \"\";\n            const systemMessageWithContext = context \n                ? `${systemMessage}\\n\\n--- CONTESTO ---\\n${context}\\n--- FINE CONTESTO ---`\n                : systemMessage;\n\n            const response = await fetch('/v1/chat/completions', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({\n                    model: settings.model,\n                    messages: [\n                        { role: \"system\", content: systemMessageWithContext },\n                        { role: \"user\", content: userMessage }\n                    ],\n                    temperature: settings.temperature,\n                    max_tokens: settings.maxTokens,\n                    stream: true\n                })\n            });\n            \n            console.log(\"Risposta ricevuta:\", response.status, response.statusText);\n            \n            if (!response.ok) {\n                const errorText = await response.text();\n                console.error(\"Errore HTTP:\", response.status, errorText);\n                throw new Error(`HTTP ${response.status}: ${errorText}`);\n            }\n            \n            const reader = response.body.getReader();\n            const decoder = new TextDecoder();\n            let buffer = \"\";\n            let botMessageContent = \"\";\n            \n            while (true) {\n                const { done, value } = await reader.read();\n                if (done) break;\n                \n                buffer += decoder.decode(value, { stream: true });\n                const lines = buffer.split(\"\\n\");\n                buffer = lines.pop();\n                \n                for (const line of lines) {\n                    if (line.startsWith(\"data: \")) {\n                        const jsonStr = line.slice(6);\n                        if (jsonStr === \"[DONE]\") break;\n                        \n                        try {\n                            const data = JSON.parse(jsonStr);\n                            console.log(\"Dati ricevuti:\", data);\n                            const content = data.choices?.[0]?.delta?.content;\n                            if (content) {\n                                botMessageContent += content;\n                                setCurrentBotMessage(botMessageContent);\n                            }\n                        } catch (e) {\n                            console.warn(\"Parse error:\", e, \"Line:\", line);\n                        }\n                    }\n                }\n            }\n            \n            console.log(\"Contenuto finale del bot:\", botMessageContent);\n            \n            // Aggiungi messaggio completo del bot\n            const botMsg = {\n                id: Date.now(),\n                role: 'bot',\n                content: botMessageContent || \"❌ Nessuna risposta ricevuta dal modello.\",\n                timestamp: new Date()\n            };\n            \n            setMessages(prev => {\n                const updatedMessages = [...prev, botMsg];\n                \n                // Salva i messaggi nel database se c'è una chat corrente\n                if (currentChat) {\n                    saveChatMessages(currentChat.id, updatedMessages);\n                }\n                \n                return updatedMessages;\n            });\n        } catch (error) {\n            console.error(\"Errore completo:\", error);\n            const errorMsg = {\n                id: Date.now(),\n                role: 'bot',\n                content: `❌ Errore: ${error.message}`,\n                timestamp: new Date()\n            };\n            setMessages(prev => {\n                const updatedMessages = [...prev, errorMsg];\n                \n                // Salva i messaggi nel database se c'è una chat corrente\n                if (currentChat) {\n                    saveChatMessages(currentChat.id, updatedMessages);\n                }\n                \n                return updatedMessages;\n            });\n        } finally {\n            setIsBotTyping(false);\n            setCurrentBotMessage('');\n        }\n    }\n    \n    // Formatta il contenuto markdown\n    function formatMarkdown(text) {\n        if (!text) return '';\n        \n        return text\n            .replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>')\n            .replace(/\\*(.*?)\\*/g, '<em>$1</em>')\n            .replace(/`(.*?)`/g, '<code>$1</code>')\n            .replace(/^### (.*$)/gm, '<h3>$1</h3>')\n            .replace(/^## (.*$)/gm, '<h2>$1</h2>')\n            .replace(/^# (.*$)/gm, '<h1>$1</h1>')\n            .replace(/^\\s*\\* (.*$)/gm, '<li>$1</li>')\n            .replace(/(<li>.*<\\/li>)/gs, '<ul>$1</ul>')\n            .replace(/\\n/g, '<br>');\n    }\n    \n    // Determina se il contenuto è codice\n    function isCodeContent(content) {\n        const patterns = [\n            /^\\s*[\\{\\[\\(\\w]+\\s*[=\\{\\[\\(]/,\n            /function\\s+\\w+\\s*\\(/,\n            /(const|let)\\s+\\w+\\s*=/,\n            /class\\s+\\w+/,\n            /import\\s+.*\\s+from/,\n            /export\\s+(default\\s+)?(function|class|const|let)/,\n            /\\w+\\s*\\([^)]*\\)\\s*\\{/,\n            /```[\\s\\S]*```/\n        ];\n        return patterns.some(p => new RegExp(p).test(content));\n    }\n    \n    // Copia codice negli appunti\n    function copyCodeToClipboard(code) {\n        navigator.clipboard.writeText(code);\n    }\n    \n    // Salva impostazioni\n    function saveSettings() {\n        setSettings({\n            model: modelSelectRef.current?.value || settings.model,\n            temperature: parseFloat(document.getElementById('temperature')?.value || settings.temperature),\n            maxTokens: parseInt(document.getElementById('max-tokens')?.value || settings.maxTokens)\n        });\n        setShowSettings(false);\n    }\n    \n    return (\n        <div className=\"app-container\">\n            {/* Sidebar */}\n            <aside className={`sidebar ${sidebarOpen ? 'open' : ''}`}>\n                {/* Header Sidebar con pulsante chiudi */}\n                <div className=\"sidebar-header\">\n                    <h2>KrakenGPT</h2>\n                    <button \n                        className=\"icon-btn close-sidebar-btn\" \n                        onClick={() => setSidebarOpen(false)}\n                        title=\"Chiudi sidebar\"\n                    >\n                        ✕\n                    </button>\n                </div>\n                \n                {/* Sezione Progetti */}\n                <section className=\"sidebar-section\">\n                    <div className=\"section-header\">\n                        <h3>📂 Progetti</h3>\n                        <button \n                            className=\"icon-btn new-project-btn\" \n                            onClick={() => openProjectForm()}\n                            title=\"Nuovo Progetto\" \n                            aria-label=\"Crea nuovo progetto\"\n                        >\n                            +\n                        </button>\n                    </div>\n                    <ul className=\"projects-list\">\n                        {projects.map(project => (\n                            <li \n                                key={project.id} \n                                className={`sidebar-item project-item ${currentProject?.id === project.id ? 'active' : ''}`}\n                            >\n                                <div \n                                    className=\"project-name\"\n                                    onClick={() => {\n                                        setCurrentProject(project);\n                                        loadChats(project.id);\n                                    }}\n                                >\n                                    {project.name}\n                                </div>\n                                <div className=\"project-actions\">\n                                    <button \n                                        className=\"icon-btn edit-project-btn\" \n                                        onClick={(e) => {\n                                            e.stopPropagation();\n                                            openProjectForm(project);\n                                        }}\n                                        title=\"Modifica progetto\"\n                                        aria-label=\"Modifica progetto\"\n                                    >\n                                        ✎\n                                    </button>\n                                    <button \n                                        className=\"icon-btn delete-project-btn\" \n                                        onClick={(e) => {\n                                            e.stopPropagation();\n                                            deleteProject(project.id);\n                                        }}\n                                        title=\"Elimina progetto\"\n                                        aria-label=\"Elimina progetto\"\n                                    >\n                                        ⊗\n                                    </button>\n                                </div>\n                            </li>\n                        ))}\n                    </ul>\n                </section>\n                \n                {/* Sezione Chat Recenti */}\n                <section className=\"sidebar-section\">\n                    <div className=\"section-header\">\n                        <h3>💬 Chat recenti</h3>\n                        <button \n                            className=\"icon-btn new-chat-btn\" \n                            onClick={openChatForm}\n                            title=\"Nuova Chat\" \n                            aria-label=\"Avvia nuova chat\"\n                        >\n                            +\n                        </button>\n                    </div>\n                    <ul className=\"conversation-history\">\n                        {projectChats.map(chat => (\n                            <li \n                                key={chat.id} \n                                className={`sidebar-item chat-item ${currentChat?.id === chat.id ? 'active' : ''}`}\n                            >\n                                <div \n                                    className=\"chat-content\"\n                                    onClick={() => {\n                                        setCurrentChat(chat);\n                                        loadChatMessages(chat.id);\n                                    }}\n                                >\n                                    <div className=\"chat-info\">\n                                        <span className=\"chat-title\">{chat.title}</span>\n                                        <span className=\"chat-project\">{currentProject?.name}</span>\n                                    </div>\n                                </div>\n                                <div className=\"chat-actions\">\n                                    <button \n                                        className=\"icon-btn delete-chat-btn\" \n                                        onClick={(e) => {\n                                            e.stopPropagation();\n                                            deleteChat(chat.id, false);\n                                        }}\n                                        title=\"Elimina chat\"\n                                        aria-label=\"Elimina chat\"\n                                    >\n                                        ⊗\n                                    </button>\n                                </div>\n                            </li>\n                        ))}\n                        {independentChats.map(chat => (\n                            <li \n                                key={`ind-${chat.id}`} \n                                className={`sidebar-item chat-item ${currentChat?.id === chat.id ? 'active' : ''}`}\n                            >\n                                <div \n                                    className=\"chat-content\"\n                                    onClick={() => {\n                                        setCurrentChat(chat);\n                                        loadChatMessages(chat.id);\n                                    }}\n                                >\n                                    <div className=\"chat-info\">\n                                        <span className=\"chat-title\">{chat.title}</span>\n                                        <span className=\"chat-project independent\">Indipendente</span>\n                                    </div>\n                                </div>\n                                <div className=\"chat-actions\">\n                                    <button \n                                        className=\"icon-btn delete-chat-btn\" \n                                        onClick={(e) => {\n                                            e.stopPropagation();\n                                            deleteChat(chat.id, true);\n                                        }}\n                                        title=\"Elimina chat\"\n                                        aria-label=\"Elimina chat\"\n                                    >\n                                        ⊗\n                                    </button>\n                                </div>\n                            </li>\n                        ))}\n                    </ul>\n                </section>\n                \n                {/* Footer Sidebar */}\n                <footer className=\"sidebar-footer\">\n                    <div className=\"user-info\">\n                        <div className=\"user-avatar\" aria-hidden=\"true\">👤</div>\n                        <span className=\"user-name\">Utente</span>\n                    </div>\n                    <button className=\"settings-btn\" onClick={() => setShowSettings(true)}>⚙ Impostazioni</button>\n                </footer>\n            </aside>\n            \n            {/* Main Container */}\n            <main className=\"main-container\">\n                {/* Pulsante per aprire sidebar quando è chiusa */}\n                {!sidebarOpen && (\n                    <button \n                        className=\"open-sidebar-btn\"\n                        onClick={() => setSidebarOpen(true)}\n                        title=\"Apri sidebar\"\n                    >\n                        ☰\n                    </button>\n                )}\n                \n                {/* Header Chat */}\n                <header className=\"chat-header\">\n                    <div className=\"chat-header-main\">\n                        <div className=\"avatar\" aria-hidden=\"true\">🤖</div>\n                        <h1 id=\"chat-title\">\n                            {currentChat ? currentChat.title : 'KrakenGPT — Nuova Chat'}\n                        </h1>\n                        <button className=\"icon-btn delete-chat-btn\" title=\"Elimina Chat\" aria-label=\"Elimina chat corrente\">🗑️</button>\n                    </div>\n                    {currentChat && (\n                        <div className=\"chat-context-bar\">\n                            <span className=\"context-label\">Contesto RAG:</span>\n                            <span className=\"context-preview\">\n                                {currentChat.context ? `${currentChat.context.substring(0, 100)}...` : 'Nessun contesto'}\n                            </span>\n                            <button \n                                className=\"edit-context-btn\"\n                                onClick={() => {\n                                    setCurrentContext(currentChat.context || \"\");\n                                    setShowContextModal(true);\n                                }}\n                            >\n                                Modifica Contesto\n                            </button>\n                        </div>\n                    )}\n                </header>\n                \n                {/* Messaggi Chat */}\n                <section className=\"chat-messages\" ref={chatMessagesRef} aria-live=\"polite\" aria-atomic=\"false\">\n                    {messages.map(msg => (\n                        <div key={msg.id} className={`message ${msg.role}`}>\n                            <div className=\"avatar\">\n                                {msg.role === 'user' ? '👤' : '🤖'}\n                            </div>\n                            <div className=\"message-content\">\n                                {isCodeContent(msg.content) ? (\n                                    <pre>\n                                        <code>{msg.content.trim()}</code>\n                                        <button \n                                            className=\"copy-button\" \n                                            onClick={() => copyCodeToClipboard(msg.content)}\n                                        >\n                                            Copy\n                                        </button>\n                                    </pre>\n                                ) : (\n                                    <div dangerouslySetInnerHTML={{ __html: formatMarkdown(msg.content) }} />\n                                )}\n                            </div>\n                            <div className=\"message-time\">\n                                {msg.timestamp.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\n                            </div>\n                        </div>\n                    ))}\n                    \n                    {/* Messaggio in streaming */}\n                    {isBotTyping && currentBotMessage && (\n                        <div className=\"message bot streaming\">\n                            <div className=\"avatar\">🤖</div>\n                            <div className=\"message-content\">\n                                <div dangerouslySetInnerHTML={{ __html: formatMarkdown(currentBotMessage) }} />\n                            </div>\n                        </div>\n                    )}\n                    \n                    {/* Indicatore di digitazione */}\n                    {isBotTyping && !currentBotMessage && (\n                        <div className=\"enhanced-typing-indicator\">\n                            <div className=\"avatar\">🤖</div>\n                            <div className=\"typing-text\">\n                                <span></span>\n                                <span></span>\n                                <span></span>\n                            </div>\n                        </div>\n                    )}\n                </section>\n                \n                {/* Input Chat */}\n                <footer className=\"chat-input-container\">\n                    <form className=\"input-row\" onSubmit={sendMessage} autoComplete=\"off\">\n                        <label htmlFor=\"file-input\" className=\"file-upload-btn\">\n                            📎\n                            <input type=\"file\" id=\"file-input\" accept=\"image/*,.pdf,.txt\" hidden />\n                        </label>\n                        <input\n                            type=\"text\"\n                            value={userInput}\n                            onChange={(e) => setUserInput(e.target.value)}\n                            ref={userInputRef}\n                            placeholder=\"Chiedi qualcosa a KrakenGPT...\"\n                            aria-label=\"Inserisci messaggio\"\n                            required\n                        />\n                        <button \n                            type=\"submit\" \n                            ref={sendButtonRef} \n                            aria-label=\"Invia messaggio\"\n                            disabled={isBotTyping}\n                        >\n                            ➤\n                        </button>\n                    </form>\n                    <div className=\"input-warning\">\n                        <span>KrakenGPT può commettere errori. Verifica le informazioni importanti.</span>\n                    </div>\n                </footer>\n            </main>\n            \n            {/* Modale Form Progetto */}\n            {showProjectForm && (\n                <div className=\"modal\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"project-form-title\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h2 id=\"project-form-title\">\n                                {editingProject ? 'Modifica Progetto' : 'Nuovo Progetto'}\n                            </h2>\n                            <button \n                                className=\"close-btn\" \n                                onClick={closeProjectForm}\n                                aria-label=\"Chiudi form progetto\"\n                            >\n                                &times;\n                            </button>\n                        </div>\n                        <form className=\"modal-body\" onSubmit={saveProject}>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"project-name\">Nome Progetto *</label>\n                                <input \n                                    type=\"text\" \n                                    id=\"project-name\" \n                                    value={projectForm.name}\n                                    onChange={(e) => setProjectForm(prev => ({ ...prev, name: e.target.value }))}\n                                    placeholder=\"Inserisci il nome del progetto\"\n                                    required\n                                />\n                            </div>\n                            \n                            <div className=\"form-group\">\n                                <label htmlFor=\"project-description\">Descrizione</label>\n                                <textarea \n                                    id=\"project-description\" \n                                    value={projectForm.description}\n                                    onChange={(e) => setProjectForm(prev => ({ ...prev, description: e.target.value }))}\n                                    placeholder=\"Descrizione del progetto (opzionale)\"\n                                    rows=\"3\"\n                                />\n                            </div>\n                            \n                            <div className=\"form-group\">\n                                <label htmlFor=\"project-prompt\">Project Prompt</label>\n                                <textarea \n                                    id=\"project-prompt\" \n                                    value={projectForm.prompt}\n                                    onChange={(e) => setProjectForm(prev => ({ ...prev, prompt: e.target.value }))}\n                                    placeholder=\"Prompt di sistema per questo progetto (es: 'Sei un assistente specializzato in React e JavaScript...')\"\n                                    rows=\"4\"\n                                />\n                                <small className=\"form-help\">\n                                    Questo prompt verrà utilizzato come contesto di sistema per tutte le chat di questo progetto.\n                                </small>\n                            </div>\n                        </form>\n                        <div className=\"modal-footer\">\n                            <button \n                                type=\"button\" \n                                onClick={saveProject}\n                                className=\"btn-primary\"\n                                disabled={!projectForm.name.trim()}\n                            >\n                                {editingProject ? 'Salva Modifiche' : 'Crea Progetto'}\n                            </button>\n                            <button \n                                type=\"button\" \n                                onClick={closeProjectForm}\n                                className=\"btn-secondary\"\n                            >\n                                Annulla\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            )}\n            \n            {/* Modale Form Chat */}\n            {showChatForm && (\n                <div className=\"modal\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"chat-form-title\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h2 id=\"chat-form-title\">Nuova Chat</h2>\n                            <button \n                                className=\"close-btn\" \n                                onClick={closeChatForm}\n                                aria-label=\"Chiudi form chat\"\n                            >\n                                &times;\n                            </button>\n                        </div>\n                        <form className=\"modal-body\" onSubmit={createChat}>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"chat-title\">Titolo Chat *</label>\n                                <input \n                                    type=\"text\" \n                                    id=\"chat-title\" \n                                    value={chatForm.title}\n                                    onChange={(e) => setChatForm(prev => ({ ...prev, title: e.target.value }))}\n                                    placeholder=\"Inserisci il titolo della chat\"\n                                    required\n                                />\n                            </div>\n                            \n                            <div className=\"form-group\">\n                                <label htmlFor=\"chat-project\">Progetto</label>\n                                <select \n                                    id=\"chat-project\" \n                                    value={chatForm.projectId || ''}\n                                    onChange={(e) => setChatForm(prev => ({ ...prev, projectId: e.target.value || null }))}\n                                >\n                                    <option value=\"\">Nessun progetto (Chat indipendente)</option>\n                                    {projects.map(project => (\n                                        <option key={project.id} value={project.id}>\n                                            {project.name}\n                                        </option>\n                                    ))}\n                                </select>\n                                <small className=\"form-help\">\n                                    Scegli un progetto per associare la chat, oppure lascia vuoto per una chat indipendente.\n                                </small>\n                            </div>\n                        </form>\n                        <div className=\"modal-footer\">\n                            <button \n                                type=\"submit\" \n                                onClick={createChat}\n                                className=\"btn-primary\"\n                                disabled={!chatForm.title.trim()}\n                            >\n                                Crea Chat\n                            </button>\n                            <button \n                                type=\"button\" \n                                onClick={closeChatForm}\n                                className=\"btn-secondary\"\n                            >\n                                Annulla\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            )}\n            \n            {/* Modale Impostazioni */}\n            {showSettings && (\n                <div className=\"modal\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"settings-title\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h2 id=\"settings-title\">Impostazioni</h2>\n                            <button \n                                className=\"close-btn\" \n                                onClick={() => setShowSettings(false)}\n                                aria-label=\"Chiudi impostazioni\"\n                            >\n                                &times;\n                            </button>\n                        </div>\n                        <div className=\"modal-body\">\n                            <div className=\"setting-group\">\n                                <label htmlFor=\"model-select\">Modello</label>\n                                <select \n                                    id=\"model-select\" \n                                    ref={modelSelectRef}\n                                    defaultValue={settings.model}\n                                >\n                                    <option value=\"qwen/qwen3-8b:free\">Qwen3 8B (Free)</option>\n                                    <option value=\"qwen/qwen3-coder-480b-a35b:free\">Qwen3 Coder 480B A35B (Free)</option>\n                                    <option value=\"mistralai/mistral-7b-instruct:free\">Mistral 7B (Free)</option>\n                                    <option value=\"google/gemma-7b-it:free\">Gemma 7B (Free)</option>\n                                    <option value=\"meta-llama/llama-3.1-8b-instruct:free\">Llama 3.1 8B (Free)</option>\n                                    <option value=\"microsoft/phi-3-mini-128k-instruct:free\">Phi-3 Mini (Free)</option>\n                                    <option value=\"openchat/openchat-7b:free\">OpenChat 7B (Free)</option>\n                                    <option value=\"neversleep/llama-3-lumimaid-8b:free\">Llama 3 Lumimaid (Free)</option>\n                                    <option value=\"sao10k/fimbulvetr-11b-v2:free\">Fimbulvetr 11B (Free)</option>\n                                </select>\n                            </div>\n                            \n                            <div className=\"setting-group\">\n                                <label htmlFor=\"temperature\">\n                                    Temperatura: <span id=\"temperature-value\">{settings.temperature}</span>\n                                </label>\n                                <input \n                                    type=\"range\" \n                                    id=\"temperature\" \n                                    min=\"0\" \n                                    max=\"1\" \n                                    step=\"0.1\" \n                                    defaultValue={settings.temperature}\n                                    onChange={(e) => {\n                                        document.getElementById('temperature-value').textContent = e.target.value;\n                                    }}\n                                />\n                            </div>\n                            \n                            <div className=\"setting-group\">\n                                <label htmlFor=\"max-tokens\">\n                                    Token massimi: <span id=\"max-tokens-value\">{settings.maxTokens}</span>\n                                </label>\n                                <input \n                                    type=\"range\" \n                                    id=\"max-tokens\" \n                                    min=\"100\" \n                                    max=\"32768\" \n                                    step=\"100\" \n                                    defaultValue={settings.maxTokens}\n                                    onChange={(e) => {\n                                        document.getElementById('max-tokens-value').textContent = e.target.value;\n                                    }}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"modal-footer\">\n                            <button id=\"save-settings\" onClick={saveSettings}>Salva</button>\n                            <button id=\"cancel-settings\" onClick={() => setShowSettings(false)}>Annulla</button>\n                        </div>\n                    </div>\n                </div>\n            )}\n            \n            {/* Modale Contesto RAG */}\n            {showContextModal && (\n                <div className=\"modal\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"context-modal-title\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h2 id=\"context-modal-title\">Modifica Contesto RAG</h2>\n                            <button \n                                className=\"close-btn\" \n                                onClick={() => setShowContextModal(false)}\n                                aria-label=\"Chiudi modale contesto\"\n                            >\n                                &times;\n                            </button>\n                        </div>\n                        <div className=\"modal-body\">\n                            <div className=\"form-group\">\n                                <label htmlFor=\"chat-context\">Contesto per la Chat</label>\n                                <textarea \n                                    id=\"chat-context\" \n                                    value={currentContext}\n                                    onChange={(e) => setCurrentContext(e.target.value)}\n                                    placeholder=\"Incolla qui il testo da usare come contesto per l'AI...\"\n                                    rows=\"15\"\n                                />\n                                <small className=\"form-help\">\n                                    Questo testo verrà aggiunto al prompt di sistema per fornire contesto all'AI (RAG).\n                                </small>\n                            </div>\n                        </div>\n                        <div className=\"modal-footer\">\n                            <button \n                                type=\"button\" \n                                onClick={saveChatContext}\n                                className=\"btn-primary\"\n                            >\n                                Salva Contesto\n                            </button>\n                            <button \n                                type=\"button\" \n                                onClick={() => setShowContextModal(false)}\n                                className=\"btn-secondary\"\n                            >\n                                Annulla\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}